#ifndef AMISSL_INTERFACE_DEF_H
#define AMISSL_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 51.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef AMISSL_AMISSL_H
#include <amissl/amissl.h>
#endif

struct AmiSSLIFace
{
  struct InterfaceData Data;

  ULONG APICALL (*Obtain)(struct AmiSSLIFace *Self);
  ULONG APICALL (*Release)(struct AmiSSLIFace *Self);
  void APICALL (*Expunge)(struct AmiSSLIFace *Self);
  struct Interface * APICALL (*Clone)(struct AmiSSLIFace *Self);
  void APICALL (*InternalInitAmiSSL)(struct AmiSSLIFace *Self, void * amisslinit);
  long APICALL (*InitAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
  long APICALL (*InitAmiSSL)(struct AmiSSLIFace *Self, ...);
  long APICALL (*CleanupAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
  long APICALL (*CleanupAmiSSL)(struct AmiSSLIFace *Self, ...);
  long APICALL (*IsCipherAvailable)(struct AmiSSLIFace *Self, long cipher);
  void APICALL (*Reserved1)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved2)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved3)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved4)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved5)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved6)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved7)(struct AmiSSLIFace *Self);
  void APICALL (*Reserved8)(struct AmiSSLIFace *Self);
  ASN1_TYPE * APICALL (*ASN1_TYPE_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_TYPE_free)(struct AmiSSLIFace *Self, ASN1_TYPE * a);
  ASN1_TYPE * APICALL (*d2i_ASN1_TYPE)(struct AmiSSLIFace *Self, ASN1_TYPE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_TYPE)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_ANY_it)(struct AmiSSLIFace *Self);
  int APICALL (*ASN1_TYPE_get)(struct AmiSSLIFace *Self, ASN1_TYPE * a);
  void APICALL (*ASN1_TYPE_set)(struct AmiSSLIFace *Self, ASN1_TYPE * a, int type, void * value);
  ASN1_OBJECT * APICALL (*ASN1_OBJECT_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_OBJECT_free)(struct AmiSSLIFace *Self, ASN1_OBJECT * a);
  int APICALL (*i2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT * a, unsigned char ** pp);
  ASN1_OBJECT * APICALL (*c2i_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT ** a, unsigned char ** pp, long length);
  ASN1_OBJECT * APICALL (*d2i_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT ** a, unsigned char ** pp, long length);
  const ASN1_ITEM * APICALL (*ASN1_OBJECT_it)(struct AmiSSLIFace *Self);
  ASN1_STRING * APICALL (*ASN1_STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_STRING_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
  ASN1_STRING * APICALL (*ASN1_STRING_dup)(struct AmiSSLIFace *Self, ASN1_STRING * a);
  ASN1_STRING * APICALL (*ASN1_STRING_type_new)(struct AmiSSLIFace *Self, int type);
  int APICALL (*ASN1_STRING_cmp)(struct AmiSSLIFace *Self, ASN1_STRING * a, ASN1_STRING * b);
  int APICALL (*ASN1_STRING_set)(struct AmiSSLIFace *Self, ASN1_STRING * str, const void * data, int len);
  int APICALL (*ASN1_STRING_length)(struct AmiSSLIFace *Self, ASN1_STRING * x);
  void APICALL (*ASN1_STRING_length_set)(struct AmiSSLIFace *Self, ASN1_STRING * x, int n);
  int APICALL (*ASN1_STRING_type)(struct AmiSSLIFace *Self, ASN1_STRING * x);
  unsigned char * APICALL (*ASN1_STRING_data)(struct AmiSSLIFace *Self, ASN1_STRING * x);
  ASN1_BIT_STRING * APICALL (*ASN1_BIT_STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_BIT_STRING_free)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a);
  ASN1_BIT_STRING * APICALL (*d2i_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_BIT_STRING_it)(struct AmiSSLIFace *Self);
  int APICALL (*i2c_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, unsigned char ** pp);
  ASN1_BIT_STRING * APICALL (*c2i_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING ** a, unsigned char ** pp, long length);
  int APICALL (*ASN1_BIT_STRING_set)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, unsigned char * d, int length);
  int APICALL (*ASN1_BIT_STRING_set_bit)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, int n, int value);
  int APICALL (*ASN1_BIT_STRING_get_bit)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, int n);
  int APICALL (*ASN1_BIT_STRING_name_print)(struct AmiSSLIFace *Self, BIO * out, ASN1_BIT_STRING * bs, BIT_STRING_BITNAME * tbl, int indent);
  int APICALL (*ASN1_BIT_STRING_num_asc)(struct AmiSSLIFace *Self, char * name, BIT_STRING_BITNAME * tbl);
  int APICALL (*ASN1_BIT_STRING_set_asc)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * bs, char * name, int value, BIT_STRING_BITNAME * tbl);
  int APICALL (*i2d_ASN1_BOOLEAN)(struct AmiSSLIFace *Self, int a, unsigned char ** pp);
  int APICALL (*d2i_ASN1_BOOLEAN)(struct AmiSSLIFace *Self, int * a, unsigned char ** pp, long length);
  ASN1_INTEGER * APICALL (*ASN1_INTEGER_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_INTEGER_free)(struct AmiSSLIFace *Self, ASN1_INTEGER * a);
  ASN1_INTEGER * APICALL (*d2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_INTEGER_it)(struct AmiSSLIFace *Self);
  int APICALL (*i2c_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, unsigned char ** pp);
  ASN1_INTEGER * APICALL (*c2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, unsigned char ** pp, long length);
  ASN1_INTEGER * APICALL (*d2i_ASN1_UINTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, unsigned char ** pp, long length);
  ASN1_INTEGER * APICALL (*ASN1_INTEGER_dup)(struct AmiSSLIFace *Self, ASN1_INTEGER * x);
  int APICALL (*ASN1_INTEGER_cmp)(struct AmiSSLIFace *Self, ASN1_INTEGER * x, ASN1_INTEGER * y);
  ASN1_ENUMERATED * APICALL (*ASN1_ENUMERATED_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_ENUMERATED_free)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a);
  ASN1_ENUMERATED * APICALL (*d2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, ASN1_ENUMERATED ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_ENUMERATED_it)(struct AmiSSLIFace *Self);
  int APICALL (*ASN1_UTCTIME_check)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a);
  ASN1_UTCTIME * APICALL (*ASN1_UTCTIME_set)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, time_t t);
  int APICALL (*ASN1_UTCTIME_set_string)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, char * str);
  int APICALL (*ASN1_UTCTIME_cmp_time_t)(struct AmiSSLIFace *Self, const ASN1_UTCTIME * s, time_t t);
  int APICALL (*ASN1_GENERALIZEDTIME_check)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * a);
  ASN1_GENERALIZEDTIME * APICALL (*ASN1_GENERALIZEDTIME_set)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, time_t t);
  int APICALL (*ASN1_GENERALIZEDTIME_set_string)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, char * str);
  ASN1_OCTET_STRING * APICALL (*ASN1_OCTET_STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_OCTET_STRING_free)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * a);
  ASN1_OCTET_STRING * APICALL (*d2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_OCTET_STRING_it)(struct AmiSSLIFace *Self);
  ASN1_OCTET_STRING * APICALL (*ASN1_OCTET_STRING_dup)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * a);
  int APICALL (*ASN1_OCTET_STRING_cmp)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * a, ASN1_OCTET_STRING * b);
  int APICALL (*ASN1_OCTET_STRING_set)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * str, unsigned char * data, int len);
  ASN1_VISIBLESTRING * APICALL (*ASN1_VISIBLESTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_VISIBLESTRING_free)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING * a);
  ASN1_VISIBLESTRING * APICALL (*d2i_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_VISIBLESTRING_it)(struct AmiSSLIFace *Self);
  ASN1_UNIVERSALSTRING * APICALL (*ASN1_UNIVERSALSTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_UNIVERSALSTRING_free)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * a);
  ASN1_UNIVERSALSTRING * APICALL (*d2i_ASN1_UNIVERSALSTRING)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_UNIVERSALSTRING)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_UNIVERSALSTRING_it)(struct AmiSSLIFace *Self);
  ASN1_UTF8STRING * APICALL (*ASN1_UTF8STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_UTF8STRING_free)(struct AmiSSLIFace *Self, ASN1_UTF8STRING * a);
  ASN1_UTF8STRING * APICALL (*d2i_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, ASN1_UTF8STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, ASN1_UTF8STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_UTF8STRING_it)(struct AmiSSLIFace *Self);
  ASN1_NULL * APICALL (*ASN1_NULL_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_NULL_free)(struct AmiSSLIFace *Self, ASN1_NULL * a);
  ASN1_NULL * APICALL (*d2i_ASN1_NULL)(struct AmiSSLIFace *Self, ASN1_NULL ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_NULL)(struct AmiSSLIFace *Self, ASN1_NULL * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_NULL_it)(struct AmiSSLIFace *Self);
  ASN1_BMPSTRING * APICALL (*ASN1_BMPSTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_BMPSTRING_free)(struct AmiSSLIFace *Self, ASN1_BMPSTRING * a);
  ASN1_BMPSTRING * APICALL (*d2i_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, ASN1_BMPSTRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, ASN1_BMPSTRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_BMPSTRING_it)(struct AmiSSLIFace *Self);
  int APICALL (*UTF8_getc)(struct AmiSSLIFace *Self, const unsigned char * str, int len, unsigned long * val);
  int APICALL (*UTF8_putc)(struct AmiSSLIFace *Self, unsigned char * str, int len, unsigned long value);
  ASN1_STRING * APICALL (*ASN1_PRINTABLE_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_PRINTABLE_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
  ASN1_STRING * APICALL (*d2i_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_PRINTABLE_it)(struct AmiSSLIFace *Self);
  ASN1_STRING * APICALL (*DIRECTORYSTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*DIRECTORYSTRING_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
  ASN1_STRING * APICALL (*d2i_DIRECTORYSTRING)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_DIRECTORYSTRING)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*DIRECTORYSTRING_it)(struct AmiSSLIFace *Self);
  ASN1_STRING * APICALL (*DISPLAYTEXT_new)(struct AmiSSLIFace *Self);
  void APICALL (*DISPLAYTEXT_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
  ASN1_STRING * APICALL (*d2i_DISPLAYTEXT)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_DISPLAYTEXT)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*DISPLAYTEXT_it)(struct AmiSSLIFace *Self);
  ASN1_PRINTABLESTRING * APICALL (*ASN1_PRINTABLESTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_PRINTABLESTRING_free)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING * a);
  ASN1_PRINTABLESTRING * APICALL (*d2i_ASN1_PRINTABLESTRING)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_PRINTABLESTRING)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_PRINTABLESTRING_it)(struct AmiSSLIFace *Self);
  ASN1_T61STRING * APICALL (*ASN1_T61STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_T61STRING_free)(struct AmiSSLIFace *Self, ASN1_T61STRING * a);
  ASN1_T61STRING * APICALL (*d2i_ASN1_T61STRING)(struct AmiSSLIFace *Self, ASN1_T61STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_T61STRING)(struct AmiSSLIFace *Self, ASN1_T61STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_T61STRING_it)(struct AmiSSLIFace *Self);
  ASN1_IA5STRING * APICALL (*ASN1_IA5STRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_IA5STRING_free)(struct AmiSSLIFace *Self, ASN1_IA5STRING * a);
  ASN1_IA5STRING * APICALL (*d2i_ASN1_IA5STRING)(struct AmiSSLIFace *Self, ASN1_IA5STRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_IA5STRING)(struct AmiSSLIFace *Self, ASN1_IA5STRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_IA5STRING_it)(struct AmiSSLIFace *Self);
  ASN1_GENERALSTRING * APICALL (*ASN1_GENERALSTRING_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_GENERALSTRING_free)(struct AmiSSLIFace *Self, ASN1_GENERALSTRING * a);
  ASN1_GENERALSTRING * APICALL (*d2i_ASN1_GENERALSTRING)(struct AmiSSLIFace *Self, ASN1_GENERALSTRING ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_GENERALSTRING)(struct AmiSSLIFace *Self, ASN1_GENERALSTRING * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_GENERALSTRING_it)(struct AmiSSLIFace *Self);
  ASN1_UTCTIME * APICALL (*ASN1_UTCTIME_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_UTCTIME_free)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a);
  ASN1_UTCTIME * APICALL (*d2i_ASN1_UTCTIME)(struct AmiSSLIFace *Self, ASN1_UTCTIME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_UTCTIME)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_UTCTIME_it)(struct AmiSSLIFace *Self);
  ASN1_GENERALIZEDTIME * APICALL (*ASN1_GENERALIZEDTIME_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_GENERALIZEDTIME_free)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * a);
  ASN1_GENERALIZEDTIME * APICALL (*d2i_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_GENERALIZEDTIME_it)(struct AmiSSLIFace *Self);
  ASN1_TIME * APICALL (*ASN1_TIME_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_TIME_free)(struct AmiSSLIFace *Self, ASN1_TIME * a);
  ASN1_TIME * APICALL (*d2i_ASN1_TIME)(struct AmiSSLIFace *Self, ASN1_TIME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ASN1_TIME)(struct AmiSSLIFace *Self, ASN1_TIME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ASN1_TIME_it)(struct AmiSSLIFace *Self);
  ASN1_TIME * APICALL (*ASN1_TIME_set)(struct AmiSSLIFace *Self, ASN1_TIME * s, time_t t);
  int APICALL (*ASN1_TIME_check)(struct AmiSSLIFace *Self, ASN1_TIME * t);
  ASN1_GENERALIZEDTIME * APICALL (*ASN1_TIME_to_generalizedtime)(struct AmiSSLIFace *Self, ASN1_TIME * t, ASN1_GENERALIZEDTIME ** out);
  int APICALL (*i2d_ASN1_SET)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp, int (*func)(), int ex_tag, int ex_class, int is_set);
  STACK * APICALL (*d2i_ASN1_SET)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length, char * (*func)(), void (*free_func)(void *), int ex_tag, int ex_class);
  int APICALL (*i2a_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, ASN1_INTEGER * a);
  int APICALL (*a2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, ASN1_INTEGER * bs, char * buf, int size);
  int APICALL (*i2a_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, ASN1_ENUMERATED * a);
  int APICALL (*a2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, ASN1_ENUMERATED * bs, char * buf, int size);
  int APICALL (*i2a_ASN1_OBJECT)(struct AmiSSLIFace *Self, BIO * bp, ASN1_OBJECT * a);
  int APICALL (*a2i_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * bs, char * buf, int size);
  int APICALL (*i2a_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * a, int type);
  int APICALL (*i2t_ASN1_OBJECT)(struct AmiSSLIFace *Self, char * buf, int buf_len, ASN1_OBJECT * a);
  int APICALL (*a2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, unsigned char * out, int olen, const char * buf, int num);
  ASN1_OBJECT * APICALL (*ASN1_OBJECT_create)(struct AmiSSLIFace *Self, int nid, unsigned char * data, int len, const char * sn, const char * ln);
  int APICALL (*ASN1_INTEGER_set)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, long v);
  long APICALL (*ASN1_INTEGER_get)(struct AmiSSLIFace *Self, ASN1_INTEGER * a);
  ASN1_INTEGER * APICALL (*BN_to_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIGNUM * bn, ASN1_INTEGER * ai);
  BIGNUM * APICALL (*ASN1_INTEGER_to_BN)(struct AmiSSLIFace *Self, ASN1_INTEGER * ai, BIGNUM * bn);
  int APICALL (*ASN1_ENUMERATED_set)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, long v);
  long APICALL (*ASN1_ENUMERATED_get)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a);
  ASN1_ENUMERATED * APICALL (*BN_to_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIGNUM * bn, ASN1_ENUMERATED * ai);
  BIGNUM * APICALL (*ASN1_ENUMERATED_to_BN)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * ai, BIGNUM * bn);
  int APICALL (*ASN1_PRINTABLE_type)(struct AmiSSLIFace *Self, const unsigned char * s, int max);
  int APICALL (*i2d_ASN1_bytes)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** pp, int tag, int xclass);
  ASN1_STRING * APICALL (*d2i_ASN1_bytes)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length, int Ptag, int Pclass);
  unsigned long APICALL (*ASN1_tag2bit)(struct AmiSSLIFace *Self, int tag);
  ASN1_STRING * APICALL (*d2i_ASN1_type_bytes)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length, int type);
  int APICALL (*asn1_Finish)(struct AmiSSLIFace *Self, ASN1_CTX * c);
  int APICALL (*ASN1_get_object)(struct AmiSSLIFace *Self, unsigned char ** pp, long * plength, int * ptag, int * pclass, long omax);
  int APICALL (*ASN1_check_infinite_end)(struct AmiSSLIFace *Self, unsigned char ** p, long len);
  void APICALL (*ASN1_put_object)(struct AmiSSLIFace *Self, unsigned char ** pp, int constructed, int length, int tag, int xclass);
  int APICALL (*ASN1_object_size)(struct AmiSSLIFace *Self, int constructed, int length, int tag);
  char * APICALL (*ASN1_dup)(struct AmiSSLIFace *Self, int (*i2d)(), char * (*d2i)(), char * x);
  void * APICALL (*ASN1_item_dup)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, void * x);
  int APICALL (*ASN1_STRING_to_UTF8)(struct AmiSSLIFace *Self, unsigned char ** out, ASN1_STRING * in);
  char * APICALL (*ASN1_d2i_bio)(struct AmiSSLIFace *Self, char * (*xnew)(), char * (*d2i)(), BIO * bp, unsigned char ** x);
  void * APICALL (*ASN1_item_d2i_bio)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, BIO * in, void * x);
  int APICALL (*ASN1_i2d_bio)(struct AmiSSLIFace *Self, int (*i2d)(), BIO * out, unsigned char * x);
  int APICALL (*ASN1_item_i2d_bio)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, BIO * out, void * x);
  int APICALL (*ASN1_UTCTIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_UTCTIME * a);
  int APICALL (*ASN1_GENERALIZEDTIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_GENERALIZEDTIME * a);
  int APICALL (*ASN1_TIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_TIME * a);
  int APICALL (*ASN1_STRING_print)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * v);
  int APICALL (*ASN1_STRING_print_ex)(struct AmiSSLIFace *Self, BIO * out, ASN1_STRING * str, unsigned long flags);
  int APICALL (*ASN1_parse)(struct AmiSSLIFace *Self, BIO * bp, unsigned char * pp, long len, int indent);
  int APICALL (*ASN1_parse_dump)(struct AmiSSLIFace *Self, BIO * bp, unsigned char * pp, long len, int indent, int dump);
  const char * APICALL (*ASN1_tag2str)(struct AmiSSLIFace *Self, int tag);
  int APICALL (*i2d_ASN1_HEADER)(struct AmiSSLIFace *Self, ASN1_HEADER * a, unsigned char ** pp);
  ASN1_HEADER * APICALL (*d2i_ASN1_HEADER)(struct AmiSSLIFace *Self, ASN1_HEADER ** a, unsigned char ** pp, long length);
  ASN1_HEADER * APICALL (*ASN1_HEADER_new)(struct AmiSSLIFace *Self);
  void APICALL (*ASN1_HEADER_free)(struct AmiSSLIFace *Self, ASN1_HEADER * a);
  int APICALL (*ASN1_UNIVERSALSTRING_to_string)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * s);
  ASN1_METHOD * APICALL (*X509_asn1_meth)(struct AmiSSLIFace *Self);
  ASN1_METHOD * APICALL (*RSAPrivateKey_asn1_meth)(struct AmiSSLIFace *Self);
  ASN1_METHOD * APICALL (*ASN1_IA5STRING_asn1_meth)(struct AmiSSLIFace *Self);
  ASN1_METHOD * APICALL (*ASN1_BIT_STRING_asn1_meth)(struct AmiSSLIFace *Self);
  int APICALL (*ASN1_TYPE_set_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char * data, int len);
  int APICALL (*ASN1_TYPE_get_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char * data, int max_len);
  int APICALL (*ASN1_TYPE_set_int_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, long num, unsigned char * data, int len);
  int APICALL (*ASN1_TYPE_get_int_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, long * num, unsigned char * data, int max_len);
  STACK * APICALL (*ASN1_seq_unpack)(struct AmiSSLIFace *Self, unsigned char * buf, int len, char * (*d2i)(), void (*free_func)(void *));
  unsigned char * APICALL (*ASN1_seq_pack)(struct AmiSSLIFace *Self, STACK * safes, int (*i2d)(), unsigned char ** buf, int * len);
  void * APICALL (*ASN1_unpack_string)(struct AmiSSLIFace *Self, ASN1_STRING * oct, char * (*d2i)());
  void * APICALL (*ASN1_item_unpack)(struct AmiSSLIFace *Self, ASN1_STRING * oct, const ASN1_ITEM * it);
  ASN1_STRING * APICALL (*ASN1_pack_string)(struct AmiSSLIFace *Self, void * obj, int (*i2d)(), ASN1_OCTET_STRING ** oct);
  ASN1_STRING * APICALL (*ASN1_item_pack)(struct AmiSSLIFace *Self, void * obj, const ASN1_ITEM * it, ASN1_OCTET_STRING ** oct);
  void APICALL (*ASN1_STRING_set_default_mask)(struct AmiSSLIFace *Self, unsigned long mask);
  int APICALL (*ASN1_STRING_set_default_mask_asc)(struct AmiSSLIFace *Self, char * p);
  unsigned long APICALL (*ASN1_STRING_get_default_mask)(struct AmiSSLIFace *Self);
  int APICALL (*ASN1_mbstring_copy)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask);
  int APICALL (*ASN1_mbstring_ncopy)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int len, int inform, unsigned long mask, long minsize, long maxsize);
  ASN1_STRING * APICALL (*ASN1_STRING_set_by_NID)(struct AmiSSLIFace *Self, ASN1_STRING ** out, const unsigned char * in, int inlen, int inform, int nid);
  ASN1_STRING_TABLE * APICALL (*ASN1_STRING_TABLE_get)(struct AmiSSLIFace *Self, int nid);
  int APICALL (*ASN1_STRING_TABLE_add)(struct AmiSSLIFace *Self, int a, long b, long c, unsigned long d, unsigned long e);
  void APICALL (*ASN1_STRING_TABLE_cleanup)(struct AmiSSLIFace *Self);
  ASN1_VALUE * APICALL (*ASN1_item_new)(struct AmiSSLIFace *Self, const ASN1_ITEM * it);
  void APICALL (*ASN1_item_free)(struct AmiSSLIFace *Self, ASN1_VALUE * val, const ASN1_ITEM * it);
  ASN1_VALUE * APICALL (*ASN1_item_d2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** val, unsigned char ** in, long len, const ASN1_ITEM * it);
  int APICALL (*ASN1_item_i2d)(struct AmiSSLIFace *Self, ASN1_VALUE * val, unsigned char ** out, const ASN1_ITEM * it);
  void APICALL (*ASN1_add_oid_module)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_ASN1_strings)(struct AmiSSLIFace *Self);
  int APICALL (*asn1_GetSequence)(struct AmiSSLIFace *Self, ASN1_CTX * c, long * length);
  void APICALL (*asn1_add_error)(struct AmiSSLIFace *Self, unsigned char * address, int offset);
  const ASN1_ITEM * APICALL (*ASN1_BOOLEAN_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*ASN1_TBOOLEAN_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*ASN1_FBOOLEAN_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*ASN1_SEQUENCE_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*CBIGNUM_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*BIGNUM_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*LONG_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*ZLONG_it)(struct AmiSSLIFace *Self);
  int APICALL (*ASN1_item_ex_new)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  void APICALL (*ASN1_item_ex_free)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  int APICALL (*ASN1_template_new)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_TEMPLATE * tt);
  int APICALL (*ASN1_primitive_new)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  void APICALL (*ASN1_template_free)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_TEMPLATE * tt);
  int APICALL (*ASN1_template_d2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char ** in, long len, const ASN1_TEMPLATE * tt);
  int APICALL (*ASN1_item_ex_d2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char ** in, long len, const ASN1_ITEM * it, int tag, int aclass, char opt, ASN1_TLC * ctx);
  int APICALL (*ASN1_item_ex_i2d)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char ** out, const ASN1_ITEM * it, int tag, int aclass);
  int APICALL (*ASN1_template_i2d)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char ** out, const ASN1_TEMPLATE * tt);
  void APICALL (*ASN1_primitive_free)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  int APICALL (*asn1_ex_i2c)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char * cont, int * putype, const ASN1_ITEM * it);
  int APICALL (*asn1_ex_c2i)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char * cont, int len, int utype, char * free_cont, const ASN1_ITEM * it);
  int APICALL (*asn1_get_choice_selector)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  int APICALL (*asn1_set_choice_selector)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, int value, const ASN1_ITEM * it);
  ASN1_VALUE ** APICALL (*asn1_get_field_ptr)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_TEMPLATE * tt);
  const ASN1_TEMPLATE * APICALL (*asn1_do_adb)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_TEMPLATE * tt, int nullerr);
  int APICALL (*asn1_do_lock)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, int op, const ASN1_ITEM * it);
  void APICALL (*asn1_enc_init)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  void APICALL (*asn1_enc_free)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  int APICALL (*asn1_enc_restore)(struct AmiSSLIFace *Self, int * len, unsigned char ** out, ASN1_VALUE ** pval, const ASN1_ITEM * it);
  int APICALL (*asn1_enc_save)(struct AmiSSLIFace *Self, ASN1_VALUE ** pval, unsigned char * in, int inlen, const ASN1_ITEM * it);
  size_t APICALL (*BIO_ctrl_pending)(struct AmiSSLIFace *Self, BIO * b);
  size_t APICALL (*BIO_ctrl_wpending)(struct AmiSSLIFace *Self, BIO * b);
  size_t APICALL (*BIO_ctrl_get_write_guarantee)(struct AmiSSLIFace *Self, BIO * b);
  size_t APICALL (*BIO_ctrl_get_read_request)(struct AmiSSLIFace *Self, BIO * b);
  int APICALL (*BIO_ctrl_reset_read_request)(struct AmiSSLIFace *Self, BIO * b);
  int APICALL (*BIO_set_ex_data)(struct AmiSSLIFace *Self, BIO * bio, int idx, void * data);
  void * APICALL (*BIO_get_ex_data)(struct AmiSSLIFace *Self, BIO * bio, int idx);
  int APICALL (*BIO_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  unsigned long APICALL (*BIO_number_read)(struct AmiSSLIFace *Self, BIO * bio);
  unsigned long APICALL (*BIO_number_written)(struct AmiSSLIFace *Self, BIO * bio);
  BIO_METHOD * APICALL (*BIO_s_file)(struct AmiSSLIFace *Self);
  BIO * APICALL (*BIO_new_file)(struct AmiSSLIFace *Self, const char * filename, const char * mode);
  BIO * APICALL (*BIO_new_fp_amiga)(struct AmiSSLIFace *Self, BPTR stream, int close_flag);
  BIO * APICALL (*BIO_new)(struct AmiSSLIFace *Self, BIO_METHOD * type);
  int APICALL (*BIO_set)(struct AmiSSLIFace *Self, BIO * a, BIO_METHOD * type);
  int APICALL (*BIO_free)(struct AmiSSLIFace *Self, BIO * a);
  void APICALL (*BIO_vfree)(struct AmiSSLIFace *Self, BIO * a);
  int APICALL (*BIO_read)(struct AmiSSLIFace *Self, BIO * b, void * data, int len);
  int APICALL (*BIO_gets)(struct AmiSSLIFace *Self, BIO * bp, char * buf, int size);
  int APICALL (*BIO_write)(struct AmiSSLIFace *Self, BIO * b, const void * data, int len);
  int APICALL (*BIO_puts)(struct AmiSSLIFace *Self, BIO * bp, const char * buf);
  int APICALL (*BIO_indent)(struct AmiSSLIFace *Self, BIO * b, int indent, int max);
  long APICALL (*BIO_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, void * parg);
  long APICALL (*BIO_callback_ctrl)(struct AmiSSLIFace *Self, BIO * b, int cmd, void (*fp)(struct bio_st *, int, const char *, int, long, long));
  char * APICALL (*BIO_ptr_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg);
  long APICALL (*BIO_int_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, int iarg);
  BIO * APICALL (*BIO_push)(struct AmiSSLIFace *Self, BIO * b, BIO * append);
  BIO * APICALL (*BIO_pop)(struct AmiSSLIFace *Self, BIO * b);
  void APICALL (*BIO_free_all)(struct AmiSSLIFace *Self, BIO * a);
  BIO * APICALL (*BIO_find_type)(struct AmiSSLIFace *Self, BIO * b, int bio_type);
  BIO * APICALL (*BIO_next)(struct AmiSSLIFace *Self, BIO * b);
  BIO * APICALL (*BIO_get_retry_BIO)(struct AmiSSLIFace *Self, BIO * bio, int * reason);
  int APICALL (*BIO_get_retry_reason)(struct AmiSSLIFace *Self, BIO * bio);
  BIO * APICALL (*BIO_dup_chain)(struct AmiSSLIFace *Self, BIO * in);
  int APICALL (*BIO_nread0)(struct AmiSSLIFace *Self, BIO * bio, char ** buf);
  int APICALL (*BIO_nread)(struct AmiSSLIFace *Self, BIO * bio, char ** buf, int num);
  int APICALL (*BIO_nwrite0)(struct AmiSSLIFace *Self, BIO * bio, char ** buf);
  int APICALL (*BIO_nwrite)(struct AmiSSLIFace *Self, BIO * bio, char ** buf, int num);
  long APICALL (*BIO_debug_callback)(struct AmiSSLIFace *Self, BIO * bio, int cmd, const char * argp, int argi, long argl, long ret);
  BIO_METHOD * APICALL (*BIO_s_mem)(struct AmiSSLIFace *Self);
  BIO * APICALL (*BIO_new_mem_buf)(struct AmiSSLIFace *Self, void * buf, int len);
  BIO_METHOD * APICALL (*BIO_s_socket)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_connect)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_accept)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_fd)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_log)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_bio)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_s_null)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_null)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_buffer)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_nbio_test)(struct AmiSSLIFace *Self);
  int APICALL (*BIO_sock_should_retry)(struct AmiSSLIFace *Self, int i);
  int APICALL (*BIO_sock_non_fatal_error)(struct AmiSSLIFace *Self, int error);
  int APICALL (*BIO_fd_should_retry)(struct AmiSSLIFace *Self, int i);
  int APICALL (*BIO_fd_non_fatal_error)(struct AmiSSLIFace *Self, int error);
  int APICALL (*BIO_dump)(struct AmiSSLIFace *Self, BIO * b, const char * bytes, int len);
  int APICALL (*BIO_dump_indent)(struct AmiSSLIFace *Self, BIO * b, const char * bytes, int len, int indent);
  struct hostent * APICALL (*BIO_gethostbyname)(struct AmiSSLIFace *Self, const char * name);
  int APICALL (*BIO_sock_error)(struct AmiSSLIFace *Self, int sock);
  int APICALL (*BIO_socket_ioctl)(struct AmiSSLIFace *Self, int fd, long type, void * arg);
  int APICALL (*BIO_socket_nbio)(struct AmiSSLIFace *Self, int fd, int mode);
  int APICALL (*BIO_get_port)(struct AmiSSLIFace *Self, const char * str, unsigned short * port_ptr);
  int APICALL (*BIO_get_host_ip)(struct AmiSSLIFace *Self, const char * str, unsigned char * ip);
  int APICALL (*BIO_get_accept_socket)(struct AmiSSLIFace *Self, char * host_port, int mode);
  int APICALL (*BIO_accept)(struct AmiSSLIFace *Self, int sock, char ** ip_port);
  int APICALL (*BIO_sock_init)(struct AmiSSLIFace *Self);
  void APICALL (*BIO_sock_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*BIO_set_tcp_ndelay)(struct AmiSSLIFace *Self, int sock, int turn_on);
  BIO * APICALL (*BIO_new_socket)(struct AmiSSLIFace *Self, int sock, int close_flag);
  BIO * APICALL (*BIO_new_fd)(struct AmiSSLIFace *Self, int fd, int close_flag);
  BIO * APICALL (*BIO_new_connect)(struct AmiSSLIFace *Self, char * host_port);
  BIO * APICALL (*BIO_new_accept)(struct AmiSSLIFace *Self, char * host_port);
  int APICALL (*BIO_new_bio_pair)(struct AmiSSLIFace *Self, BIO ** bio1, size_t writebuf1, BIO ** bio2, size_t writebuf2);
  void APICALL (*BIO_copy_next_retry)(struct AmiSSLIFace *Self, BIO * b);
  int APICALL (*BIO_vprintf)(struct AmiSSLIFace *Self, BIO * bio, const char * format, long * args);
  int APICALL (*BIO_printf)(struct AmiSSLIFace *Self, BIO * bio, const char * format, ...);
  int APICALL (*BIO_vsnprintf)(struct AmiSSLIFace *Self, char * buf, size_t n, const char * format, long * args);
  int APICALL (*BIO_snprintf)(struct AmiSSLIFace *Self, char * buf, size_t n, const char * format, ...);
  void APICALL (*ERR_load_BIO_strings)(struct AmiSSLIFace *Self);
  const BIGNUM * APICALL (*BN_value_one)(struct AmiSSLIFace *Self);
  char * APICALL (*BN_options)(struct AmiSSLIFace *Self);
  BN_CTX * APICALL (*BN_CTX_new)(struct AmiSSLIFace *Self);
  void APICALL (*BN_CTX_init)(struct AmiSSLIFace *Self, BN_CTX * c);
  void APICALL (*BN_CTX_free)(struct AmiSSLIFace *Self, BN_CTX * c);
  void APICALL (*BN_CTX_start)(struct AmiSSLIFace *Self, BN_CTX * ctx);
  BIGNUM * APICALL (*BN_CTX_get)(struct AmiSSLIFace *Self, BN_CTX * ctx);
  void APICALL (*BN_CTX_end)(struct AmiSSLIFace *Self, BN_CTX * ctx);
  int APICALL (*BN_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
  int APICALL (*BN_pseudo_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
  int APICALL (*BN_rand_range)(struct AmiSSLIFace *Self, BIGNUM * rnd, BIGNUM * range);
  int APICALL (*BN_pseudo_rand_range)(struct AmiSSLIFace *Self, BIGNUM * rnd, BIGNUM * range);
  int APICALL (*BN_num_bits)(struct AmiSSLIFace *Self, const BIGNUM * a);
  int APICALL (*BN_num_bits_word)(struct AmiSSLIFace *Self, BN_ULONG a);
  BIGNUM * APICALL (*BN_new)(struct AmiSSLIFace *Self);
  void APICALL (*BN_init)(struct AmiSSLIFace *Self, BIGNUM * a);
  void APICALL (*BN_clear_free)(struct AmiSSLIFace *Self, BIGNUM * a);
  BIGNUM * APICALL (*BN_copy)(struct AmiSSLIFace *Self, BIGNUM * a, const BIGNUM * b);
  void APICALL (*BN_swap)(struct AmiSSLIFace *Self, BIGNUM * a, BIGNUM * b);
  BIGNUM * APICALL (*BN_bin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
  int APICALL (*BN_bn2bin)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
  BIGNUM * APICALL (*BN_mpi2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
  int APICALL (*BN_bn2mpi)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
  int APICALL (*BN_sub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
  int APICALL (*BN_usub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
  int APICALL (*BN_uadd)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
  int APICALL (*BN_add)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
  int APICALL (*BN_mul)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
  int APICALL (*BN_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, BN_CTX * ctx);
  int APICALL (*BN_div)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
  int APICALL (*BN_nnmod)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
  int APICALL (*BN_mod_add)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_add_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m);
  int APICALL (*BN_mod_sub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_sub_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m);
  int APICALL (*BN_mod_mul)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_lshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_lshift1_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * m);
  int APICALL (*BN_mod_lshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_lshift_quick)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n, const BIGNUM * m);
  BN_ULONG APICALL (*BN_mod_word)(struct AmiSSLIFace *Self, const BIGNUM * a, BN_ULONG w);
  BN_ULONG APICALL (*BN_div_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
  int APICALL (*BN_mul_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
  int APICALL (*BN_add_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
  int APICALL (*BN_sub_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
  int APICALL (*BN_set_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
  BN_ULONG APICALL (*BN_get_word)(struct AmiSSLIFace *Self, const BIGNUM * a);
  int APICALL (*BN_cmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
  void APICALL (*BN_free)(struct AmiSSLIFace *Self, BIGNUM * a);
  int APICALL (*BN_is_bit_set)(struct AmiSSLIFace *Self, const BIGNUM * a, int n);
  int APICALL (*BN_lshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n);
  int APICALL (*BN_lshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a);
  int APICALL (*BN_exp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, BN_CTX * ctx);
  int APICALL (*BN_mod_exp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mod_exp_mont)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
  int APICALL (*BN_mod_exp_mont_word)(struct AmiSSLIFace *Self, BIGNUM * r, BN_ULONG a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
  int APICALL (*BN_mod_exp2_mont)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a1, const BIGNUM * p1, const BIGNUM * a2, const BIGNUM * p2, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
  int APICALL (*BN_mod_exp_simple)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_mask_bits)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
  int APICALL (*BN_print)(struct AmiSSLIFace *Self, BIO * fp, const BIGNUM * a);
  int APICALL (*BN_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * m, int len, BN_CTX * ctx);
  int APICALL (*BN_rshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n);
  int APICALL (*BN_rshift1)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a);
  void APICALL (*BN_clear)(struct AmiSSLIFace *Self, BIGNUM * a);
  BIGNUM * APICALL (*BN_dup)(struct AmiSSLIFace *Self, const BIGNUM * a);
  int APICALL (*BN_ucmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
  int APICALL (*BN_set_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
  int APICALL (*BN_clear_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
  char * APICALL (*BN_bn2hex)(struct AmiSSLIFace *Self, const BIGNUM * a);
  char * APICALL (*BN_bn2dec)(struct AmiSSLIFace *Self, const BIGNUM * a);
  int APICALL (*BN_hex2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
  int APICALL (*BN_dec2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
  int APICALL (*BN_gcd)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
  int APICALL (*BN_kronecker)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b, BN_CTX * ctx);
  BIGNUM * APICALL (*BN_mod_inverse)(struct AmiSSLIFace *Self, BIGNUM * ret, const BIGNUM * a, const BIGNUM * n, BN_CTX * ctx);
  BIGNUM * APICALL (*BN_mod_sqrt)(struct AmiSSLIFace *Self, BIGNUM * ret, const BIGNUM * a, const BIGNUM * n, BN_CTX * ctx);
  BIGNUM * APICALL (*BN_generate_prime)(struct AmiSSLIFace *Self, BIGNUM * ret, int bits, int safe, const BIGNUM * add, const BIGNUM * rem, void (*callback)(int, int, void *), void * cb_arg);
  int APICALL (*BN_is_prime)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, void (*callback)(int, int, void *), BN_CTX * ctx, void * cb_arg);
  int APICALL (*BN_is_prime_fasttest)(struct AmiSSLIFace *Self, const BIGNUM * p, int nchecks, void (*callback)(int, int, void *), BN_CTX * ctx, void * cb_arg, int do_trial_division);
  BN_MONT_CTX * APICALL (*BN_MONT_CTX_new)(struct AmiSSLIFace *Self);
  void APICALL (*BN_MONT_CTX_init)(struct AmiSSLIFace *Self, BN_MONT_CTX * ctx);
  int APICALL (*BN_mod_mul_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b, BN_MONT_CTX * mont, BN_CTX * ctx);
  int APICALL (*BN_from_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, BN_MONT_CTX * mont, BN_CTX * ctx);
  void APICALL (*BN_MONT_CTX_free)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont);
  int APICALL (*BN_MONT_CTX_set)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont, const BIGNUM * mod, BN_CTX * ctx);
  BN_MONT_CTX * APICALL (*BN_MONT_CTX_copy)(struct AmiSSLIFace *Self, BN_MONT_CTX * to, BN_MONT_CTX * from);
  BN_BLINDING * APICALL (*BN_BLINDING_new)(struct AmiSSLIFace *Self, BIGNUM * A, BIGNUM * Ai, BIGNUM * mod);
  void APICALL (*BN_BLINDING_free)(struct AmiSSLIFace *Self, BN_BLINDING * b);
  int APICALL (*BN_BLINDING_update)(struct AmiSSLIFace *Self, BN_BLINDING * b, BN_CTX * ctx);
  int APICALL (*BN_BLINDING_convert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * r, BN_CTX * ctx);
  int APICALL (*BN_BLINDING_invert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * b, BN_CTX * ctx);
  void APICALL (*BN_set_params)(struct AmiSSLIFace *Self, int mul, int high, int low, int mont);
  int APICALL (*BN_get_params)(struct AmiSSLIFace *Self, int which);
  void APICALL (*BN_RECP_CTX_init)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp);
  BN_RECP_CTX * APICALL (*BN_RECP_CTX_new)(struct AmiSSLIFace *Self);
  void APICALL (*BN_RECP_CTX_free)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp);
  int APICALL (*BN_RECP_CTX_set)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp, const BIGNUM * rdiv, BN_CTX * ctx);
  int APICALL (*BN_mod_mul_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * x, const BIGNUM * y, BN_RECP_CTX * recp, BN_CTX * ctx);
  int APICALL (*BN_mod_exp_recp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
  int APICALL (*BN_div_recp)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, const BIGNUM * m, BN_RECP_CTX * recp, BN_CTX * ctx);
  BIGNUM * APICALL (*bn_expand2)(struct AmiSSLIFace *Self, BIGNUM * a, int words);
  BIGNUM * APICALL (*bn_dup_expand)(struct AmiSSLIFace *Self, const BIGNUM * a, int words);
  BN_ULONG APICALL (*bn_mul_add_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, const BN_ULONG * ap, int num, BN_ULONG w);
  BN_ULONG APICALL (*bn_mul_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, const BN_ULONG * ap, int num, BN_ULONG w);
  void APICALL (*bn_sqr_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, const BN_ULONG * ap, int num);
  BN_ULONG APICALL (*bn_div_words)(struct AmiSSLIFace *Self, BN_ULONG h, BN_ULONG l, BN_ULONG d);
  BN_ULONG APICALL (*bn_add_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, const BN_ULONG * ap, const BN_ULONG * bp, int num);
  BN_ULONG APICALL (*bn_sub_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, const BN_ULONG * ap, const BN_ULONG * bp, int num);
  int APICALL (*BN_bntest_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
  void APICALL (*ERR_load_BN_strings)(struct AmiSSLIFace *Self);
  BUF_MEM * APICALL (*BUF_MEM_new)(struct AmiSSLIFace *Self);
  void APICALL (*BUF_MEM_free)(struct AmiSSLIFace *Self, BUF_MEM * a);
  int APICALL (*BUF_MEM_grow)(struct AmiSSLIFace *Self, BUF_MEM * str, int len);
  int APICALL (*BUF_MEM_grow_clean)(struct AmiSSLIFace *Self, BUF_MEM * str, int len);
  char * APICALL (*BUF_strdup)(struct AmiSSLIFace *Self, const char * str);
  size_t APICALL (*BUF_strlcpy)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t siz);
  size_t APICALL (*BUF_strlcat)(struct AmiSSLIFace *Self, char * dst, const char * src, size_t siz);
  void APICALL (*ERR_load_BUF_strings)(struct AmiSSLIFace *Self);
  COMP_CTX * APICALL (*COMP_CTX_new)(struct AmiSSLIFace *Self, COMP_METHOD * meth);
  void APICALL (*COMP_CTX_free)(struct AmiSSLIFace *Self, COMP_CTX * ctx);
  int APICALL (*COMP_compress_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
  int APICALL (*COMP_expand_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
  COMP_METHOD * APICALL (*COMP_rle)(struct AmiSSLIFace *Self);
  COMP_METHOD * APICALL (*COMP_zlib)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_COMP_strings)(struct AmiSSLIFace *Self);
  int APICALL (*CONF_set_default_method)(struct AmiSSLIFace *Self, CONF_METHOD * meth);
  void APICALL (*CONF_set_nconf)(struct AmiSSLIFace *Self, CONF * conf, LHASH * hash);
  LHASH * APICALL (*CONF_load)(struct AmiSSLIFace *Self, LHASH * conf, const char * file, long * eline);
  LHASH * APICALL (*CONF_load_bio)(struct AmiSSLIFace *Self, LHASH * conf, BIO * bp, long * eline);
  STACK_OF(CONF_VALUE) * APICALL (*CONF_get_section)(struct AmiSSLIFace *Self, LHASH * conf, const char * section);
  char * APICALL (*CONF_get_string)(struct AmiSSLIFace *Self, LHASH * conf, const char * group, const char * name);
  long APICALL (*CONF_get_number)(struct AmiSSLIFace *Self, LHASH * conf, const char * group, const char * name);
  void APICALL (*CONF_free)(struct AmiSSLIFace *Self, LHASH * conf);
  int APICALL (*CONF_dump_bio)(struct AmiSSLIFace *Self, LHASH * conf, BIO * out);
  void APICALL (*OPENSSL_config)(struct AmiSSLIFace *Self, const char * config_name);
  void APICALL (*OPENSSL_no_config)(struct AmiSSLIFace *Self);
  CONF * APICALL (*NCONF_new)(struct AmiSSLIFace *Self, CONF_METHOD * meth);
  CONF_METHOD * APICALL (*NCONF_default)(struct AmiSSLIFace *Self);
  CONF_METHOD * APICALL (*NCONF_WIN32)(struct AmiSSLIFace *Self);
  void APICALL (*NCONF_free)(struct AmiSSLIFace *Self, CONF * conf);
  void APICALL (*NCONF_free_data)(struct AmiSSLIFace *Self, CONF * conf);
  int APICALL (*NCONF_load)(struct AmiSSLIFace *Self, CONF * conf, const char * file, long * eline);
  int APICALL (*NCONF_load_bio)(struct AmiSSLIFace *Self, CONF * conf, BIO * bp, long * eline);
  STACK_OF(CONF_VALUE) * APICALL (*NCONF_get_section)(struct AmiSSLIFace *Self, const CONF * conf, const char * section);
  char * APICALL (*NCONF_get_string)(struct AmiSSLIFace *Self, const CONF * conf, const char * group, const char * name);
  int APICALL (*NCONF_get_number_e)(struct AmiSSLIFace *Self, const CONF * conf, const char * group, const char * name, long * result);
  int APICALL (*NCONF_dump_bio)(struct AmiSSLIFace *Self, const CONF * conf, BIO * out);
  int APICALL (*CONF_modules_load)(struct AmiSSLIFace *Self, const CONF * cnf, const char * appname, unsigned long flags);
  int APICALL (*CONF_modules_load_file)(struct AmiSSLIFace *Self, const char * filename, const char * appname, unsigned long flags);
  void APICALL (*CONF_modules_unload)(struct AmiSSLIFace *Self, int all);
  void APICALL (*CONF_modules_finish)(struct AmiSSLIFace *Self);
  void APICALL (*CONF_modules_free)(struct AmiSSLIFace *Self);
  int APICALL (*CONF_module_add)(struct AmiSSLIFace *Self, const char * name, conf_init_func * (*ifunc)(), conf_finish_func * (*ffunc)());
  const char * APICALL (*CONF_imodule_get_name)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
  const char * APICALL (*CONF_imodule_get_value)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
  void * APICALL (*CONF_imodule_get_usr_data)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
  void APICALL (*CONF_imodule_set_usr_data)(struct AmiSSLIFace *Self, CONF_IMODULE * md, void * usr_data);
  CONF_MODULE * APICALL (*CONF_imodule_get_module)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
  unsigned long APICALL (*CONF_imodule_get_flags)(struct AmiSSLIFace *Self, const CONF_IMODULE * md);
  void APICALL (*CONF_imodule_set_flags)(struct AmiSSLIFace *Self, CONF_IMODULE * md, unsigned long flags);
  void * APICALL (*CONF_module_get_usr_data)(struct AmiSSLIFace *Self, CONF_MODULE * pmod);
  void APICALL (*CONF_module_set_usr_data)(struct AmiSSLIFace *Self, CONF_MODULE * pmod, void * usr_data);
  char * APICALL (*CONF_get1_default_config_file)(struct AmiSSLIFace *Self);
  int APICALL (*CONF_parse_list)(struct AmiSSLIFace *Self, const char * list, int sep, int nospc, int (*list_cb)(const char *elem, int len, void *usr), void * arg);
  void APICALL (*OPENSSL_load_builtin_modules)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_CONF_strings)(struct AmiSSLIFace *Self);
  CONF_VALUE * APICALL (*_CONF_new_section)(struct AmiSSLIFace *Self, CONF * conf, const char * section);
  CONF_VALUE * APICALL (*_CONF_get_section)(struct AmiSSLIFace *Self, const CONF * conf, const char * section);
  STACK_OF(CONF_VALUE) * APICALL (*_CONF_get_section_values)(struct AmiSSLIFace *Self, const CONF * conf, const char * section);
  int APICALL (*_CONF_add_string)(struct AmiSSLIFace *Self, CONF * conf, CONF_VALUE * section, CONF_VALUE * value);
  char * APICALL (*_CONF_get_string)(struct AmiSSLIFace *Self, const CONF * conf, const char * section, const char * name);
  int APICALL (*_CONF_new_data)(struct AmiSSLIFace *Self, CONF * conf);
  void APICALL (*_CONF_free_data)(struct AmiSSLIFace *Self, CONF * conf);
  int APICALL (*CRYPTO_mem_ctrl)(struct AmiSSLIFace *Self, int mode);
  int APICALL (*CRYPTO_is_mem_check_on)(struct AmiSSLIFace *Self);
  const char * APICALL (*SSLeay_version)(struct AmiSSLIFace *Self, int type);
  unsigned long APICALL (*SSLeay)(struct AmiSSLIFace *Self);
  int APICALL (*OPENSSL_issetugid)(struct AmiSSLIFace *Self);
  const CRYPTO_EX_DATA_IMPL * APICALL (*CRYPTO_get_ex_data_implementation)(struct AmiSSLIFace *Self);
  int APICALL (*CRYPTO_set_ex_data_implementation)(struct AmiSSLIFace *Self, const CRYPTO_EX_DATA_IMPL * i);
  int APICALL (*CRYPTO_ex_data_new_class)(struct AmiSSLIFace *Self);
  int APICALL (*CRYPTO_get_ex_new_index)(struct AmiSSLIFace *Self, int class_index, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*CRYPTO_new_ex_data)(struct AmiSSLIFace *Self, int class_index, void * obj, CRYPTO_EX_DATA * ad);
  int APICALL (*CRYPTO_dup_ex_data)(struct AmiSSLIFace *Self, int class_index, CRYPTO_EX_DATA * to, CRYPTO_EX_DATA * from);
  void APICALL (*CRYPTO_free_ex_data)(struct AmiSSLIFace *Self, int class_index, void * obj, CRYPTO_EX_DATA * ad);
  int APICALL (*CRYPTO_set_ex_data)(struct AmiSSLIFace *Self, CRYPTO_EX_DATA * ad, int idx, void * val);
  void * APICALL (*CRYPTO_get_ex_data)(struct AmiSSLIFace *Self, const CRYPTO_EX_DATA * ad, int idx);
  void APICALL (*CRYPTO_cleanup_all_ex_data)(struct AmiSSLIFace *Self);
  int APICALL (*CRYPTO_get_new_lockid)(struct AmiSSLIFace *Self, char * name);
  int APICALL (*CRYPTO_num_locks)(struct AmiSSLIFace *Self);
  void APICALL (*CRYPTO_lock)(struct AmiSSLIFace *Self, int mode, int type, const char * file, int line);
  void APICALL (*CRYPTO_set_locking_callback)(struct AmiSSLIFace *Self, void (*func)(int mode, int type, const char *file, int line));
  void APICALL (*(*CRYPTO_get_locking_callback)(struct AmiSSLIFace *Self))(int mode, int type, const char *file, int line);
  void APICALL (*CRYPTO_set_add_lock_callback)(struct AmiSSLIFace *Self, int (*func)(int *num, int mount, int type, const char *file, int line));
  int APICALL (*(*CRYPTO_get_add_lock_callback)(struct AmiSSLIFace *Self))(int *num, int mount, int type, const char *file, int line);
  void APICALL (*CRYPTO_set_id_callback)(struct AmiSSLIFace *Self, unsigned long (*func)(void));
  unsigned long APICALL (*(*CRYPTO_get_id_callback)(struct AmiSSLIFace *Self))(void);
  unsigned long APICALL (*CRYPTO_thread_id)(struct AmiSSLIFace *Self);
  const char * APICALL (*CRYPTO_get_lock_name)(struct AmiSSLIFace *Self, int type);
  int APICALL (*CRYPTO_add_lock)(struct AmiSSLIFace *Self, int * pointer, int amount, int type, const char * file, int line);
  int APICALL (*CRYPTO_get_new_dynlockid)(struct AmiSSLIFace *Self);
  void APICALL (*CRYPTO_destroy_dynlockid)(struct AmiSSLIFace *Self, int i);
  struct CRYPTO_dynlock_value * APICALL (*CRYPTO_get_dynlock_value)(struct AmiSSLIFace *Self, int i);
  void APICALL (*CRYPTO_set_dynlock_create_callback)(struct AmiSSLIFace *Self, struct CRYPTO_dynlock_value * (*dyn_create_function)(const char *file, int line));
  void APICALL (*CRYPTO_set_dynlock_lock_callback)(struct AmiSSLIFace *Self, void (*dyn_lock_function)(int mode, struct CRYPTO_dynlock_value *l, const char *file, int line));
  void APICALL (*CRYPTO_set_dynlock_destroy_callback)(struct AmiSSLIFace *Self, void (*dyn_destroy_function)(struct CRYPTO_dynlock_value *l, const char *file, int line));
  struct CRYPTO_dynlock_value * APICALL (*(*CRYPTO_get_dynlock_create_callback)(struct AmiSSLIFace *Self))(const char *file, int line);
  void APICALL (*(*CRYPTO_get_dynlock_lock_callback)(struct AmiSSLIFace *Self))(int mode, struct CRYPTO_dynlock_value *l, const char *file, int line);
  void APICALL (*(*CRYPTO_get_dynlock_destroy_callback)(struct AmiSSLIFace *Self))(struct CRYPTO_dynlock_value *l, const char *file, int line);
  int APICALL (*CRYPTO_set_mem_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t), void * (*r)(void *, size_t), void (*f)(void *));
  int APICALL (*CRYPTO_set_locked_mem_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t), void (*free_func)(void *));
  int APICALL (*CRYPTO_set_mem_ex_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t, const char *, int), void * (*r)(void *, size_t, const char *, int), void (*f)(void *));
  int APICALL (*CRYPTO_set_locked_mem_ex_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t, const char *, int), void (*free_func)(void *));
  int APICALL (*CRYPTO_set_mem_debug_functions)(struct AmiSSLIFace *Self, void (*m)(void *, int, const char *, int, int), void (*r)(void *, void *, int, const char *, int, int), void (*f)(void *, int), void (*so)(long), long (*go)(void));
  void APICALL (*CRYPTO_get_mem_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t), void * (*r)(void *, size_t), void (*f)(void *));
  void APICALL (*CRYPTO_get_locked_mem_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t), void (*f)(void *));
  void APICALL (*CRYPTO_get_mem_ex_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t, const char *, int), void * (*r)(void *, size_t, const char *, int), void (*f)(void *));
  void APICALL (*CRYPTO_get_locked_mem_ex_functions)(struct AmiSSLIFace *Self, void * (*m)(size_t, const char *, int), void (*f)(void *));
  void APICALL (*CRYPTO_get_mem_debug_functions)(struct AmiSSLIFace *Self, void (*m)(void *, int, const char *, int, int), void (*r)(void *, void *, int, const char *, int, int), void (*f)(void *, int), void (*so)(long), long (*go)(void));
  void * APICALL (*CRYPTO_malloc_locked)(struct AmiSSLIFace *Self, int num, const char * file, int line);
  void APICALL (*CRYPTO_free_locked)(struct AmiSSLIFace *Self, void * a);
  void * APICALL (*CRYPTO_malloc)(struct AmiSSLIFace *Self, int num, const char * file, int line);
  void APICALL (*CRYPTO_free)(struct AmiSSLIFace *Self, void * a);
  void * APICALL (*CRYPTO_realloc)(struct AmiSSLIFace *Self, void * addr, int num, const char * file, int line);
  void * APICALL (*CRYPTO_realloc_clean)(struct AmiSSLIFace *Self, void * addr, int old_num, int num, const char * file, int line);
  void * APICALL (*CRYPTO_remalloc)(struct AmiSSLIFace *Self, void * addr, int num, const char * file, int line);
  void APICALL (*OPENSSL_cleanse)(struct AmiSSLIFace *Self, void * ptr, size_t len);
  void APICALL (*CRYPTO_set_mem_debug_options)(struct AmiSSLIFace *Self, long bits);
  long APICALL (*CRYPTO_get_mem_debug_options)(struct AmiSSLIFace *Self);
  int APICALL (*CRYPTO_push_info_)(struct AmiSSLIFace *Self, const char * info, const char * file, int line);
  int APICALL (*CRYPTO_pop_info)(struct AmiSSLIFace *Self);
  int APICALL (*CRYPTO_remove_all_info)(struct AmiSSLIFace *Self);
  void APICALL (*CRYPTO_dbg_malloc)(struct AmiSSLIFace *Self, void * addr, int num, const char * file, int line, int before_p);
  void APICALL (*CRYPTO_dbg_realloc)(struct AmiSSLIFace *Self, void * addr1, void * addr2, int num, const char * file, int line, int before_p);
  void APICALL (*CRYPTO_dbg_free)(struct AmiSSLIFace *Self, void * addr, int before_p);
  void APICALL (*CRYPTO_dbg_set_options)(struct AmiSSLIFace *Self, long bits);
  long APICALL (*CRYPTO_dbg_get_options)(struct AmiSSLIFace *Self);
  void APICALL (*CRYPTO_mem_leaks)(struct AmiSSLIFace *Self, struct bio_st * bio);
  void APICALL (*CRYPTO_mem_leaks_cb)(struct AmiSSLIFace *Self, CRYPTO_MEM_LEAK_CB * (*cb)(unsigned long, const char *, int, int, void *));
  void APICALL (*OpenSSLDie)(struct AmiSSLIFace *Self, const char * file, int line, const char * assertion);
  void APICALL (*ERR_load_CRYPTO_strings)(struct AmiSSLIFace *Self);
  DSO * APICALL (*DSO_new)(struct AmiSSLIFace *Self);
  DSO * APICALL (*DSO_new_method)(struct AmiSSLIFace *Self, DSO_METHOD * method);
  int APICALL (*DSO_free)(struct AmiSSLIFace *Self, DSO * dso);
  int APICALL (*DSO_flags)(struct AmiSSLIFace *Self, DSO * dso);
  int APICALL (*DSO_up_ref)(struct AmiSSLIFace *Self, DSO * dso);
  long APICALL (*DSO_ctrl)(struct AmiSSLIFace *Self, DSO * dso, int cmd, long larg, void * parg);
  int APICALL (*DSO_set_name_converter)(struct AmiSSLIFace *Self, DSO * dso, DSO_NAME_CONVERTER_FUNC cb, DSO_NAME_CONVERTER_FUNC * oldcb);
  const char * APICALL (*DSO_get_filename)(struct AmiSSLIFace *Self, DSO * dso);
  int APICALL (*DSO_set_filename)(struct AmiSSLIFace *Self, DSO * dso, const char * filename);
  char * APICALL (*DSO_convert_filename)(struct AmiSSLIFace *Self, DSO * dso, const char * filename);
  const char * APICALL (*DSO_get_loaded_filename)(struct AmiSSLIFace *Self, DSO * dso);
  void APICALL (*DSO_set_default_method)(struct AmiSSLIFace *Self, DSO_METHOD * meth);
  DSO_METHOD * APICALL (*DSO_get_default_method)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_get_method)(struct AmiSSLIFace *Self, DSO * dso);
  DSO_METHOD * APICALL (*DSO_set_method)(struct AmiSSLIFace *Self, DSO * dso, DSO_METHOD * meth);
  DSO * APICALL (*DSO_load)(struct AmiSSLIFace *Self, DSO * dso, const char * filename, DSO_METHOD * meth, int flags);
  void * APICALL (*DSO_bind_var)(struct AmiSSLIFace *Self, DSO * dso, const char * symname);
  DSO_FUNC_TYPE APICALL (*DSO_bind_func)(struct AmiSSLIFace *Self, DSO * dso, const char * symname);
  DSO_METHOD * APICALL (*DSO_METHOD_openssl)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_METHOD_null)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_METHOD_dlfcn)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_METHOD_dl)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_METHOD_win32)(struct AmiSSLIFace *Self);
  DSO_METHOD * APICALL (*DSO_METHOD_vms)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_DSO_strings)(struct AmiSSLIFace *Self);
  const EC_METHOD * APICALL (*EC_GFp_simple_method)(struct AmiSSLIFace *Self);
  const EC_METHOD * APICALL (*EC_GFp_mont_method)(struct AmiSSLIFace *Self);
  EC_GROUP * APICALL (*EC_GROUP_new)(struct AmiSSLIFace *Self, const EC_METHOD * a);
  void APICALL (*EC_GROUP_free)(struct AmiSSLIFace *Self, EC_GROUP * a);
  void APICALL (*EC_GROUP_clear_free)(struct AmiSSLIFace *Self, EC_GROUP * a);
  int APICALL (*EC_GROUP_copy)(struct AmiSSLIFace *Self, EC_GROUP * a, const EC_GROUP * b);
  const EC_METHOD * APICALL (*EC_GROUP_method_of)(struct AmiSSLIFace *Self, const EC_GROUP * a);
  int APICALL (*EC_GROUP_set_curve_GFp)(struct AmiSSLIFace *Self, EC_GROUP * a1, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * a2);
  int APICALL (*EC_GROUP_get_curve_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * p, BIGNUM * a, BIGNUM * b, BN_CTX * a2);
  EC_GROUP * APICALL (*EC_GROUP_new_curve_GFp)(struct AmiSSLIFace *Self, const BIGNUM * p, const BIGNUM * a, const BIGNUM * b, BN_CTX * a1);
  int APICALL (*EC_GROUP_set_generator)(struct AmiSSLIFace *Self, EC_GROUP * a1, const EC_POINT * generator, const BIGNUM * order, const BIGNUM * cofactor);
  EC_POINT * APICALL (*EC_GROUP_get0_generator)(struct AmiSSLIFace *Self, const EC_GROUP * a1);
  int APICALL (*EC_GROUP_get_order)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * order, BN_CTX * a2);
  int APICALL (*EC_GROUP_get_cofactor)(struct AmiSSLIFace *Self, const EC_GROUP * a1, BIGNUM * cofactor, BN_CTX * a2);
  EC_POINT * APICALL (*EC_POINT_new)(struct AmiSSLIFace *Self, const EC_GROUP * a);
  void APICALL (*EC_POINT_free)(struct AmiSSLIFace *Self, EC_POINT * a);
  void APICALL (*EC_POINT_clear_free)(struct AmiSSLIFace *Self, EC_POINT * a);
  int APICALL (*EC_POINT_copy)(struct AmiSSLIFace *Self, EC_POINT * a, const EC_POINT * b);
  const EC_METHOD * APICALL (*EC_POINT_method_of)(struct AmiSSLIFace *Self, const EC_POINT * a);
  int APICALL (*EC_POINT_set_to_infinity)(struct AmiSSLIFace *Self, const EC_GROUP * a, EC_POINT * b);
  int APICALL (*EC_POINT_set_Jprojective_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, const BIGNUM * y, const BIGNUM * z, BN_CTX * a3);
  int APICALL (*EC_POINT_get_Jprojective_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, BIGNUM * x, BIGNUM * y, BIGNUM * z, BN_CTX * a3);
  int APICALL (*EC_POINT_set_affine_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, const BIGNUM * y, BN_CTX * a3);
  int APICALL (*EC_POINT_get_affine_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, BIGNUM * x, BIGNUM * y, BN_CTX * a3);
  int APICALL (*EC_POINT_set_compressed_coordinates_GFp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const BIGNUM * x, int y_bit, BN_CTX * a3);
  size_t APICALL (*EC_POINT_point2oct)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a2, point_conversion_form_t form, unsigned char * buf, size_t len, BN_CTX * a3);
  int APICALL (*EC_POINT_oct2point)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, const unsigned char * buf, size_t len, BN_CTX * a3);
  int APICALL (*EC_POINT_add)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const EC_POINT * a, const EC_POINT * b, BN_CTX * a2);
  int APICALL (*EC_POINT_dbl)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const EC_POINT * a, BN_CTX * a2);
  int APICALL (*EC_POINT_invert)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * a2, BN_CTX * a3);
  int APICALL (*EC_POINT_is_at_infinity)(struct AmiSSLIFace *Self, const EC_GROUP * a, const EC_POINT * b);
  int APICALL (*EC_POINT_is_on_curve)(struct AmiSSLIFace *Self, const EC_GROUP * a, const EC_POINT * b, BN_CTX * c);
  int APICALL (*EC_POINT_cmp)(struct AmiSSLIFace *Self, const EC_GROUP * a1, const EC_POINT * a, const EC_POINT * b, BN_CTX * a2);
  int APICALL (*EC_POINT_make_affine)(struct AmiSSLIFace *Self, const EC_GROUP * a, EC_POINT * b, BN_CTX * c);
  int APICALL (*EC_POINTs_make_affine)(struct AmiSSLIFace *Self, const EC_GROUP * a1, size_t num, EC_POINT ** a2, BN_CTX * a3);
  int APICALL (*EC_POINTs_mul)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const BIGNUM * a2, size_t num, const EC_POINT ** a3, const BIGNUM ** a4, BN_CTX * a5);
  int APICALL (*EC_POINT_mul)(struct AmiSSLIFace *Self, const EC_GROUP * a1, EC_POINT * r, const BIGNUM * a2, const EC_POINT * a3, const BIGNUM * a4, BN_CTX * a5);
  int APICALL (*EC_GROUP_precompute_mult)(struct AmiSSLIFace *Self, EC_GROUP * a, BN_CTX * b);
  void APICALL (*ERR_load_EC_strings)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_put_error)(struct AmiSSLIFace *Self, int lib, int func, int reason, const char * file, int line);
  void APICALL (*ERR_set_error_data)(struct AmiSSLIFace *Self, char * data, int flags);
  unsigned long APICALL (*ERR_get_error)(struct AmiSSLIFace *Self);
  unsigned long APICALL (*ERR_get_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
  unsigned long APICALL (*ERR_get_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
  unsigned long APICALL (*ERR_peek_error)(struct AmiSSLIFace *Self);
  unsigned long APICALL (*ERR_peek_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
  unsigned long APICALL (*ERR_peek_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
  unsigned long APICALL (*ERR_peek_last_error)(struct AmiSSLIFace *Self);
  unsigned long APICALL (*ERR_peek_last_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
  unsigned long APICALL (*ERR_peek_last_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
  void APICALL (*ERR_clear_error)(struct AmiSSLIFace *Self);
  char * APICALL (*ERR_error_string)(struct AmiSSLIFace *Self, unsigned long e, char * buf);
  void APICALL (*ERR_error_string_n)(struct AmiSSLIFace *Self, unsigned long e, char * buf, size_t len);
  const char * APICALL (*ERR_lib_error_string)(struct AmiSSLIFace *Self, unsigned long e);
  const char * APICALL (*ERR_func_error_string)(struct AmiSSLIFace *Self, unsigned long e);
  const char * APICALL (*ERR_reason_error_string)(struct AmiSSLIFace *Self, unsigned long e);
  void APICALL (*ERR_print_errors_cb)(struct AmiSSLIFace *Self, int (*cb)(const char *str, size_t len, void *u), void * u);
  void APICALL (*ERR_print_errors)(struct AmiSSLIFace *Self, BIO * bp);
  void APICALL (*ERR_add_error_dataA)(struct AmiSSLIFace *Self, int num, long * args);
  void APICALL (*ERR_add_error_data)(struct AmiSSLIFace *Self, int num, ...);
  void APICALL (*ERR_load_strings)(struct AmiSSLIFace *Self, int lib, ERR_STRING_DATA * str);
  void APICALL (*ERR_unload_strings)(struct AmiSSLIFace *Self, int lib, ERR_STRING_DATA * str);
  void APICALL (*ERR_load_ERR_strings)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_crypto_strings)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_free_strings)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_remove_state)(struct AmiSSLIFace *Self, unsigned long pid);
  ERR_STATE * APICALL (*ERR_get_state)(struct AmiSSLIFace *Self);
  LHASH * APICALL (*ERR_get_string_table)(struct AmiSSLIFace *Self);
  LHASH * APICALL (*ERR_get_err_state_table)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_release_err_state_table)(struct AmiSSLIFace *Self, LHASH ** hash);
  int APICALL (*ERR_get_next_error_library)(struct AmiSSLIFace *Self);
  const ERR_FNS * APICALL (*ERR_get_implementation)(struct AmiSSLIFace *Self);
  int APICALL (*ERR_set_implementation)(struct AmiSSLIFace *Self, const ERR_FNS * fns);
  void APICALL (*EVP_MD_CTX_init)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
  int APICALL (*EVP_MD_CTX_cleanup)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
  EVP_MD_CTX * APICALL (*EVP_MD_CTX_create)(struct AmiSSLIFace *Self);
  void APICALL (*EVP_MD_CTX_destroy)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx);
  int APICALL (*EVP_MD_CTX_copy_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * out, const EVP_MD_CTX * in);
  int APICALL (*EVP_DigestInit_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type, ENGINE * impl);
  int APICALL (*EVP_DigestUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const void * d, unsigned int cnt);
  int APICALL (*EVP_DigestFinal_ex)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s);
  int APICALL (*EVP_Digest)(struct AmiSSLIFace *Self, void * data, unsigned int count, unsigned char * md, unsigned int * size, const EVP_MD * type, ENGINE * impl);
  int APICALL (*EVP_MD_CTX_copy)(struct AmiSSLIFace *Self, EVP_MD_CTX * out, const EVP_MD_CTX * in);
  int APICALL (*EVP_DigestInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type);
  int APICALL (*EVP_DigestFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s);
  int APICALL (*EVP_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
  void APICALL (*EVP_set_pw_prompt)(struct AmiSSLIFace *Self, char * prompt);
  char * APICALL (*EVP_get_pw_prompt)(struct AmiSSLIFace *Self);
  int APICALL (*EVP_BytesToKey)(struct AmiSSLIFace *Self, const EVP_CIPHER * type, const EVP_MD * md, const unsigned char * salt, const unsigned char * data, int datal, int count, unsigned char * key, unsigned char * iv);
  int APICALL (*EVP_EncryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv);
  int APICALL (*EVP_EncryptInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv);
  int APICALL (*EVP_EncryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
  int APICALL (*EVP_EncryptFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
  int APICALL (*EVP_EncryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
  int APICALL (*EVP_DecryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv);
  int APICALL (*EVP_DecryptInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv);
  int APICALL (*EVP_DecryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
  int APICALL (*EVP_DecryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
  int APICALL (*EVP_DecryptFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
  int APICALL (*EVP_CipherInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, const unsigned char * key, const unsigned char * iv, int enc);
  int APICALL (*EVP_CipherInit_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * cipher, ENGINE * impl, const unsigned char * key, const unsigned char * iv, int enc);
  int APICALL (*EVP_CipherUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, const unsigned char * in, int inl);
  int APICALL (*EVP_CipherFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
  int APICALL (*EVP_CipherFinal_ex)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
  int APICALL (*EVP_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s, EVP_PKEY * pkey);
  int APICALL (*EVP_VerifyFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigbuf, unsigned int siglen, EVP_PKEY * pkey);
  int APICALL (*EVP_OpenInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char * ek, int ekl, unsigned char * iv, EVP_PKEY * priv);
  int APICALL (*EVP_OpenFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
  int APICALL (*EVP_SealInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char ** ek, int * ekl, unsigned char * iv, EVP_PKEY ** pubk, int npubk);
  int APICALL (*EVP_SealFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
  void APICALL (*EVP_EncodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
  void APICALL (*EVP_EncodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
  void APICALL (*EVP_EncodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
  int APICALL (*EVP_EncodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, const unsigned char * f, int n);
  void APICALL (*EVP_DecodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
  int APICALL (*EVP_DecodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
  int APICALL (*EVP_DecodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
  int APICALL (*EVP_DecodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, const unsigned char * f, int n);
  void APICALL (*EVP_CIPHER_CTX_init)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
  int APICALL (*EVP_CIPHER_CTX_cleanup)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
  int APICALL (*EVP_CIPHER_CTX_set_key_length)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * x, int keylen);
  int APICALL (*EVP_CIPHER_CTX_set_padding)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, int pad);
  int APICALL (*EVP_CIPHER_CTX_ctrl)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, int type, int arg, void * ptr);
  BIO_METHOD * APICALL (*BIO_f_md)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_base64)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_cipher)(struct AmiSSLIFace *Self);
  BIO_METHOD * APICALL (*BIO_f_reliable)(struct AmiSSLIFace *Self);
  void APICALL (*BIO_set_cipher)(struct AmiSSLIFace *Self, BIO * b, const EVP_CIPHER * c, unsigned char * k, unsigned char * i, int enc);
  const EVP_MD * APICALL (*EVP_md_null)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_md2)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_md4)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_md5)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_sha)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_sha1)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_dss)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_dss1)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_mdc2)(struct AmiSSLIFace *Self);
  const EVP_MD * APICALL (*EVP_ripemd160)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_enc_null)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_cfb1)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_cfb8)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_cfb1)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_cfb8)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_des_ede3_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_desx_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc4)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc4_40)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_idea_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_idea_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_idea_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_idea_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_40_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_64_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc2_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_bf_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_bf_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_bf_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_bf_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_cast5_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_cast5_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_cast5_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_cast5_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_cfb64)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_cfb1)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_cfb8)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_cfb128)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_128_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_cfb1)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_cfb8)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_cfb128)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_192_ofb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_ecb)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_cbc)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_cfb1)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_cfb8)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_cfb128)(struct AmiSSLIFace *Self);
  const EVP_CIPHER * APICALL (*EVP_aes_256_ofb)(struct AmiSSLIFace *Self);
  void APICALL (*OPENSSL_add_all_algorithms_noconf)(struct AmiSSLIFace *Self);
  void APICALL (*OPENSSL_add_all_algorithms_conf)(struct AmiSSLIFace *Self);
  void APICALL (*OpenSSL_add_all_ciphers)(struct AmiSSLIFace *Self);
  void APICALL (*OpenSSL_add_all_digests)(struct AmiSSLIFace *Self);
  int APICALL (*EVP_add_cipher)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher);
  int APICALL (*EVP_add_digest)(struct AmiSSLIFace *Self, const EVP_MD * digest);
  const EVP_CIPHER * APICALL (*EVP_get_cipherbyname)(struct AmiSSLIFace *Self, const char * name);
  const EVP_MD * APICALL (*EVP_get_digestbyname)(struct AmiSSLIFace *Self, const char * name);
  void APICALL (*EVP_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*EVP_PKEY_decrypt)(struct AmiSSLIFace *Self, unsigned char * dec_key, unsigned char * enc_key, int enc_key_len, EVP_PKEY * private_key);
  int APICALL (*EVP_PKEY_encrypt)(struct AmiSSLIFace *Self, unsigned char * enc_key, unsigned char * key, int key_len, EVP_PKEY * pub_key);
  int APICALL (*EVP_PKEY_type)(struct AmiSSLIFace *Self, int type);
  int APICALL (*EVP_PKEY_bits)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  int APICALL (*EVP_PKEY_size)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  int APICALL (*EVP_PKEY_assign)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int type, char * key);
  int APICALL (*EVP_PKEY_set1_RSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct rsa_st * key);
  struct rsa_st * APICALL (*EVP_PKEY_get1_RSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  int APICALL (*EVP_PKEY_set1_DSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct dsa_st * key);
  struct dsa_st * APICALL (*EVP_PKEY_get1_DSA)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  int APICALL (*EVP_PKEY_set1_DH)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, struct dh_st * key);
  struct dh_st * APICALL (*EVP_PKEY_get1_DH)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*EVP_PKEY_new)(struct AmiSSLIFace *Self);
  void APICALL (*EVP_PKEY_free)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*d2i_PublicKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, unsigned char ** pp, long length);
  int APICALL (*i2d_PublicKey)(struct AmiSSLIFace *Self, EVP_PKEY * a, unsigned char ** pp);
  EVP_PKEY * APICALL (*d2i_PrivateKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, unsigned char ** pp, long length);
  EVP_PKEY * APICALL (*d2i_AutoPrivateKey)(struct AmiSSLIFace *Self, EVP_PKEY ** a, unsigned char ** pp, long length);
  int APICALL (*i2d_PrivateKey)(struct AmiSSLIFace *Self, EVP_PKEY * a, unsigned char ** pp);
  int APICALL (*EVP_PKEY_copy_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * to, EVP_PKEY * from);
  int APICALL (*EVP_PKEY_missing_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  int APICALL (*EVP_PKEY_save_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int mode);
  int APICALL (*EVP_PKEY_cmp_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * a, EVP_PKEY * b);
  int APICALL (*EVP_CIPHER_type)(struct AmiSSLIFace *Self, const EVP_CIPHER * ctx);
  int APICALL (*EVP_CIPHER_param_to_asn1)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
  int APICALL (*EVP_CIPHER_asn1_to_param)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
  int APICALL (*EVP_CIPHER_set_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
  int APICALL (*EVP_CIPHER_get_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
  int APICALL (*PKCS5_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de);
  int APICALL (*PKCS5_PBKDF2_HMAC_SHA1)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, int keylen, unsigned char * out);
  int APICALL (*PKCS5_v2_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md, int en_de);
  void APICALL (*PKCS5_PBE_add)(struct AmiSSLIFace *Self);
  int APICALL (*EVP_PBE_CipherInit)(struct AmiSSLIFace *Self, ASN1_OBJECT * pbe_obj, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER_CTX * ctx, int en_de);
  int APICALL (*EVP_PBE_alg_add)(struct AmiSSLIFace *Self, int nid, const EVP_CIPHER * cipher, const EVP_MD * md, EVP_PBE_KEYGEN * (*keygen)(struct evp_cipher_ctx_st *ctx, const char *pass, int passlen, struct asn1_type_st *param, struct evp_cipher_st *cipher, struct env_md_st *md, int en_de));
  void APICALL (*EVP_PBE_cleanup)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_EVP_strings)(struct AmiSSLIFace *Self);
  void APICALL (*HMAC_CTX_init)(struct AmiSSLIFace *Self, HMAC_CTX * ctx);
  void APICALL (*HMAC_CTX_cleanup)(struct AmiSSLIFace *Self, HMAC_CTX * ctx);
  void APICALL (*HMAC_Init)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const void * key, int len, const EVP_MD * md);
  void APICALL (*HMAC_Init_ex)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const void * key, int len, const EVP_MD * md, ENGINE * impl);
  void APICALL (*HMAC_Update)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const unsigned char * data, int len);
  void APICALL (*HMAC_Final)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned char * md, unsigned int * len);
  unsigned char * APICALL (*HMAC)(struct AmiSSLIFace *Self, const EVP_MD * evp_md, const void * key, int key_len, const unsigned char * d, int n, unsigned char * md, unsigned int * md_len);
  KRB5_ENCDATA * APICALL (*KRB5_ENCDATA_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_ENCDATA_free)(struct AmiSSLIFace *Self, KRB5_ENCDATA * a);
  KRB5_ENCDATA * APICALL (*d2i_KRB5_ENCDATA)(struct AmiSSLIFace *Self, KRB5_ENCDATA ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_ENCDATA)(struct AmiSSLIFace *Self, KRB5_ENCDATA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_ENCDATA_it)(struct AmiSSLIFace *Self);
  KRB5_PRINCNAME * APICALL (*KRB5_PRINCNAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_PRINCNAME_free)(struct AmiSSLIFace *Self, KRB5_PRINCNAME * a);
  KRB5_PRINCNAME * APICALL (*d2i_KRB5_PRINCNAME)(struct AmiSSLIFace *Self, KRB5_PRINCNAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_PRINCNAME)(struct AmiSSLIFace *Self, KRB5_PRINCNAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_PRINCNAME_it)(struct AmiSSLIFace *Self);
  KRB5_TKTBODY * APICALL (*KRB5_TKTBODY_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_TKTBODY_free)(struct AmiSSLIFace *Self, KRB5_TKTBODY * a);
  KRB5_TKTBODY * APICALL (*d2i_KRB5_TKTBODY)(struct AmiSSLIFace *Self, KRB5_TKTBODY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_TKTBODY)(struct AmiSSLIFace *Self, KRB5_TKTBODY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_TKTBODY_it)(struct AmiSSLIFace *Self);
  KRB5_APREQBODY * APICALL (*KRB5_APREQBODY_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_APREQBODY_free)(struct AmiSSLIFace *Self, KRB5_APREQBODY * a);
  KRB5_APREQBODY * APICALL (*d2i_KRB5_APREQBODY)(struct AmiSSLIFace *Self, KRB5_APREQBODY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_APREQBODY)(struct AmiSSLIFace *Self, KRB5_APREQBODY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_APREQBODY_it)(struct AmiSSLIFace *Self);
  KRB5_TICKET * APICALL (*KRB5_TICKET_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_TICKET_free)(struct AmiSSLIFace *Self, KRB5_TICKET * a);
  KRB5_TICKET * APICALL (*d2i_KRB5_TICKET)(struct AmiSSLIFace *Self, KRB5_TICKET ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_TICKET)(struct AmiSSLIFace *Self, KRB5_TICKET * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_TICKET_it)(struct AmiSSLIFace *Self);
  KRB5_APREQ * APICALL (*KRB5_APREQ_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_APREQ_free)(struct AmiSSLIFace *Self, KRB5_APREQ * a);
  KRB5_APREQ * APICALL (*d2i_KRB5_APREQ)(struct AmiSSLIFace *Self, KRB5_APREQ ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_APREQ)(struct AmiSSLIFace *Self, KRB5_APREQ * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_APREQ_it)(struct AmiSSLIFace *Self);
  KRB5_CHECKSUM * APICALL (*KRB5_CHECKSUM_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_CHECKSUM_free)(struct AmiSSLIFace *Self, KRB5_CHECKSUM * a);
  KRB5_CHECKSUM * APICALL (*d2i_KRB5_CHECKSUM)(struct AmiSSLIFace *Self, KRB5_CHECKSUM ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_CHECKSUM)(struct AmiSSLIFace *Self, KRB5_CHECKSUM * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_CHECKSUM_it)(struct AmiSSLIFace *Self);
  KRB5_ENCKEY * APICALL (*KRB5_ENCKEY_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_ENCKEY_free)(struct AmiSSLIFace *Self, KRB5_ENCKEY * a);
  KRB5_ENCKEY * APICALL (*d2i_KRB5_ENCKEY)(struct AmiSSLIFace *Self, KRB5_ENCKEY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_ENCKEY)(struct AmiSSLIFace *Self, KRB5_ENCKEY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_ENCKEY_it)(struct AmiSSLIFace *Self);
  KRB5_AUTHDATA * APICALL (*KRB5_AUTHDATA_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_AUTHDATA_free)(struct AmiSSLIFace *Self, KRB5_AUTHDATA * a);
  KRB5_AUTHDATA * APICALL (*d2i_KRB5_AUTHDATA)(struct AmiSSLIFace *Self, KRB5_AUTHDATA ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_AUTHDATA)(struct AmiSSLIFace *Self, KRB5_AUTHDATA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_AUTHDATA_it)(struct AmiSSLIFace *Self);
  KRB5_AUTHENTBODY * APICALL (*KRB5_AUTHENTBODY_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_AUTHENTBODY_free)(struct AmiSSLIFace *Self, KRB5_AUTHENTBODY * a);
  KRB5_AUTHENTBODY * APICALL (*d2i_KRB5_AUTHENTBODY)(struct AmiSSLIFace *Self, KRB5_AUTHENTBODY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_AUTHENTBODY)(struct AmiSSLIFace *Self, KRB5_AUTHENTBODY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_AUTHENTBODY_it)(struct AmiSSLIFace *Self);
  KRB5_AUTHENT * APICALL (*KRB5_AUTHENT_new)(struct AmiSSLIFace *Self);
  void APICALL (*KRB5_AUTHENT_free)(struct AmiSSLIFace *Self, KRB5_AUTHENT * a);
  KRB5_AUTHENT * APICALL (*d2i_KRB5_AUTHENT)(struct AmiSSLIFace *Self, KRB5_AUTHENT ** a, unsigned char ** in, long len);
  int APICALL (*i2d_KRB5_AUTHENT)(struct AmiSSLIFace *Self, KRB5_AUTHENT * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*KRB5_AUTHENT_it)(struct AmiSSLIFace *Self);
  LHASH * APICALL (*lh_new)(struct AmiSSLIFace *Self, LHASH_HASH_FN_TYPE h, LHASH_COMP_FN_TYPE c);
  void APICALL (*lh_free)(struct AmiSSLIFace *Self, LHASH * lh);
  void * APICALL (*lh_insert)(struct AmiSSLIFace *Self, LHASH * lh, const void * data);
  void * APICALL (*lh_delete)(struct AmiSSLIFace *Self, LHASH * lh, const void * data);
  void * APICALL (*lh_retrieve)(struct AmiSSLIFace *Self, LHASH * lh, const void * data);
  void APICALL (*lh_doall)(struct AmiSSLIFace *Self, LHASH * lh, LHASH_DOALL_FN_TYPE func);
  void APICALL (*lh_doall_arg)(struct AmiSSLIFace *Self, LHASH * lh, LHASH_DOALL_ARG_FN_TYPE func, void * arg);
  unsigned long APICALL (*lh_strhash)(struct AmiSSLIFace *Self, const char * c);
  unsigned long APICALL (*lh_num_items)(struct AmiSSLIFace *Self, const LHASH * lh);
  void APICALL (*lh_stats_bio)(struct AmiSSLIFace *Self, const LHASH * lh, BIO * out);
  void APICALL (*lh_node_stats_bio)(struct AmiSSLIFace *Self, const LHASH * lh, BIO * out);
  void APICALL (*lh_node_usage_stats_bio)(struct AmiSSLIFace *Self, const LHASH * lh, BIO * out);
  int APICALL (*OBJ_NAME_init)(struct AmiSSLIFace *Self);
  int APICALL (*OBJ_NAME_new_index)(struct AmiSSLIFace *Self, unsigned long (*hash_func)(const char *), int (*cmp_func)(const char *, const char *), void (*free_func)(const char *, int, const char *));
  const char * APICALL (*OBJ_NAME_get)(struct AmiSSLIFace *Self, const char * name, int type);
  int APICALL (*OBJ_NAME_add)(struct AmiSSLIFace *Self, const char * name, int type, const char * data);
  int APICALL (*OBJ_NAME_remove)(struct AmiSSLIFace *Self, const char * name, int type);
  void APICALL (*OBJ_NAME_cleanup)(struct AmiSSLIFace *Self, int type);
  void APICALL (*OBJ_NAME_do_all)(struct AmiSSLIFace *Self, int type, void (*fn)(const OBJ_NAME *, void *arg), void * arg);
  void APICALL (*OBJ_NAME_do_all_sorted)(struct AmiSSLIFace *Self, int type, void (*fn)(const OBJ_NAME *, void *arg), void * arg);
  ASN1_OBJECT * APICALL (*OBJ_dup)(struct AmiSSLIFace *Self, const ASN1_OBJECT * o);
  ASN1_OBJECT * APICALL (*OBJ_nid2obj)(struct AmiSSLIFace *Self, int n);
  const char * APICALL (*OBJ_nid2ln)(struct AmiSSLIFace *Self, int n);
  const char * APICALL (*OBJ_nid2sn)(struct AmiSSLIFace *Self, int n);
  int APICALL (*OBJ_obj2nid)(struct AmiSSLIFace *Self, const ASN1_OBJECT * o);
  ASN1_OBJECT * APICALL (*OBJ_txt2obj)(struct AmiSSLIFace *Self, const char * s, int no_name);
  int APICALL (*OBJ_obj2txt)(struct AmiSSLIFace *Self, char * buf, int buf_len, const ASN1_OBJECT * a, int no_name);
  int APICALL (*OBJ_txt2nid)(struct AmiSSLIFace *Self, const char * s);
  int APICALL (*OBJ_ln2nid)(struct AmiSSLIFace *Self, const char * s);
  int APICALL (*OBJ_sn2nid)(struct AmiSSLIFace *Self, const char * s);
  int APICALL (*OBJ_cmp)(struct AmiSSLIFace *Self, const ASN1_OBJECT * a, const ASN1_OBJECT * b);
  const char * APICALL (*OBJ_bsearch)(struct AmiSSLIFace *Self, const char * key, const char * base, int num, int size, int (*cmp)(const void *, const void *));
  int APICALL (*OBJ_new_nid)(struct AmiSSLIFace *Self, int num);
  int APICALL (*OBJ_add_object)(struct AmiSSLIFace *Self, const ASN1_OBJECT * obj);
  int APICALL (*OBJ_create)(struct AmiSSLIFace *Self, const char * oid, const char * sn, const char * ln);
  void APICALL (*OBJ_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*OBJ_create_objects)(struct AmiSSLIFace *Self, BIO * in);
  void APICALL (*ERR_load_OBJ_strings)(struct AmiSSLIFace *Self);
  OCSP_RESPONSE * APICALL (*OCSP_sendreq_bio)(struct AmiSSLIFace *Self, BIO * b, char * path, OCSP_REQUEST * req);
  OCSP_CERTID * APICALL (*OCSP_cert_to_id)(struct AmiSSLIFace *Self, const EVP_MD * dgst, X509 * subject, X509 * issuer);
  OCSP_CERTID * APICALL (*OCSP_cert_id_new)(struct AmiSSLIFace *Self, const EVP_MD * dgst, X509_NAME * issuerName, ASN1_BIT_STRING * issuerKey, ASN1_INTEGER * serialNumber);
  OCSP_ONEREQ * APICALL (*OCSP_request_add0_id)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, OCSP_CERTID * cid);
  int APICALL (*OCSP_request_add1_nonce)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, unsigned char * val, int len);
  int APICALL (*OCSP_basic_add1_nonce)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, unsigned char * val, int len);
  int APICALL (*OCSP_check_nonce)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, OCSP_BASICRESP * bs);
  int APICALL (*OCSP_copy_nonce)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, OCSP_REQUEST * req);
  int APICALL (*OCSP_request_set1_name)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, X509_NAME * nm);
  int APICALL (*OCSP_request_add1_cert)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, X509 * cert);
  int APICALL (*OCSP_request_sign)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, X509 * signer, EVP_PKEY * key, const EVP_MD * dgst, STACK_OF(X509) * certs, unsigned long flags);
  int APICALL (*OCSP_response_status)(struct AmiSSLIFace *Self, OCSP_RESPONSE * resp);
  OCSP_BASICRESP * APICALL (*OCSP_response_get1_basic)(struct AmiSSLIFace *Self, OCSP_RESPONSE * resp);
  int APICALL (*OCSP_resp_count)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs);
  OCSP_SINGLERESP * APICALL (*OCSP_resp_get0)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, int idx);
  int APICALL (*OCSP_resp_find)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, OCSP_CERTID * id, int last);
  int APICALL (*OCSP_single_get0_status)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * single, int * reason, ASN1_GENERALIZEDTIME ** revtime, ASN1_GENERALIZEDTIME ** thisupd, ASN1_GENERALIZEDTIME ** nextupd);
  int APICALL (*OCSP_resp_find_status)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, OCSP_CERTID * id, int * status, int * reason, ASN1_GENERALIZEDTIME ** revtime, ASN1_GENERALIZEDTIME ** thisupd, ASN1_GENERALIZEDTIME ** nextupd);
  int APICALL (*OCSP_check_validity)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * thisupd, ASN1_GENERALIZEDTIME * nextupd, long sec, long maxsec);
  int APICALL (*OCSP_request_verify)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, STACK_OF(X509) * certs, X509_STORE * store, unsigned long flags);
  int APICALL (*OCSP_parse_url)(struct AmiSSLIFace *Self, char * url, char ** phost, char ** pport, char ** ppath, int * pssl);
  int APICALL (*OCSP_id_issuer_cmp)(struct AmiSSLIFace *Self, OCSP_CERTID * a, OCSP_CERTID * b);
  int APICALL (*OCSP_id_cmp)(struct AmiSSLIFace *Self, OCSP_CERTID * a, OCSP_CERTID * b);
  int APICALL (*OCSP_request_onereq_count)(struct AmiSSLIFace *Self, OCSP_REQUEST * req);
  OCSP_ONEREQ * APICALL (*OCSP_request_onereq_get0)(struct AmiSSLIFace *Self, OCSP_REQUEST * req, int i);
  OCSP_CERTID * APICALL (*OCSP_onereq_get0_id)(struct AmiSSLIFace *Self, OCSP_ONEREQ * one);
  int APICALL (*OCSP_id_get0_info)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING ** piNameHash, ASN1_OBJECT ** pmd, ASN1_OCTET_STRING ** pikeyHash, ASN1_INTEGER ** pserial, OCSP_CERTID * cid);
  int APICALL (*OCSP_request_is_signed)(struct AmiSSLIFace *Self, OCSP_REQUEST * req);
  OCSP_RESPONSE * APICALL (*OCSP_response_create)(struct AmiSSLIFace *Self, int status, OCSP_BASICRESP * bs);
  OCSP_SINGLERESP * APICALL (*OCSP_basic_add1_status)(struct AmiSSLIFace *Self, OCSP_BASICRESP * rsp, OCSP_CERTID * cid, int status, int reason, ASN1_TIME * revtime, ASN1_TIME * thisupd, ASN1_TIME * nextupd);
  int APICALL (*OCSP_basic_add1_cert)(struct AmiSSLIFace *Self, OCSP_BASICRESP * resp, X509 * cert);
  int APICALL (*OCSP_basic_sign)(struct AmiSSLIFace *Self, OCSP_BASICRESP * brsp, X509 * signer, EVP_PKEY * key, const EVP_MD * dgst, STACK_OF(X509) * certs, unsigned long flags);
  ASN1_STRING * APICALL (*ASN1_STRING_encode)(struct AmiSSLIFace *Self, ASN1_STRING * s, int (*i2d)(), char * data, STACK_OF(ASN1_OBJECT) * sk);
  X509_EXTENSION * APICALL (*OCSP_crlID_new)(struct AmiSSLIFace *Self, char * url, long * n, char * tim);
  X509_EXTENSION * APICALL (*OCSP_accept_responses_new)(struct AmiSSLIFace *Self, char ** oids);
  X509_EXTENSION * APICALL (*OCSP_archive_cutoff_new)(struct AmiSSLIFace *Self, char * tim);
  X509_EXTENSION * APICALL (*OCSP_url_svcloc_new)(struct AmiSSLIFace *Self, X509_NAME * issuer, char ** urls);
  int APICALL (*OCSP_REQUEST_get_ext_count)(struct AmiSSLIFace *Self, OCSP_REQUEST * x);
  int APICALL (*OCSP_REQUEST_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, int lastpos);
  int APICALL (*OCSP_REQUEST_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*OCSP_REQUEST_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*OCSP_REQUEST_get_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int loc);
  X509_EXTENSION * APICALL (*OCSP_REQUEST_delete_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int loc);
  void * APICALL (*OCSP_REQUEST_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, int * crit, int * idx);
  int APICALL (*OCSP_REQUEST_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*OCSP_REQUEST_add_ext)(struct AmiSSLIFace *Self, OCSP_REQUEST * x, X509_EXTENSION * ex, int loc);
  int APICALL (*OCSP_ONEREQ_get_ext_count)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x);
  int APICALL (*OCSP_ONEREQ_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, int lastpos);
  int APICALL (*OCSP_ONEREQ_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*OCSP_ONEREQ_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*OCSP_ONEREQ_get_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int loc);
  X509_EXTENSION * APICALL (*OCSP_ONEREQ_delete_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int loc);
  void * APICALL (*OCSP_ONEREQ_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, int * crit, int * idx);
  int APICALL (*OCSP_ONEREQ_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*OCSP_ONEREQ_add_ext)(struct AmiSSLIFace *Self, OCSP_ONEREQ * x, X509_EXTENSION * ex, int loc);
  int APICALL (*OCSP_BASICRESP_get_ext_count)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x);
  int APICALL (*OCSP_BASICRESP_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, int lastpos);
  int APICALL (*OCSP_BASICRESP_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*OCSP_BASICRESP_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*OCSP_BASICRESP_get_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int loc);
  X509_EXTENSION * APICALL (*OCSP_BASICRESP_delete_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int loc);
  void * APICALL (*OCSP_BASICRESP_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, int * crit, int * idx);
  int APICALL (*OCSP_BASICRESP_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*OCSP_BASICRESP_add_ext)(struct AmiSSLIFace *Self, OCSP_BASICRESP * x, X509_EXTENSION * ex, int loc);
  int APICALL (*OCSP_SINGLERESP_get_ext_count)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x);
  int APICALL (*OCSP_SINGLERESP_get_ext_by_NID)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, int lastpos);
  int APICALL (*OCSP_SINGLERESP_get_ext_by_OBJ)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*OCSP_SINGLERESP_get_ext_by_critical)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*OCSP_SINGLERESP_get_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int loc);
  X509_EXTENSION * APICALL (*OCSP_SINGLERESP_delete_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int loc);
  void * APICALL (*OCSP_SINGLERESP_get1_ext_d2i)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, int * crit, int * idx);
  int APICALL (*OCSP_SINGLERESP_add1_ext_i2d)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*OCSP_SINGLERESP_add_ext)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * x, X509_EXTENSION * ex, int loc);
  OCSP_SINGLERESP * APICALL (*OCSP_SINGLERESP_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_SINGLERESP_free)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * a);
  OCSP_SINGLERESP * APICALL (*d2i_OCSP_SINGLERESP)(struct AmiSSLIFace *Self, OCSP_SINGLERESP ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_SINGLERESP)(struct AmiSSLIFace *Self, OCSP_SINGLERESP * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_SINGLERESP_it)(struct AmiSSLIFace *Self);
  OCSP_CERTSTATUS * APICALL (*OCSP_CERTSTATUS_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_CERTSTATUS_free)(struct AmiSSLIFace *Self, OCSP_CERTSTATUS * a);
  OCSP_CERTSTATUS * APICALL (*d2i_OCSP_CERTSTATUS)(struct AmiSSLIFace *Self, OCSP_CERTSTATUS ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_CERTSTATUS)(struct AmiSSLIFace *Self, OCSP_CERTSTATUS * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_CERTSTATUS_it)(struct AmiSSLIFace *Self);
  OCSP_REVOKEDINFO * APICALL (*OCSP_REVOKEDINFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_REVOKEDINFO_free)(struct AmiSSLIFace *Self, OCSP_REVOKEDINFO * a);
  OCSP_REVOKEDINFO * APICALL (*d2i_OCSP_REVOKEDINFO)(struct AmiSSLIFace *Self, OCSP_REVOKEDINFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_REVOKEDINFO)(struct AmiSSLIFace *Self, OCSP_REVOKEDINFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_REVOKEDINFO_it)(struct AmiSSLIFace *Self);
  OCSP_BASICRESP * APICALL (*OCSP_BASICRESP_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_BASICRESP_free)(struct AmiSSLIFace *Self, OCSP_BASICRESP * a);
  OCSP_BASICRESP * APICALL (*d2i_OCSP_BASICRESP)(struct AmiSSLIFace *Self, OCSP_BASICRESP ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_BASICRESP)(struct AmiSSLIFace *Self, OCSP_BASICRESP * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_BASICRESP_it)(struct AmiSSLIFace *Self);
  OCSP_RESPDATA * APICALL (*OCSP_RESPDATA_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_RESPDATA_free)(struct AmiSSLIFace *Self, OCSP_RESPDATA * a);
  OCSP_RESPDATA * APICALL (*d2i_OCSP_RESPDATA)(struct AmiSSLIFace *Self, OCSP_RESPDATA ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_RESPDATA)(struct AmiSSLIFace *Self, OCSP_RESPDATA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_RESPDATA_it)(struct AmiSSLIFace *Self);
  OCSP_RESPID * APICALL (*OCSP_RESPID_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_RESPID_free)(struct AmiSSLIFace *Self, OCSP_RESPID * a);
  OCSP_RESPID * APICALL (*d2i_OCSP_RESPID)(struct AmiSSLIFace *Self, OCSP_RESPID ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_RESPID)(struct AmiSSLIFace *Self, OCSP_RESPID * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_RESPID_it)(struct AmiSSLIFace *Self);
  OCSP_RESPONSE * APICALL (*OCSP_RESPONSE_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_RESPONSE_free)(struct AmiSSLIFace *Self, OCSP_RESPONSE * a);
  OCSP_RESPONSE * APICALL (*d2i_OCSP_RESPONSE)(struct AmiSSLIFace *Self, OCSP_RESPONSE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_RESPONSE)(struct AmiSSLIFace *Self, OCSP_RESPONSE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_RESPONSE_it)(struct AmiSSLIFace *Self);
  OCSP_RESPBYTES * APICALL (*OCSP_RESPBYTES_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_RESPBYTES_free)(struct AmiSSLIFace *Self, OCSP_RESPBYTES * a);
  OCSP_RESPBYTES * APICALL (*d2i_OCSP_RESPBYTES)(struct AmiSSLIFace *Self, OCSP_RESPBYTES ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_RESPBYTES)(struct AmiSSLIFace *Self, OCSP_RESPBYTES * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_RESPBYTES_it)(struct AmiSSLIFace *Self);
  OCSP_ONEREQ * APICALL (*OCSP_ONEREQ_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_ONEREQ_free)(struct AmiSSLIFace *Self, OCSP_ONEREQ * a);
  OCSP_ONEREQ * APICALL (*d2i_OCSP_ONEREQ)(struct AmiSSLIFace *Self, OCSP_ONEREQ ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_ONEREQ)(struct AmiSSLIFace *Self, OCSP_ONEREQ * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_ONEREQ_it)(struct AmiSSLIFace *Self);
  OCSP_CERTID * APICALL (*OCSP_CERTID_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_CERTID_free)(struct AmiSSLIFace *Self, OCSP_CERTID * a);
  OCSP_CERTID * APICALL (*d2i_OCSP_CERTID)(struct AmiSSLIFace *Self, OCSP_CERTID ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_CERTID)(struct AmiSSLIFace *Self, OCSP_CERTID * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_CERTID_it)(struct AmiSSLIFace *Self);
  OCSP_REQUEST * APICALL (*OCSP_REQUEST_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_REQUEST_free)(struct AmiSSLIFace *Self, OCSP_REQUEST * a);
  OCSP_REQUEST * APICALL (*d2i_OCSP_REQUEST)(struct AmiSSLIFace *Self, OCSP_REQUEST ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_REQUEST)(struct AmiSSLIFace *Self, OCSP_REQUEST * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_REQUEST_it)(struct AmiSSLIFace *Self);
  OCSP_SIGNATURE * APICALL (*OCSP_SIGNATURE_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_SIGNATURE_free)(struct AmiSSLIFace *Self, OCSP_SIGNATURE * a);
  OCSP_SIGNATURE * APICALL (*d2i_OCSP_SIGNATURE)(struct AmiSSLIFace *Self, OCSP_SIGNATURE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_SIGNATURE)(struct AmiSSLIFace *Self, OCSP_SIGNATURE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_SIGNATURE_it)(struct AmiSSLIFace *Self);
  OCSP_REQINFO * APICALL (*OCSP_REQINFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_REQINFO_free)(struct AmiSSLIFace *Self, OCSP_REQINFO * a);
  OCSP_REQINFO * APICALL (*d2i_OCSP_REQINFO)(struct AmiSSLIFace *Self, OCSP_REQINFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_REQINFO)(struct AmiSSLIFace *Self, OCSP_REQINFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_REQINFO_it)(struct AmiSSLIFace *Self);
  OCSP_CRLID * APICALL (*OCSP_CRLID_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_CRLID_free)(struct AmiSSLIFace *Self, OCSP_CRLID * a);
  OCSP_CRLID * APICALL (*d2i_OCSP_CRLID)(struct AmiSSLIFace *Self, OCSP_CRLID ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_CRLID)(struct AmiSSLIFace *Self, OCSP_CRLID * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_CRLID_it)(struct AmiSSLIFace *Self);
  OCSP_SERVICELOC * APICALL (*OCSP_SERVICELOC_new)(struct AmiSSLIFace *Self);
  void APICALL (*OCSP_SERVICELOC_free)(struct AmiSSLIFace *Self, OCSP_SERVICELOC * a);
  OCSP_SERVICELOC * APICALL (*d2i_OCSP_SERVICELOC)(struct AmiSSLIFace *Self, OCSP_SERVICELOC ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OCSP_SERVICELOC)(struct AmiSSLIFace *Self, OCSP_SERVICELOC * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OCSP_SERVICELOC_it)(struct AmiSSLIFace *Self);
  char * APICALL (*OCSP_response_status_str)(struct AmiSSLIFace *Self, long s);
  char * APICALL (*OCSP_cert_status_str)(struct AmiSSLIFace *Self, long s);
  char * APICALL (*OCSP_crl_reason_str)(struct AmiSSLIFace *Self, long s);
  int APICALL (*OCSP_REQUEST_print)(struct AmiSSLIFace *Self, BIO * bp, OCSP_REQUEST * a, unsigned long flags);
  int APICALL (*OCSP_RESPONSE_print)(struct AmiSSLIFace *Self, BIO * bp, OCSP_RESPONSE * o, unsigned long flags);
  int APICALL (*OCSP_basic_verify)(struct AmiSSLIFace *Self, OCSP_BASICRESP * bs, STACK_OF(X509) * certs, X509_STORE * st, unsigned long flags);
  void APICALL (*ERR_load_OCSP_strings)(struct AmiSSLIFace *Self);
  int APICALL (*PEM_get_EVP_CIPHER_INFO)(struct AmiSSLIFace *Self, char * header, EVP_CIPHER_INFO * cipher);
  int APICALL (*PEM_do_header)(struct AmiSSLIFace *Self, EVP_CIPHER_INFO * cipher, unsigned char * data, long * len, pem_password_cb * (*callback)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_read_bio)(struct AmiSSLIFace *Self, BIO * bp, char ** name, char ** header, unsigned char ** data, long * len);
  int APICALL (*PEM_write_bio)(struct AmiSSLIFace *Self, BIO * bp, const char * name, char * hdr, unsigned char * data, long len);
  int APICALL (*PEM_bytes_read_bio)(struct AmiSSLIFace *Self, unsigned char ** pdata, long * plen, char ** pnm, const char * name, BIO * bp, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  char * APICALL (*PEM_ASN1_read_bio)(struct AmiSSLIFace *Self, char * (*d2i)(), const char * name, BIO * bp, char ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_ASN1_write_bio)(struct AmiSSLIFace *Self, int (*i2d)(), const char * name, BIO * bp, char * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  STACK_OF(X509_INFO) * APICALL (*PEM_X509_INFO_read_bio)(struct AmiSSLIFace *Self, BIO * bp, STACK_OF(X509_INFO) * sk, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_X509_INFO_write_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_INFO * xi, EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cd)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_SealInit)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, EVP_CIPHER * type, EVP_MD * md_type, unsigned char ** ek, int * ekl, unsigned char * iv, EVP_PKEY ** pubk, int npubk);
  void APICALL (*PEM_SealUpdate)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
  int APICALL (*PEM_SealFinal)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, unsigned char * sig, int * sigl, unsigned char * out, int * outl, EVP_PKEY * priv);
  void APICALL (*PEM_SignInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_MD * type);
  void APICALL (*PEM_SignUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * d, unsigned int cnt);
  int APICALL (*PEM_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigret, unsigned int * siglen, EVP_PKEY * pkey);
  int APICALL (*PEM_def_callback)(struct AmiSSLIFace *Self, char * buf, int num, int w, void * key);
  void APICALL (*PEM_proc_type)(struct AmiSSLIFace *Self, char * buf, int type);
  void APICALL (*PEM_dek_info)(struct AmiSSLIFace *Self, char * buf, const char * type, int len, char * str);
  X509 * APICALL (*PEM_read_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
  X509 * APICALL (*PEM_read_bio_X509_AUX)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_X509_AUX)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
  X509_REQ * APICALL (*PEM_read_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * x);
  int APICALL (*PEM_write_bio_X509_REQ_NEW)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * x);
  X509_CRL * APICALL (*PEM_read_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * x);
  PKCS7 * APICALL (*PEM_read_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 * x);
  NETSCAPE_CERT_SEQUENCE * APICALL (*PEM_read_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, NETSCAPE_CERT_SEQUENCE ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, NETSCAPE_CERT_SEQUENCE * x);
  X509_SIG * APICALL (*PEM_read_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG * x);
  PKCS8_PRIV_KEY_INFO * APICALL (*PEM_read_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO * x);
  RSA * APICALL (*PEM_read_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, RSA * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  RSA * APICALL (*PEM_read_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * bp, RSA * x);
  RSA * APICALL (*PEM_read_bio_RSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_RSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, RSA * x);
  DSA * APICALL (*PEM_read_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, DSA * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  DSA * APICALL (*PEM_read_bio_DSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_DSA_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, DSA * x);
  DSA * APICALL (*PEM_read_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, DSA * x);
  DH * APICALL (*PEM_read_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, DH ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, DH * x);
  EVP_PKEY * APICALL (*PEM_read_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  EVP_PKEY * APICALL (*PEM_read_bio_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PUBKEY)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * x);
  int APICALL (*PEM_write_bio_PKCS8PrivateKey_nid)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * x, int nid, char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*PEM_write_bio_PKCS8PrivateKey)(struct AmiSSLIFace *Self, BIO * a, EVP_PKEY * b, const EVP_CIPHER * c, char * d, int a1, pem_password_cb * (*e)(char *buf, int size, int rwflag, void *userdata), void * f);
  int APICALL (*i2d_PKCS8PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * x, const EVP_CIPHER * enc, char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  int APICALL (*i2d_PKCS8PrivateKey_nid_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * x, int nid, char * kstr, int klen, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  EVP_PKEY * APICALL (*d2i_PKCS8PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata), void * u);
  void APICALL (*ERR_load_PEM_strings)(struct AmiSSLIFace *Self);
  PKCS12_SAFEBAG * APICALL (*PKCS12_x5092certbag)(struct AmiSSLIFace *Self, X509 * x509);
  PKCS12_SAFEBAG * APICALL (*PKCS12_x509crl2certbag)(struct AmiSSLIFace *Self, X509_CRL * crl);
  X509 * APICALL (*PKCS12_certbag2x509)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
  X509_CRL * APICALL (*PKCS12_certbag2x509crl)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
  PKCS12_SAFEBAG * APICALL (*PKCS12_item_pack_safebag)(struct AmiSSLIFace *Self, void * obj, const ASN1_ITEM * it, int nid1, int nid2);
  PKCS12_SAFEBAG * APICALL (*PKCS12_MAKE_KEYBAG)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
  PKCS8_PRIV_KEY_INFO * APICALL (*PKCS8_decrypt)(struct AmiSSLIFace *Self, X509_SIG * p8, const char * pass, int passlen);
  PKCS8_PRIV_KEY_INFO * APICALL (*PKCS12_decrypt_skey)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * pass, int passlen);
  X509_SIG * APICALL (*PKCS8_encrypt)(struct AmiSSLIFace *Self, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
  PKCS12_SAFEBAG * APICALL (*PKCS12_MAKE_SHKEYBAG)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
  PKCS7 * APICALL (*PKCS12_pack_p7data)(struct AmiSSLIFace *Self, STACK_OF(PKCS12_SAFEBAG) * sk);
  STACK_OF(PKCS12_SAFEBAG) * APICALL (*PKCS12_unpack_p7data)(struct AmiSSLIFace *Self, PKCS7 * p7);
  PKCS7 * APICALL (*PKCS12_pack_p7encdata)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, STACK_OF(PKCS12_SAFEBAG) * bags);
  STACK_OF(PKCS12_SAFEBAG) * APICALL (*PKCS12_unpack_p7encdata)(struct AmiSSLIFace *Self, PKCS7 * p7, const char * pass, int passlen);
  int APICALL (*PKCS12_pack_authsafes)(struct AmiSSLIFace *Self, PKCS12 * p12, STACK_OF(PKCS7) * safes);
  STACK_OF(PKCS7) * APICALL (*PKCS12_unpack_authsafes)(struct AmiSSLIFace *Self, PKCS12 * p12);
  int APICALL (*PKCS12_add_localkeyid)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, unsigned char * name, int namelen);
  int APICALL (*PKCS12_add_friendlyname_asc)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
  int APICALL (*PKCS12_add_CSPName_asc)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
  int APICALL (*PKCS12_add_friendlyname_uni)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const unsigned char * name, int namelen);
  int APICALL (*PKCS8_add_keyusage)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int usage);
  ASN1_TYPE * APICALL (*PKCS12_get_attr_gen)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) * attrs, int attr_nid);
  char * APICALL (*PKCS12_get_friendlyname)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
  unsigned char * APICALL (*PKCS12_pbe_crypt)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const char * pass, int passlen, unsigned char * in, int inlen, unsigned char ** data, int * datalen, int en_de);
  void * APICALL (*PKCS12_item_decrypt_d2i)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, ASN1_OCTET_STRING * oct, int zbuf);
  ASN1_OCTET_STRING * APICALL (*PKCS12_item_i2d_encrypt)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const ASN1_ITEM * it, const char * pass, int passlen, void * obj, int zbuf);
  PKCS12 * APICALL (*PKCS12_init)(struct AmiSSLIFace *Self, int mode);
  int APICALL (*PKCS12_key_gen_asc)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
  int APICALL (*PKCS12_key_gen_uni)(struct AmiSSLIFace *Self, unsigned char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
  int APICALL (*PKCS12_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, const EVP_CIPHER * cipher, const EVP_MD * md_type, int en_de);
  int APICALL (*PKCS12_gen_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * mac, unsigned int * maclen);
  int APICALL (*PKCS12_verify_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen);
  int APICALL (*PKCS12_set_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, const EVP_MD * md_type);
  int APICALL (*PKCS12_setup_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, int iter, unsigned char * salt, int saltlen, const EVP_MD * md_type);
  unsigned char * APICALL (*asc2uni)(struct AmiSSLIFace *Self, const char * asc, int asclen, unsigned char ** uni, int * unilen);
  char * APICALL (*uni2asc)(struct AmiSSLIFace *Self, unsigned char * uni, int unilen);
  PKCS12 * APICALL (*PKCS12_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS12_free)(struct AmiSSLIFace *Self, PKCS12 * a);
  PKCS12 * APICALL (*d2i_PKCS12)(struct AmiSSLIFace *Self, PKCS12 ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS12)(struct AmiSSLIFace *Self, PKCS12 * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS12_it)(struct AmiSSLIFace *Self);
  PKCS12_MAC_DATA * APICALL (*PKCS12_MAC_DATA_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS12_MAC_DATA_free)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA * a);
  PKCS12_MAC_DATA * APICALL (*d2i_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS12_MAC_DATA_it)(struct AmiSSLIFace *Self);
  PKCS12_SAFEBAG * APICALL (*PKCS12_SAFEBAG_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS12_SAFEBAG_free)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * a);
  PKCS12_SAFEBAG * APICALL (*d2i_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS12_SAFEBAG_it)(struct AmiSSLIFace *Self);
  PKCS12_BAGS * APICALL (*PKCS12_BAGS_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS12_BAGS_free)(struct AmiSSLIFace *Self, PKCS12_BAGS * a);
  PKCS12_BAGS * APICALL (*d2i_PKCS12_BAGS)(struct AmiSSLIFace *Self, PKCS12_BAGS ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS12_BAGS)(struct AmiSSLIFace *Self, PKCS12_BAGS * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS12_BAGS_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*PKCS12_SAFEBAGS_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*PKCS12_AUTHSAFES_it)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS12_PBE_add)(struct AmiSSLIFace *Self);
  int APICALL (*PKCS12_parse)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, EVP_PKEY ** pkey, X509 ** cert, STACK_OF(X509) ** ca);
  PKCS12 * APICALL (*PKCS12_create)(struct AmiSSLIFace *Self, char * pass, char * name, EVP_PKEY * pkey, X509 * cert, STACK_OF(X509) * ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype);
  int APICALL (*i2d_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS12 * p12);
  PKCS12 * APICALL (*d2i_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS12 ** p12);
  int APICALL (*PKCS12_newpass)(struct AmiSSLIFace *Self, PKCS12 * p12, char * oldpass, char * newpass);
  void APICALL (*ERR_load_PKCS12_strings)(struct AmiSSLIFace *Self);
  int APICALL (*PKCS7_ISSUER_AND_SERIAL_digest)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  PKCS7 * APICALL (*PKCS7_dup)(struct AmiSSLIFace *Self, PKCS7 * p7);
  PKCS7 * APICALL (*d2i_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** p7);
  int APICALL (*i2d_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 * p7);
  PKCS7_ISSUER_AND_SERIAL * APICALL (*PKCS7_ISSUER_AND_SERIAL_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_ISSUER_AND_SERIAL_free)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * a);
  PKCS7_ISSUER_AND_SERIAL * APICALL (*d2i_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_ISSUER_AND_SERIAL_it)(struct AmiSSLIFace *Self);
  PKCS7_SIGNER_INFO * APICALL (*PKCS7_SIGNER_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_SIGNER_INFO_free)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * a);
  PKCS7_SIGNER_INFO * APICALL (*d2i_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_SIGNER_INFO_it)(struct AmiSSLIFace *Self);
  PKCS7_RECIP_INFO * APICALL (*PKCS7_RECIP_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_RECIP_INFO_free)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * a);
  PKCS7_RECIP_INFO * APICALL (*d2i_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_RECIP_INFO_it)(struct AmiSSLIFace *Self);
  PKCS7_SIGNED * APICALL (*PKCS7_SIGNED_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_SIGNED_free)(struct AmiSSLIFace *Self, PKCS7_SIGNED * a);
  PKCS7_SIGNED * APICALL (*d2i_PKCS7_SIGNED)(struct AmiSSLIFace *Self, PKCS7_SIGNED ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_SIGNED)(struct AmiSSLIFace *Self, PKCS7_SIGNED * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_SIGNED_it)(struct AmiSSLIFace *Self);
  PKCS7_ENC_CONTENT * APICALL (*PKCS7_ENC_CONTENT_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_ENC_CONTENT_free)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT * a);
  PKCS7_ENC_CONTENT * APICALL (*d2i_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_ENC_CONTENT_it)(struct AmiSSLIFace *Self);
  PKCS7_ENVELOPE * APICALL (*PKCS7_ENVELOPE_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE * a);
  PKCS7_ENVELOPE * APICALL (*d2i_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_ENVELOPE_it)(struct AmiSSLIFace *Self);
  PKCS7_SIGN_ENVELOPE * APICALL (*PKCS7_SIGN_ENVELOPE_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_SIGN_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE * a);
  PKCS7_SIGN_ENVELOPE * APICALL (*d2i_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_SIGN_ENVELOPE_it)(struct AmiSSLIFace *Self);
  PKCS7_DIGEST * APICALL (*PKCS7_DIGEST_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_DIGEST_free)(struct AmiSSLIFace *Self, PKCS7_DIGEST * a);
  PKCS7_DIGEST * APICALL (*d2i_PKCS7_DIGEST)(struct AmiSSLIFace *Self, PKCS7_DIGEST ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_DIGEST)(struct AmiSSLIFace *Self, PKCS7_DIGEST * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_DIGEST_it)(struct AmiSSLIFace *Self);
  PKCS7_ENCRYPT * APICALL (*PKCS7_ENCRYPT_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_ENCRYPT_free)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT * a);
  PKCS7_ENCRYPT * APICALL (*d2i_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_ENCRYPT_it)(struct AmiSSLIFace *Self);
  PKCS7 * APICALL (*PKCS7_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS7_free)(struct AmiSSLIFace *Self, PKCS7 * a);
  PKCS7 * APICALL (*d2i_PKCS7)(struct AmiSSLIFace *Self, PKCS7 ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS7)(struct AmiSSLIFace *Self, PKCS7 * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS7_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*PKCS7_ATTR_SIGN_it)(struct AmiSSLIFace *Self);
  const ASN1_ITEM * APICALL (*PKCS7_ATTR_VERIFY_it)(struct AmiSSLIFace *Self);
  long APICALL (*PKCS7_ctrl)(struct AmiSSLIFace *Self, PKCS7 * p7, int cmd, long larg, char * parg);
  int APICALL (*PKCS7_set_type)(struct AmiSSLIFace *Self, PKCS7 * p7, int type);
  int APICALL (*PKCS7_set_content)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7 * p7_data);
  int APICALL (*PKCS7_SIGNER_INFO_set)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7i, X509 * x509, EVP_PKEY * pkey, const EVP_MD * dgst);
  int APICALL (*PKCS7_add_signer)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * p7i);
  int APICALL (*PKCS7_add_certificate)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509);
  int APICALL (*PKCS7_add_crl)(struct AmiSSLIFace *Self, PKCS7 * p7, X509_CRL * x509);
  int APICALL (*PKCS7_content_new)(struct AmiSSLIFace *Self, PKCS7 * p7, int nid);
  int APICALL (*PKCS7_dataVerify)(struct AmiSSLIFace *Self, X509_STORE * cert_store, X509_STORE_CTX * ctx, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
  int APICALL (*PKCS7_signatureVerify)(struct AmiSSLIFace *Self, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si, X509 * x509);
  BIO * APICALL (*PKCS7_dataInit)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
  int APICALL (*PKCS7_dataFinal)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
  BIO * APICALL (*PKCS7_dataDecode)(struct AmiSSLIFace *Self, PKCS7 * p7, EVP_PKEY * pkey, BIO * in_bio, X509 * pcert);
  PKCS7_SIGNER_INFO * APICALL (*PKCS7_add_signature)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509, EVP_PKEY * pkey, const EVP_MD * dgst);
  X509 * APICALL (*PKCS7_cert_from_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
  STACK_OF(PKCS7_SIGNER_INFO) * APICALL (*PKCS7_get_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7);
  PKCS7_RECIP_INFO * APICALL (*PKCS7_add_recipient)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509);
  int APICALL (*PKCS7_add_recipient_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_RECIP_INFO * ri);
  int APICALL (*PKCS7_RECIP_INFO_set)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * p7i, X509 * x509);
  int APICALL (*PKCS7_set_cipher)(struct AmiSSLIFace *Self, PKCS7 * p7, const EVP_CIPHER * cipher);
  PKCS7_ISSUER_AND_SERIAL * APICALL (*PKCS7_get_issuer_and_serial)(struct AmiSSLIFace *Self, PKCS7 * p7, int idx);
  ASN1_OCTET_STRING * APICALL (*PKCS7_digest_from_attributes)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) * sk);
  int APICALL (*PKCS7_add_signed_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int type, void * data);
  int APICALL (*PKCS7_add_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int atrtype, void * value);
  ASN1_TYPE * APICALL (*PKCS7_get_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, int nid);
  ASN1_TYPE * APICALL (*PKCS7_get_signed_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, int nid);
  int APICALL (*PKCS7_set_signed_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK_OF(X509_ATTRIBUTE) * sk);
  int APICALL (*PKCS7_set_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK_OF(X509_ATTRIBUTE) * sk);
  PKCS7 * APICALL (*PKCS7_sign)(struct AmiSSLIFace *Self, X509 * signcert, EVP_PKEY * pkey, STACK_OF(X509) * certs, BIO * data, int flags);
  int APICALL (*PKCS7_verify)(struct AmiSSLIFace *Self, PKCS7 * p7, STACK_OF(X509) * certs, X509_STORE * store, BIO * indata, BIO * out, int flags);
  STACK_OF(X509) * APICALL (*PKCS7_get0_signers)(struct AmiSSLIFace *Self, PKCS7 * p7, STACK_OF(X509) * certs, int flags);
  PKCS7 * APICALL (*PKCS7_encrypt)(struct AmiSSLIFace *Self, STACK_OF(X509) * certs, BIO * in, const EVP_CIPHER * cipher, int flags);
  int APICALL (*PKCS7_decrypt)(struct AmiSSLIFace *Self, PKCS7 * p7, EVP_PKEY * pkey, X509 * cert, BIO * data, int flags);
  int APICALL (*PKCS7_add_attrib_smimecap)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, STACK_OF(X509_ALGOR) * cap);
  STACK_OF(X509_ALGOR) * APICALL (*PKCS7_get_smimecap)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si);
  int APICALL (*PKCS7_simple_smimecap)(struct AmiSSLIFace *Self, STACK_OF(X509_ALGOR) * sk, int nid, int arg);
  int APICALL (*SMIME_write_PKCS7)(struct AmiSSLIFace *Self, BIO * bio, PKCS7 * p7, BIO * data, int flags);
  PKCS7 * APICALL (*SMIME_read_PKCS7)(struct AmiSSLIFace *Self, BIO * bio, BIO ** bcont);
  int APICALL (*SMIME_crlf_copy)(struct AmiSSLIFace *Self, BIO * in, BIO * out, int flags);
  int APICALL (*SMIME_text)(struct AmiSSLIFace *Self, BIO * in, BIO * out);
  void APICALL (*ERR_load_PKCS7_strings)(struct AmiSSLIFace *Self);
  int APICALL (*RAND_set_rand_method)(struct AmiSSLIFace *Self, const RAND_METHOD * meth);
  const RAND_METHOD * APICALL (*RAND_get_rand_method)(struct AmiSSLIFace *Self);
  RAND_METHOD * APICALL (*RAND_SSLeay)(struct AmiSSLIFace *Self);
  void APICALL (*RAND_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*RAND_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
  int APICALL (*RAND_pseudo_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
  void APICALL (*RAND_seed)(struct AmiSSLIFace *Self, const void * buf, int num);
  void APICALL (*RAND_add)(struct AmiSSLIFace *Self, const void * buf, int num, double entropy);
  int APICALL (*RAND_load_file)(struct AmiSSLIFace *Self, const char * file, long max_bytes);
  int APICALL (*RAND_write_file)(struct AmiSSLIFace *Self, const char * file);
  const char * APICALL (*RAND_file_name)(struct AmiSSLIFace *Self, char * file, size_t num);
  int APICALL (*RAND_status)(struct AmiSSLIFace *Self);
  int APICALL (*RAND_query_egd_bytes)(struct AmiSSLIFace *Self, const char * path, unsigned char * buf, int bytes);
  int APICALL (*RAND_egd)(struct AmiSSLIFace *Self, const char * path);
  int APICALL (*RAND_egd_bytes)(struct AmiSSLIFace *Self, const char * path, int bytes);
  int APICALL (*RAND_poll)(struct AmiSSLIFace *Self);
  void APICALL (*ERR_load_RAND_strings)(struct AmiSSLIFace *Self);
  void APICALL (*SSL_CTX_set_msg_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
  void APICALL (*SSL_set_msg_callback)(struct AmiSSLIFace *Self, SSL * ssl, void (*cb)(int write_p, int version, int content_type, const void *buf, size_t len, SSL *ssl, void *arg));
  struct lhash_st * APICALL (*SSL_CTX_sessions)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
  size_t APICALL (*SSL_get_finished)(struct AmiSSLIFace *Self, const SSL * s, void * buf, size_t count);
  size_t APICALL (*SSL_get_peer_finished)(struct AmiSSLIFace *Self, const SSL * s, void * buf, size_t count);
  BIO_METHOD * APICALL (*BIO_f_ssl)(struct AmiSSLIFace *Self);
  BIO * APICALL (*BIO_new_ssl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int client);
  BIO * APICALL (*BIO_new_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
  BIO * APICALL (*BIO_new_buffer_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
  int APICALL (*BIO_ssl_copy_session_id)(struct AmiSSLIFace *Self, BIO * to, BIO * from);
  void APICALL (*BIO_ssl_shutdown)(struct AmiSSLIFace *Self, BIO * ssl_bio);
  int APICALL (*SSL_CTX_set_cipher_list)(struct AmiSSLIFace *Self, SSL_CTX * a1, const char * str);
  SSL_CTX * APICALL (*SSL_CTX_new)(struct AmiSSLIFace *Self, SSL_METHOD * meth);
  void APICALL (*SSL_CTX_free)(struct AmiSSLIFace *Self, SSL_CTX * a);
  long APICALL (*SSL_CTX_set_timeout)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long t);
  long APICALL (*SSL_CTX_get_timeout)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
  X509_STORE * APICALL (*SSL_CTX_get_cert_store)(struct AmiSSLIFace *Self, const SSL_CTX * a);
  void APICALL (*SSL_CTX_set_cert_store)(struct AmiSSLIFace *Self, SSL_CTX * a, X509_STORE * b);
  int APICALL (*SSL_want)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_clear)(struct AmiSSLIFace *Self, SSL * s);
  void APICALL (*SSL_CTX_flush_sessions)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long tm);
  SSL_CIPHER * APICALL (*SSL_get_current_cipher)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_CIPHER_get_bits)(struct AmiSSLIFace *Self, const SSL_CIPHER * c, int * alg_bits);
  char * APICALL (*SSL_CIPHER_get_version)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
  const char * APICALL (*SSL_CIPHER_get_name)(struct AmiSSLIFace *Self, const SSL_CIPHER * c);
  const char * APICALL (*SSL_CIPHER_get_mac)(struct AmiSSLIFace *Self, SSL_CIPHER * cipher);
  const char * APICALL (*SSL_CIPHER_get_encryption)(struct AmiSSLIFace *Self, SSL_CIPHER * cipher);
  const char * APICALL (*SSL_CIPHER_get_authentication)(struct AmiSSLIFace *Self, SSL_CIPHER * cipher);
  const char * APICALL (*SSL_CIPHER_get_key_exchange)(struct AmiSSLIFace *Self, SSL_CIPHER * cipher);
  const char * APICALL (*SSL_CIPHER_get_export)(struct AmiSSLIFace *Self, SSL_CIPHER * cipher);
  int APICALL (*SSL_get_fd)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_get_rfd)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_get_wfd)(struct AmiSSLIFace *Self, const SSL * s);
  const char * APICALL (*SSL_get_cipher_list)(struct AmiSSLIFace *Self, const SSL * s, int n);
  char * APICALL (*SSL_get_shared_ciphers)(struct AmiSSLIFace *Self, const SSL * s, char * buf, int len);
  int APICALL (*SSL_get_read_ahead)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_pending)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_set_fd)(struct AmiSSLIFace *Self, SSL * s, int fd);
  int APICALL (*SSL_set_rfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
  int APICALL (*SSL_set_wfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
  void APICALL (*SSL_set_bio)(struct AmiSSLIFace *Self, SSL * s, BIO * rbio, BIO * wbio);
  BIO * APICALL (*SSL_get_rbio)(struct AmiSSLIFace *Self, const SSL * s);
  BIO * APICALL (*SSL_get_wbio)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_set_cipher_list)(struct AmiSSLIFace *Self, SSL * s, const char * str);
  void APICALL (*SSL_set_read_ahead)(struct AmiSSLIFace *Self, SSL * s, int yes);
  int APICALL (*SSL_get_verify_mode)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_get_verify_depth)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*(*SSL_get_verify_callback)(struct AmiSSLIFace *Self, const SSL * s))(int, X509_STORE_CTX *);
  void APICALL (*SSL_set_verify)(struct AmiSSLIFace *Self, SSL * s, int mode, int (*callback)(int ok, X509_STORE_CTX *ctx));
  void APICALL (*SSL_set_verify_depth)(struct AmiSSLIFace *Self, SSL * s, int depth);
  int APICALL (*SSL_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, RSA * rsa);
  int APICALL (*SSL_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, unsigned char * d, long len);
  int APICALL (*SSL_use_PrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, EVP_PKEY * pkey);
  int APICALL (*SSL_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL * ssl, unsigned char * d, long len);
  int APICALL (*SSL_use_certificate)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
  int APICALL (*SSL_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, unsigned char * d, int len);
  int APICALL (*SSL_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
  int APICALL (*SSL_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
  int APICALL (*SSL_use_certificate_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
  int APICALL (*SSL_CTX_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
  int APICALL (*SSL_CTX_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
  int APICALL (*SSL_CTX_use_certificate_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
  int APICALL (*SSL_CTX_use_certificate_chain_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file);
  STACK_OF(X509_NAME) * APICALL (*SSL_load_client_CA_file)(struct AmiSSLIFace *Self, const char * file);
  int APICALL (*SSL_add_file_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * stackCAs, const char * file);
  int APICALL (*SSL_add_dir_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * stackCAs, const char * dir);
  void APICALL (*SSL_load_error_strings)(struct AmiSSLIFace *Self);
  const char * APICALL (*SSL_state_string)(struct AmiSSLIFace *Self, const SSL * s);
  const char * APICALL (*SSL_rstate_string)(struct AmiSSLIFace *Self, const SSL * s);
  const char * APICALL (*SSL_state_string_long)(struct AmiSSLIFace *Self, const SSL * s);
  const char * APICALL (*SSL_rstate_string_long)(struct AmiSSLIFace *Self, const SSL * s);
  long APICALL (*SSL_SESSION_get_time)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
  long APICALL (*SSL_SESSION_set_time)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
  long APICALL (*SSL_SESSION_get_timeout)(struct AmiSSLIFace *Self, const SSL_SESSION * s);
  long APICALL (*SSL_SESSION_set_timeout)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
  void APICALL (*SSL_copy_session_id)(struct AmiSSLIFace *Self, SSL * to, const SSL * from);
  SSL_SESSION * APICALL (*SSL_SESSION_new)(struct AmiSSLIFace *Self);
  unsigned long APICALL (*SSL_SESSION_hash)(struct AmiSSLIFace *Self, const SSL_SESSION * a);
  int APICALL (*SSL_SESSION_cmp)(struct AmiSSLIFace *Self, const SSL_SESSION * a, const SSL_SESSION * b);
  int APICALL (*SSL_SESSION_print)(struct AmiSSLIFace *Self, BIO * fp, const SSL_SESSION * ses);
  void APICALL (*SSL_SESSION_free)(struct AmiSSLIFace *Self, SSL_SESSION * ses);
  int APICALL (*i2d_SSL_SESSION)(struct AmiSSLIFace *Self, SSL_SESSION * in, unsigned char ** pp);
  int APICALL (*SSL_set_session)(struct AmiSSLIFace *Self, SSL * to, SSL_SESSION * session);
  int APICALL (*SSL_CTX_add_session)(struct AmiSSLIFace *Self, SSL_CTX * s, SSL_SESSION * c);
  int APICALL (*SSL_CTX_remove_session)(struct AmiSSLIFace *Self, SSL_CTX * a1, SSL_SESSION * c);
  int APICALL (*SSL_CTX_set_generate_session_id)(struct AmiSSLIFace *Self, SSL_CTX * a, GEN_SESSION_CB b);
  int APICALL (*SSL_set_generate_session_id)(struct AmiSSLIFace *Self, SSL * a, GEN_SESSION_CB b);
  int APICALL (*SSL_has_matching_session_id)(struct AmiSSLIFace *Self, const SSL * ssl, const unsigned char * id, unsigned int id_len);
  SSL_SESSION * APICALL (*d2i_SSL_SESSION)(struct AmiSSLIFace *Self, SSL_SESSION ** a, const unsigned char * const * pp, long length);
  X509 * APICALL (*SSL_get_peer_certificate)(struct AmiSSLIFace *Self, const SSL * s);
  STACK_OF(X509) * APICALL (*SSL_get_peer_cert_chain)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_CTX_get_verify_mode)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
  int APICALL (*SSL_CTX_get_verify_depth)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
  int APICALL (*(*SSL_CTX_get_verify_callback)(struct AmiSSLIFace *Self, const SSL_CTX * ctx))(int, X509_STORE_CTX *);
  void APICALL (*SSL_CTX_set_verify)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode, int (*callback)(int, X509_STORE_CTX *));
  void APICALL (*SSL_CTX_set_verify_depth)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int depth);
  void APICALL (*SSL_CTX_set_cert_verify_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)(X509_STORE_CTX *, void *), void * arg);
  int APICALL (*SSL_CTX_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, RSA * rsa);
  int APICALL (*SSL_CTX_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned char * d, long len);
  int APICALL (*SSL_CTX_use_PrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, EVP_PKEY * pkey);
  int APICALL (*SSL_CTX_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL_CTX * ctx, unsigned char * d, long len);
  int APICALL (*SSL_CTX_use_certificate)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
  int APICALL (*SSL_CTX_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int len, unsigned char * d);
  void APICALL (*SSL_CTX_set_default_passwd_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, pem_password_cb * (*cb)(char *buf, int size, int rwflag, void *userdata));
  void APICALL (*SSL_CTX_set_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * u);
  int APICALL (*SSL_CTX_check_private_key)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
  int APICALL (*SSL_check_private_key)(struct AmiSSLIFace *Self, const SSL * ctx);
  int APICALL (*SSL_CTX_set_session_id_context)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
  SSL * APICALL (*SSL_new)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
  int APICALL (*SSL_set_session_id_context)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
  int APICALL (*SSL_CTX_set_purpose)(struct AmiSSLIFace *Self, SSL_CTX * s, int purpose);
  int APICALL (*SSL_set_purpose)(struct AmiSSLIFace *Self, SSL * s, int purpose);
  int APICALL (*SSL_CTX_set_trust)(struct AmiSSLIFace *Self, SSL_CTX * s, int trust);
  int APICALL (*SSL_set_trust)(struct AmiSSLIFace *Self, SSL * s, int trust);
  void APICALL (*SSL_free)(struct AmiSSLIFace *Self, SSL * ssl);
  int APICALL (*SSL_accept)(struct AmiSSLIFace *Self, SSL * ssl);
  int APICALL (*SSL_connect)(struct AmiSSLIFace *Self, SSL * ssl);
  int APICALL (*SSL_read)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, int num);
  int APICALL (*SSL_peek)(struct AmiSSLIFace *Self, SSL * ssl, void * buf, int num);
  int APICALL (*SSL_write)(struct AmiSSLIFace *Self, SSL * ssl, const void * buf, int num);
  long APICALL (*SSL_ctrl)(struct AmiSSLIFace *Self, SSL * ssl, int cmd, long larg, void * parg);
  long APICALL (*SSL_callback_ctrl)(struct AmiSSLIFace *Self, SSL * a, int a1, void (*b)());
  long APICALL (*SSL_CTX_ctrl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int cmd, long larg, void * parg);
  long APICALL (*SSL_CTX_callback_ctrl)(struct AmiSSLIFace *Self, SSL_CTX * a1, int a2, void (*a3)());
  int APICALL (*SSL_get_error)(struct AmiSSLIFace *Self, const SSL * s, int ret_code);
  const char * APICALL (*SSL_get_version)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_CTX_set_ssl_version)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_METHOD * meth);
  SSL_METHOD * APICALL (*SSLv2_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv2_server_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv2_client_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv3_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv3_server_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv3_client_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv23_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv23_server_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*SSLv23_client_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*TLSv1_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*TLSv1_server_method)(struct AmiSSLIFace *Self);
  SSL_METHOD * APICALL (*TLSv1_client_method)(struct AmiSSLIFace *Self);
  STACK_OF(SSL_CIPHER) * APICALL (*SSL_get_ciphers)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_do_handshake)(struct AmiSSLIFace *Self, SSL * s);
  int APICALL (*SSL_renegotiate)(struct AmiSSLIFace *Self, SSL * s);
  int APICALL (*SSL_renegotiate_pending)(struct AmiSSLIFace *Self, SSL * s);
  int APICALL (*SSL_shutdown)(struct AmiSSLIFace *Self, SSL * s);
  SSL_METHOD * APICALL (*SSL_get_ssl_method)(struct AmiSSLIFace *Self, SSL * s);
  int APICALL (*SSL_set_ssl_method)(struct AmiSSLIFace *Self, SSL * s, SSL_METHOD * method);
  const char * APICALL (*SSL_alert_type_string_long)(struct AmiSSLIFace *Self, int value);
  const char * APICALL (*SSL_alert_type_string)(struct AmiSSLIFace *Self, int value);
  const char * APICALL (*SSL_alert_desc_string_long)(struct AmiSSLIFace *Self, int value);
  const char * APICALL (*SSL_alert_desc_string)(struct AmiSSLIFace *Self, int value);
  void APICALL (*SSL_set_client_CA_list)(struct AmiSSLIFace *Self, SSL * s, STACK_OF(X509_NAME) * name_list);
  void APICALL (*SSL_CTX_set_client_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * ctx, STACK_OF(X509_NAME) * name_list);
  STACK_OF(X509_NAME) * APICALL (*SSL_get_client_CA_list)(struct AmiSSLIFace *Self, const SSL * s);
  STACK_OF(X509_NAME) * APICALL (*SSL_CTX_get_client_CA_list)(struct AmiSSLIFace *Self, const SSL_CTX * s);
  int APICALL (*SSL_add_client_CA)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
  int APICALL (*SSL_CTX_add_client_CA)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
  void APICALL (*SSL_set_connect_state)(struct AmiSSLIFace *Self, SSL * s);
  void APICALL (*SSL_set_accept_state)(struct AmiSSLIFace *Self, SSL * s);
  long APICALL (*SSL_get_default_timeout)(struct AmiSSLIFace *Self, const SSL * s);
  int APICALL (*SSL_library_init)(struct AmiSSLIFace *Self);
  char * APICALL (*SSL_CIPHER_description)(struct AmiSSLIFace *Self, SSL_CIPHER * a1, char * buf, int size);
  STACK_OF(X509_NAME) * APICALL (*SSL_dup_CA_list)(struct AmiSSLIFace *Self, STACK_OF(X509_NAME) * sk);
  SSL * APICALL (*SSL_dup)(struct AmiSSLIFace *Self, SSL * ssl);
  X509 * APICALL (*SSL_get_certificate)(struct AmiSSLIFace *Self, const SSL * ssl);
  struct evp_pkey_st * APICALL (*SSL_get_privatekey)(struct AmiSSLIFace *Self, SSL * ssl);
  void APICALL (*SSL_CTX_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode);
  int APICALL (*SSL_CTX_get_quiet_shutdown)(struct AmiSSLIFace *Self, const SSL_CTX * ctx);
  void APICALL (*SSL_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
  int APICALL (*SSL_get_quiet_shutdown)(struct AmiSSLIFace *Self, const SSL * ssl);
  void APICALL (*SSL_set_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
  int APICALL (*SSL_get_shutdown)(struct AmiSSLIFace *Self, const SSL * ssl);
  int APICALL (*SSL_version)(struct AmiSSLIFace *Self, const SSL * ssl);
  int APICALL (*SSL_CTX_set_default_verify_paths)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
  int APICALL (*SSL_CTX_load_verify_locations)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CAfile, const char * CApath);
  SSL_SESSION * APICALL (*SSL_get_session)(struct AmiSSLIFace *Self, const SSL * ssl);
  SSL_SESSION * APICALL (*SSL_get1_session)(struct AmiSSLIFace *Self, SSL * ssl);
  SSL_CTX * APICALL (*SSL_get_SSL_CTX)(struct AmiSSLIFace *Self, const SSL * ssl);
  void APICALL (*SSL_set_info_callback)(struct AmiSSLIFace *Self, SSL * ssl, void (*cb)(const SSL *ssl, int type, int val));
  void APICALL (*(*SSL_get_info_callback)(struct AmiSSLIFace *Self, const SSL * ssl))(const SSL *ssl, int type, int val);
  int APICALL (*SSL_state)(struct AmiSSLIFace *Self, const SSL * ssl);
  void APICALL (*SSL_set_verify_result)(struct AmiSSLIFace *Self, SSL * ssl, long v);
  long APICALL (*SSL_get_verify_result)(struct AmiSSLIFace *Self, const SSL * ssl);
  int APICALL (*SSL_set_ex_data)(struct AmiSSLIFace *Self, SSL * ssl, int idx, void * data);
  void * APICALL (*SSL_get_ex_data)(struct AmiSSLIFace *Self, const SSL * ssl, int idx);
  int APICALL (*SSL_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*SSL_SESSION_set_ex_data)(struct AmiSSLIFace *Self, SSL_SESSION * ss, int idx, void * data);
  void * APICALL (*SSL_SESSION_get_ex_data)(struct AmiSSLIFace *Self, const SSL_SESSION * ss, int idx);
  int APICALL (*SSL_SESSION_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*SSL_CTX_set_ex_data)(struct AmiSSLIFace *Self, SSL_CTX * ssl, int idx, void * data);
  void * APICALL (*SSL_CTX_get_ex_data)(struct AmiSSLIFace *Self, const SSL_CTX * ssl, int idx);
  int APICALL (*SSL_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*SSL_get_ex_data_X509_STORE_CTX_idx)(struct AmiSSLIFace *Self);
  void APICALL (*SSL_CTX_set_tmp_rsa_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, RSA * (*cb)(SSL *ssl, int is_export, int keylength));
  void APICALL (*SSL_set_tmp_rsa_callback)(struct AmiSSLIFace *Self, SSL * ssl, RSA * (*cb)(SSL *ssl, int is_export, int keylength));
  void APICALL (*SSL_CTX_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, DH * (*dh)(SSL *ssl, int is_export, int keylength));
  void APICALL (*SSL_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL * ssl, DH * (*dh)(SSL *ssl, int is_export, int keylength));
  int APICALL (*SSL_COMP_add_compression_method)(struct AmiSSLIFace *Self, int id, COMP_METHOD * cm);
  void APICALL (*ERR_load_SSL_strings)(struct AmiSSLIFace *Self);
  int APICALL (*sk_num)(struct AmiSSLIFace *Self, const STACK * a);
  char * APICALL (*sk_value)(struct AmiSSLIFace *Self, const STACK * a, int b);
  char * APICALL (*sk_set)(struct AmiSSLIFace *Self, STACK * a, int b, char * c);
  STACK * APICALL (*sk_new)(struct AmiSSLIFace *Self, int (*cmp)(const char *const *, const char *const *));
  STACK * APICALL (*sk_new_null)(struct AmiSSLIFace *Self);
  void APICALL (*sk_free)(struct AmiSSLIFace *Self, STACK * a);
  void APICALL (*sk_pop_free)(struct AmiSSLIFace *Self, STACK * st, void (*func)(void *));
  int APICALL (*sk_insert)(struct AmiSSLIFace *Self, STACK * sk, char * data, int where);
  char * APICALL (*sk_delete)(struct AmiSSLIFace *Self, STACK * st, int loc);
  char * APICALL (*sk_delete_ptr)(struct AmiSSLIFace *Self, STACK * st, char * p);
  int APICALL (*sk_find)(struct AmiSSLIFace *Self, STACK * st, char * data);
  int APICALL (*sk_push)(struct AmiSSLIFace *Self, STACK * st, char * data);
  int APICALL (*sk_unshift)(struct AmiSSLIFace *Self, STACK * st, char * data);
  char * APICALL (*sk_shift)(struct AmiSSLIFace *Self, STACK * st);
  char * APICALL (*sk_pop)(struct AmiSSLIFace *Self, STACK * st);
  void APICALL (*sk_zero)(struct AmiSSLIFace *Self, STACK * st);
  int APICALL (*(*sk_set_cmp_func)(struct AmiSSLIFace *Self, STACK * sk, int (*c)(const char *const *, const char *const *)))(const char *const *, const char *const *);
  STACK * APICALL (*sk_dup)(struct AmiSSLIFace *Self, STACK * st);
  void APICALL (*sk_sort)(struct AmiSSLIFace *Self, STACK * st);
  int APICALL (*sk_is_sorted)(struct AmiSSLIFace *Self, const STACK * st);
  char * APICALL (*ms_time_new)(struct AmiSSLIFace *Self);
  void APICALL (*ms_time_free)(struct AmiSSLIFace *Self, char * a);
  void APICALL (*ms_time_get)(struct AmiSSLIFace *Self, char * a);
  double APICALL (*ms_time_diff)(struct AmiSSLIFace *Self, char * start, char * end);
  int APICALL (*ms_time_cmp)(struct AmiSSLIFace *Self, char * ap, char * bp);
  TXT_DB * APICALL (*TXT_DB_read)(struct AmiSSLIFace *Self, BIO * in, int num);
  long APICALL (*TXT_DB_write)(struct AmiSSLIFace *Self, BIO * out, TXT_DB * db);
  int APICALL (*TXT_DB_create_index)(struct AmiSSLIFace *Self, TXT_DB * db, int field, int (*qual)(), LHASH_HASH_FN_TYPE hash, LHASH_COMP_FN_TYPE cmp);
  void APICALL (*TXT_DB_free)(struct AmiSSLIFace *Self, TXT_DB * db);
  char ** APICALL (*TXT_DB_get_by_index)(struct AmiSSLIFace *Self, TXT_DB * db, int idx, char ** value);
  int APICALL (*TXT_DB_insert)(struct AmiSSLIFace *Self, TXT_DB * db, char ** value);
  UI * APICALL (*UI_new)(struct AmiSSLIFace *Self);
  UI * APICALL (*UI_new_method)(struct AmiSSLIFace *Self, const UI_METHOD * method);
  void APICALL (*UI_free)(struct AmiSSLIFace *Self, UI * ui);
  int APICALL (*UI_add_input_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize);
  int APICALL (*UI_dup_input_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize);
  int APICALL (*UI_add_verify_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize, const char * test_buf);
  int APICALL (*UI_dup_verify_string)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, int flags, char * result_buf, int minsize, int maxsize, const char * test_buf);
  int APICALL (*UI_add_input_boolean)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, const char * action_desc, const char * ok_chars, const char * cancel_chars, int flags, char * result_buf);
  int APICALL (*UI_dup_input_boolean)(struct AmiSSLIFace *Self, UI * ui, const char * prompt, const char * action_desc, const char * ok_chars, const char * cancel_chars, int flags, char * result_buf);
  int APICALL (*UI_add_info_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
  int APICALL (*UI_dup_info_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
  int APICALL (*UI_add_error_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
  int APICALL (*UI_dup_error_string)(struct AmiSSLIFace *Self, UI * ui, const char * text);
  char * APICALL (*UI_construct_prompt)(struct AmiSSLIFace *Self, UI * ui_method, const char * object_desc, const char * object_name);
  void * APICALL (*UI_add_user_data)(struct AmiSSLIFace *Self, UI * ui, void * user_data);
  void * APICALL (*UI_get0_user_data)(struct AmiSSLIFace *Self, UI * ui);
  const char * APICALL (*UI_get0_result)(struct AmiSSLIFace *Self, UI * ui, int i);
  int APICALL (*UI_process)(struct AmiSSLIFace *Self, UI * ui);
  int APICALL (*UI_ctrl)(struct AmiSSLIFace *Self, UI * ui, int cmd, long i, void * p, void (*f)());
  int APICALL (*UI_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*UI_set_ex_data)(struct AmiSSLIFace *Self, UI * r, int idx, void * arg);
  void * APICALL (*UI_get_ex_data)(struct AmiSSLIFace *Self, UI * r, int idx);
  void APICALL (*UI_set_default_method)(struct AmiSSLIFace *Self, const UI_METHOD * meth);
  const UI_METHOD * APICALL (*UI_get_default_method)(struct AmiSSLIFace *Self);
  const UI_METHOD * APICALL (*UI_get_method)(struct AmiSSLIFace *Self, UI * ui);
  const UI_METHOD * APICALL (*UI_set_method)(struct AmiSSLIFace *Self, UI * ui, const UI_METHOD * meth);
  UI_METHOD * APICALL (*UI_OpenSSL)(struct AmiSSLIFace *Self);
  UI_METHOD * APICALL (*UI_create_method)(struct AmiSSLIFace *Self, char * name);
  void APICALL (*UI_destroy_method)(struct AmiSSLIFace *Self, UI_METHOD * ui_method);
  int APICALL (*UI_method_set_opener)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*opener)(UI *ui));
  int APICALL (*UI_method_set_writer)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*writer)(UI *ui, UI_STRING *uis));
  int APICALL (*UI_method_set_flusher)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*flusher)(UI *ui));
  int APICALL (*UI_method_set_reader)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*reader)(UI *ui, UI_STRING *uis));
  int APICALL (*UI_method_set_closer)(struct AmiSSLIFace *Self, UI_METHOD * method, int (*closer)(UI *ui));
  int APICALL (*(*UI_method_get_opener)(struct AmiSSLIFace *Self, UI_METHOD * method))(UI *);
  int APICALL (*(*UI_method_get_writer)(struct AmiSSLIFace *Self, UI_METHOD * method))(UI *, UI_STRING *);
  int APICALL (*(*UI_method_get_flusher)(struct AmiSSLIFace *Self, UI_METHOD * method))(UI *);
  int APICALL (*(*UI_method_get_reader)(struct AmiSSLIFace *Self, UI_METHOD * method))(UI *, UI_STRING *);
  int APICALL (*(*UI_method_get_closer)(struct AmiSSLIFace *Self, UI_METHOD * method))(UI *);
  enum UI_string_types APICALL (*UI_get_string_type)(struct AmiSSLIFace *Self, UI_STRING * uis);
  int APICALL (*UI_get_input_flags)(struct AmiSSLIFace *Self, UI_STRING * uis);
  const char * APICALL (*UI_get0_output_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
  const char * APICALL (*UI_get0_action_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
  const char * APICALL (*UI_get0_result_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
  const char * APICALL (*UI_get0_test_string)(struct AmiSSLIFace *Self, UI_STRING * uis);
  int APICALL (*UI_get_result_minsize)(struct AmiSSLIFace *Self, UI_STRING * uis);
  int APICALL (*UI_get_result_maxsize)(struct AmiSSLIFace *Self, UI_STRING * uis);
  int APICALL (*UI_set_result)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis, const char * result);
  int APICALL (*UI_UTIL_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
  int APICALL (*UI_UTIL_read_pw)(struct AmiSSLIFace *Self, char * buf, char * buff, int size, const char * prompt, int verify);
  void APICALL (*ERR_load_UI_strings)(struct AmiSSLIFace *Self);
  int APICALL (*_ossl_old_des_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
  int APICALL (*_ossl_old_des_read_pw)(struct AmiSSLIFace *Self, char * buf, char * buff, int size, const char * prompt, int verify);
  const char * APICALL (*X509_verify_cert_error_string)(struct AmiSSLIFace *Self, long n);
  int APICALL (*X509_verify)(struct AmiSSLIFace *Self, X509 * a, EVP_PKEY * r);
  int APICALL (*X509_REQ_verify)(struct AmiSSLIFace *Self, X509_REQ * a, EVP_PKEY * r);
  int APICALL (*X509_CRL_verify)(struct AmiSSLIFace *Self, X509_CRL * a, EVP_PKEY * r);
  int APICALL (*NETSCAPE_SPKI_verify)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a, EVP_PKEY * r);
  NETSCAPE_SPKI * APICALL (*NETSCAPE_SPKI_b64_decode)(struct AmiSSLIFace *Self, const char * str, int len);
  char * APICALL (*NETSCAPE_SPKI_b64_encode)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x);
  EVP_PKEY * APICALL (*NETSCAPE_SPKI_get_pubkey)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x);
  int APICALL (*NETSCAPE_SPKI_set_pubkey)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x, EVP_PKEY * pkey);
  int APICALL (*NETSCAPE_SPKI_print)(struct AmiSSLIFace *Self, BIO * out, NETSCAPE_SPKI * spki);
  int APICALL (*X509_signature_print)(struct AmiSSLIFace *Self, BIO * bp, X509_ALGOR * alg, ASN1_STRING * sig);
  int APICALL (*X509_sign)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, const EVP_MD * md);
  int APICALL (*X509_REQ_sign)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey, const EVP_MD * md);
  int APICALL (*X509_CRL_sign)(struct AmiSSLIFace *Self, X509_CRL * x, EVP_PKEY * pkey, const EVP_MD * md);
  int APICALL (*NETSCAPE_SPKI_sign)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x, EVP_PKEY * pkey, const EVP_MD * md);
  int APICALL (*X509_pubkey_digest)(struct AmiSSLIFace *Self, const X509 * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  int APICALL (*X509_digest)(struct AmiSSLIFace *Self, const X509 * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  int APICALL (*X509_CRL_digest)(struct AmiSSLIFace *Self, const X509_CRL * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  int APICALL (*X509_REQ_digest)(struct AmiSSLIFace *Self, const X509_REQ * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  int APICALL (*X509_NAME_digest)(struct AmiSSLIFace *Self, const X509_NAME * data, const EVP_MD * type, unsigned char * md, unsigned int * len);
  X509 * APICALL (*d2i_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x509);
  int APICALL (*i2d_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, X509 * x509);
  X509_CRL * APICALL (*d2i_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** crl);
  int APICALL (*i2d_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * crl);
  X509_REQ * APICALL (*d2i_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** req);
  int APICALL (*i2d_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * req);
  RSA * APICALL (*d2i_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
  int APICALL (*i2d_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA * rsa);
  RSA * APICALL (*d2i_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
  int APICALL (*i2d_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA * rsa);
  RSA * APICALL (*d2i_RSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
  int APICALL (*i2d_RSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA * rsa);
  DSA * APICALL (*d2i_DSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA ** dsa);
  int APICALL (*i2d_DSA_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA * dsa);
  DSA * APICALL (*d2i_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA ** dsa);
  int APICALL (*i2d_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA * dsa);
  X509_SIG * APICALL (*d2i_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** p8);
  int APICALL (*i2d_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG * p8);
  PKCS8_PRIV_KEY_INFO * APICALL (*d2i_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** p8inf);
  int APICALL (*i2d_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO * p8inf);
  int APICALL (*i2d_PKCS8PrivateKeyInfo_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * key);
  int APICALL (*i2d_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*d2i_PrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a);
  int APICALL (*i2d_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*d2i_PUBKEY_bio)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** a);
  X509 * APICALL (*X509_dup)(struct AmiSSLIFace *Self, X509 * x509);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_dup)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * xa);
  X509_EXTENSION * APICALL (*X509_EXTENSION_dup)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
  X509_CRL * APICALL (*X509_CRL_dup)(struct AmiSSLIFace *Self, X509_CRL * crl);
  X509_REQ * APICALL (*X509_REQ_dup)(struct AmiSSLIFace *Self, X509_REQ * req);
  X509_ALGOR * APICALL (*X509_ALGOR_dup)(struct AmiSSLIFace *Self, X509_ALGOR * xn);
  X509_NAME * APICALL (*X509_NAME_dup)(struct AmiSSLIFace *Self, X509_NAME * xn);
  X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_dup)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
  int APICALL (*X509_cmp_time)(struct AmiSSLIFace *Self, ASN1_TIME * s, time_t * t);
  int APICALL (*X509_cmp_current_time)(struct AmiSSLIFace *Self, ASN1_TIME * s);
  ASN1_TIME * APICALL (*X509_time_adj)(struct AmiSSLIFace *Self, ASN1_TIME * s, long adj, time_t * t);
  ASN1_TIME * APICALL (*X509_gmtime_adj)(struct AmiSSLIFace *Self, ASN1_TIME * s, long adj);
  const char * APICALL (*X509_get_default_cert_area)(struct AmiSSLIFace *Self);
  const char * APICALL (*X509_get_default_cert_dir)(struct AmiSSLIFace *Self);
  const char * APICALL (*X509_get_default_cert_file)(struct AmiSSLIFace *Self);
  const char * APICALL (*X509_get_default_cert_dir_env)(struct AmiSSLIFace *Self);
  const char * APICALL (*X509_get_default_cert_file_env)(struct AmiSSLIFace *Self);
  const char * APICALL (*X509_get_default_private_dir)(struct AmiSSLIFace *Self);
  X509_REQ * APICALL (*X509_to_X509_REQ)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, const EVP_MD * md);
  X509 * APICALL (*X509_REQ_to_X509)(struct AmiSSLIFace *Self, X509_REQ * r, int days, EVP_PKEY * pkey);
  X509_ALGOR * APICALL (*X509_ALGOR_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_ALGOR_free)(struct AmiSSLIFace *Self, X509_ALGOR * a);
  X509_ALGOR * APICALL (*d2i_X509_ALGOR)(struct AmiSSLIFace *Self, X509_ALGOR ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_ALGOR)(struct AmiSSLIFace *Self, X509_ALGOR * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_ALGOR_it)(struct AmiSSLIFace *Self);
  X509_VAL * APICALL (*X509_VAL_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_VAL_free)(struct AmiSSLIFace *Self, X509_VAL * a);
  X509_VAL * APICALL (*d2i_X509_VAL)(struct AmiSSLIFace *Self, X509_VAL ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_VAL)(struct AmiSSLIFace *Self, X509_VAL * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_VAL_it)(struct AmiSSLIFace *Self);
  X509_PUBKEY * APICALL (*X509_PUBKEY_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_PUBKEY_free)(struct AmiSSLIFace *Self, X509_PUBKEY * a);
  X509_PUBKEY * APICALL (*d2i_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_PUBKEY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_PUBKEY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_PUBKEY_it)(struct AmiSSLIFace *Self);
  int APICALL (*X509_PUBKEY_set)(struct AmiSSLIFace *Self, X509_PUBKEY ** x, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*X509_PUBKEY_get)(struct AmiSSLIFace *Self, X509_PUBKEY * key);
  int APICALL (*X509_get_pubkey_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, STACK_OF(X509) * chain);
  int APICALL (*i2d_PUBKEY)(struct AmiSSLIFace *Self, EVP_PKEY * a, unsigned char ** pp);
  EVP_PKEY * APICALL (*d2i_PUBKEY)(struct AmiSSLIFace *Self, EVP_PKEY ** a, unsigned char ** pp, long length);
  int APICALL (*i2d_RSA_PUBKEY)(struct AmiSSLIFace *Self, RSA * a, unsigned char ** pp);
  RSA * APICALL (*d2i_RSA_PUBKEY)(struct AmiSSLIFace *Self, RSA ** a, unsigned char ** pp, long length);
  int APICALL (*i2d_DSA_PUBKEY)(struct AmiSSLIFace *Self, DSA * a, unsigned char ** pp);
  DSA * APICALL (*d2i_DSA_PUBKEY)(struct AmiSSLIFace *Self, DSA ** a, unsigned char ** pp, long length);
  X509_SIG * APICALL (*X509_SIG_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_SIG_free)(struct AmiSSLIFace *Self, X509_SIG * a);
  X509_SIG * APICALL (*d2i_X509_SIG)(struct AmiSSLIFace *Self, X509_SIG ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_SIG)(struct AmiSSLIFace *Self, X509_SIG * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_SIG_it)(struct AmiSSLIFace *Self);
  X509_REQ_INFO * APICALL (*X509_REQ_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_REQ_INFO_free)(struct AmiSSLIFace *Self, X509_REQ_INFO * a);
  X509_REQ_INFO * APICALL (*d2i_X509_REQ_INFO)(struct AmiSSLIFace *Self, X509_REQ_INFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_REQ_INFO)(struct AmiSSLIFace *Self, X509_REQ_INFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_REQ_INFO_it)(struct AmiSSLIFace *Self);
  X509_REQ * APICALL (*X509_REQ_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_REQ_free)(struct AmiSSLIFace *Self, X509_REQ * a);
  X509_REQ * APICALL (*d2i_X509_REQ)(struct AmiSSLIFace *Self, X509_REQ ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_REQ)(struct AmiSSLIFace *Self, X509_REQ * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_REQ_it)(struct AmiSSLIFace *Self);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_ATTRIBUTE_free)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * a);
  X509_ATTRIBUTE * APICALL (*d2i_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_ATTRIBUTE_it)(struct AmiSSLIFace *Self);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_create)(struct AmiSSLIFace *Self, int nid, int atrtype, void * value);
  X509_EXTENSION * APICALL (*X509_EXTENSION_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_EXTENSION_free)(struct AmiSSLIFace *Self, X509_EXTENSION * a);
  X509_EXTENSION * APICALL (*d2i_X509_EXTENSION)(struct AmiSSLIFace *Self, X509_EXTENSION ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_EXTENSION)(struct AmiSSLIFace *Self, X509_EXTENSION * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_EXTENSION_it)(struct AmiSSLIFace *Self);
  X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_NAME_ENTRY_free)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * a);
  X509_NAME_ENTRY * APICALL (*d2i_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_NAME_ENTRY_it)(struct AmiSSLIFace *Self);
  X509_NAME * APICALL (*X509_NAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_NAME_free)(struct AmiSSLIFace *Self, X509_NAME * a);
  X509_NAME * APICALL (*d2i_X509_NAME)(struct AmiSSLIFace *Self, X509_NAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_NAME)(struct AmiSSLIFace *Self, X509_NAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_NAME_it)(struct AmiSSLIFace *Self);
  int APICALL (*X509_NAME_set)(struct AmiSSLIFace *Self, X509_NAME ** xn, X509_NAME * name);
  X509_CINF * APICALL (*X509_CINF_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_CINF_free)(struct AmiSSLIFace *Self, X509_CINF * a);
  X509_CINF * APICALL (*d2i_X509_CINF)(struct AmiSSLIFace *Self, X509_CINF ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_CINF)(struct AmiSSLIFace *Self, X509_CINF * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_CINF_it)(struct AmiSSLIFace *Self);
  X509 * APICALL (*X509_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_free)(struct AmiSSLIFace *Self, X509 * a);
  X509 * APICALL (*d2i_X509)(struct AmiSSLIFace *Self, X509 ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509)(struct AmiSSLIFace *Self, X509 * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_it)(struct AmiSSLIFace *Self);
  X509_CERT_AUX * APICALL (*X509_CERT_AUX_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_CERT_AUX_free)(struct AmiSSLIFace *Self, X509_CERT_AUX * a);
  X509_CERT_AUX * APICALL (*d2i_X509_CERT_AUX)(struct AmiSSLIFace *Self, X509_CERT_AUX ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_CERT_AUX)(struct AmiSSLIFace *Self, X509_CERT_AUX * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_CERT_AUX_it)(struct AmiSSLIFace *Self);
  int APICALL (*X509_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*X509_set_ex_data)(struct AmiSSLIFace *Self, X509 * r, int idx, void * arg);
  void * APICALL (*X509_get_ex_data)(struct AmiSSLIFace *Self, X509 * r, int idx);
  int APICALL (*i2d_X509_AUX)(struct AmiSSLIFace *Self, X509 * a, unsigned char ** pp);
  X509 * APICALL (*d2i_X509_AUX)(struct AmiSSLIFace *Self, X509 ** a, unsigned char ** pp, long length);
  int APICALL (*X509_alias_set1)(struct AmiSSLIFace *Self, X509 * x, unsigned char * name, int len);
  int APICALL (*X509_keyid_set1)(struct AmiSSLIFace *Self, X509 * x, unsigned char * id, int len);
  unsigned char * APICALL (*X509_alias_get0)(struct AmiSSLIFace *Self, X509 * x, int * len);
  int APICALL (*(*X509_TRUST_set_default)(struct AmiSSLIFace *Self, int (*trust)(int, X509 *, int)))(int, X509 *, int);
  int APICALL (*X509_TRUST_set)(struct AmiSSLIFace *Self, int * t, int trust);
  int APICALL (*X509_add1_trust_object)(struct AmiSSLIFace *Self, X509 * x, ASN1_OBJECT * obj);
  int APICALL (*X509_add1_reject_object)(struct AmiSSLIFace *Self, X509 * x, ASN1_OBJECT * obj);
  void APICALL (*X509_trust_clear)(struct AmiSSLIFace *Self, X509 * x);
  void APICALL (*X509_reject_clear)(struct AmiSSLIFace *Self, X509 * x);
  X509_REVOKED * APICALL (*X509_REVOKED_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_REVOKED_free)(struct AmiSSLIFace *Self, X509_REVOKED * a);
  X509_REVOKED * APICALL (*d2i_X509_REVOKED)(struct AmiSSLIFace *Self, X509_REVOKED ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_REVOKED)(struct AmiSSLIFace *Self, X509_REVOKED * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_REVOKED_it)(struct AmiSSLIFace *Self);
  X509_CRL_INFO * APICALL (*X509_CRL_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_CRL_INFO_free)(struct AmiSSLIFace *Self, X509_CRL_INFO * a);
  X509_CRL_INFO * APICALL (*d2i_X509_CRL_INFO)(struct AmiSSLIFace *Self, X509_CRL_INFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_CRL_INFO)(struct AmiSSLIFace *Self, X509_CRL_INFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_CRL_INFO_it)(struct AmiSSLIFace *Self);
  X509_CRL * APICALL (*X509_CRL_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_CRL_free)(struct AmiSSLIFace *Self, X509_CRL * a);
  X509_CRL * APICALL (*d2i_X509_CRL)(struct AmiSSLIFace *Self, X509_CRL ** a, unsigned char ** in, long len);
  int APICALL (*i2d_X509_CRL)(struct AmiSSLIFace *Self, X509_CRL * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*X509_CRL_it)(struct AmiSSLIFace *Self);
  int APICALL (*X509_CRL_add0_revoked)(struct AmiSSLIFace *Self, X509_CRL * crl, X509_REVOKED * rev);
  X509_PKEY * APICALL (*X509_PKEY_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_PKEY_free)(struct AmiSSLIFace *Self, X509_PKEY * a);
  int APICALL (*i2d_X509_PKEY)(struct AmiSSLIFace *Self, X509_PKEY * a, unsigned char ** pp);
  X509_PKEY * APICALL (*d2i_X509_PKEY)(struct AmiSSLIFace *Self, X509_PKEY ** a, unsigned char ** pp, long length);
  NETSCAPE_SPKI * APICALL (*NETSCAPE_SPKI_new)(struct AmiSSLIFace *Self);
  void APICALL (*NETSCAPE_SPKI_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a);
  NETSCAPE_SPKI * APICALL (*d2i_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, NETSCAPE_SPKI ** a, unsigned char ** in, long len);
  int APICALL (*i2d_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*NETSCAPE_SPKI_it)(struct AmiSSLIFace *Self);
  NETSCAPE_SPKAC * APICALL (*NETSCAPE_SPKAC_new)(struct AmiSSLIFace *Self);
  void APICALL (*NETSCAPE_SPKAC_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC * a);
  NETSCAPE_SPKAC * APICALL (*d2i_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC ** a, unsigned char ** in, long len);
  int APICALL (*i2d_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*NETSCAPE_SPKAC_it)(struct AmiSSLIFace *Self);
  NETSCAPE_CERT_SEQUENCE * APICALL (*NETSCAPE_CERT_SEQUENCE_new)(struct AmiSSLIFace *Self);
  void APICALL (*NETSCAPE_CERT_SEQUENCE_free)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE * a);
  NETSCAPE_CERT_SEQUENCE * APICALL (*d2i_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*NETSCAPE_CERT_SEQUENCE_it)(struct AmiSSLIFace *Self);
  X509_INFO * APICALL (*X509_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_INFO_free)(struct AmiSSLIFace *Self, X509_INFO * a);
  char * APICALL (*X509_NAME_oneline)(struct AmiSSLIFace *Self, X509_NAME * a, char * buf, int size);
  int APICALL (*ASN1_verify)(struct AmiSSLIFace *Self, int (*i2d)(), X509_ALGOR * algor1, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey);
  int APICALL (*ASN1_digest)(struct AmiSSLIFace *Self, int (*i2d)(), const EVP_MD * type, char * data, unsigned char * md, unsigned int * len);
  int APICALL (*ASN1_sign)(struct AmiSSLIFace *Self, int (*i2d)(), X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey, const EVP_MD * type);
  int APICALL (*ASN1_item_digest)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, const EVP_MD * type, void * data, unsigned char * md, unsigned int * len);
  int APICALL (*ASN1_item_verify)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, X509_ALGOR * algor1, ASN1_BIT_STRING * signature, void * data, EVP_PKEY * pkey);
  int APICALL (*ASN1_item_sign)(struct AmiSSLIFace *Self, const ASN1_ITEM * it, X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, void * data, EVP_PKEY * pkey, const EVP_MD * type);
  int APICALL (*X509_set_version)(struct AmiSSLIFace *Self, X509 * x, long version);
  int APICALL (*X509_set_serialNumber)(struct AmiSSLIFace *Self, X509 * x, ASN1_INTEGER * serial);
  ASN1_INTEGER * APICALL (*X509_get_serialNumber)(struct AmiSSLIFace *Self, X509 * x);
  int APICALL (*X509_set_issuer_name)(struct AmiSSLIFace *Self, X509 * x, X509_NAME * name);
  X509_NAME * APICALL (*X509_get_issuer_name)(struct AmiSSLIFace *Self, X509 * a);
  int APICALL (*X509_set_subject_name)(struct AmiSSLIFace *Self, X509 * x, X509_NAME * name);
  X509_NAME * APICALL (*X509_get_subject_name)(struct AmiSSLIFace *Self, X509 * a);
  int APICALL (*X509_set_notBefore)(struct AmiSSLIFace *Self, X509 * x, ASN1_TIME * tm);
  int APICALL (*X509_set_notAfter)(struct AmiSSLIFace *Self, X509 * x, ASN1_TIME * tm);
  int APICALL (*X509_set_pubkey)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*X509_get_pubkey)(struct AmiSSLIFace *Self, X509 * x);
  ASN1_BIT_STRING * APICALL (*X509_get0_pubkey_bitstr)(struct AmiSSLIFace *Self, const X509 * x);
  int APICALL (*X509_certificate_type)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pubkey);
  int APICALL (*X509_REQ_set_version)(struct AmiSSLIFace *Self, X509_REQ * x, long version);
  int APICALL (*X509_REQ_set_subject_name)(struct AmiSSLIFace *Self, X509_REQ * req, X509_NAME * name);
  int APICALL (*X509_REQ_set_pubkey)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey);
  EVP_PKEY * APICALL (*X509_REQ_get_pubkey)(struct AmiSSLIFace *Self, X509_REQ * req);
  int APICALL (*X509_REQ_extension_nid)(struct AmiSSLIFace *Self, int nid);
  int * APICALL (*X509_REQ_get_extension_nids)(struct AmiSSLIFace *Self);
  void APICALL (*X509_REQ_set_extension_nids)(struct AmiSSLIFace *Self, int * nids);
  STACK_OF(X509_EXTENSION) * APICALL (*X509_REQ_get_extensions)(struct AmiSSLIFace *Self, X509_REQ * req);
  int APICALL (*X509_REQ_add_extensions_nid)(struct AmiSSLIFace *Self, X509_REQ * req, STACK_OF(X509_EXTENSION) * exts, int nid);
  int APICALL (*X509_REQ_add_extensions)(struct AmiSSLIFace *Self, X509_REQ * req, STACK_OF(X509_EXTENSION) * exts);
  int APICALL (*X509_REQ_get_attr_count)(struct AmiSSLIFace *Self, const X509_REQ * req);
  int APICALL (*X509_REQ_get_attr_by_NID)(struct AmiSSLIFace *Self, const X509_REQ * req, int nid, int lastpos);
  int APICALL (*X509_REQ_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const X509_REQ * req, ASN1_OBJECT * obj, int lastpos);
  X509_ATTRIBUTE * APICALL (*X509_REQ_get_attr)(struct AmiSSLIFace *Self, const X509_REQ * req, int loc);
  X509_ATTRIBUTE * APICALL (*X509_REQ_delete_attr)(struct AmiSSLIFace *Self, X509_REQ * req, int loc);
  int APICALL (*X509_REQ_add1_attr)(struct AmiSSLIFace *Self, X509_REQ * req, X509_ATTRIBUTE * attr);
  int APICALL (*X509_REQ_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, X509_REQ * req, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
  int APICALL (*X509_REQ_add1_attr_by_NID)(struct AmiSSLIFace *Self, X509_REQ * req, int nid, int type, const unsigned char * bytes, int len);
  int APICALL (*X509_REQ_add1_attr_by_txt)(struct AmiSSLIFace *Self, X509_REQ * req, const char * attrname, int type, const unsigned char * bytes, int len);
  int APICALL (*X509_CRL_set_version)(struct AmiSSLIFace *Self, X509_CRL * x, long version);
  int APICALL (*X509_CRL_set_issuer_name)(struct AmiSSLIFace *Self, X509_CRL * x, X509_NAME * name);
  int APICALL (*X509_CRL_set_lastUpdate)(struct AmiSSLIFace *Self, X509_CRL * x, ASN1_TIME * tm);
  int APICALL (*X509_CRL_set_nextUpdate)(struct AmiSSLIFace *Self, X509_CRL * x, ASN1_TIME * tm);
  int APICALL (*X509_CRL_sort)(struct AmiSSLIFace *Self, X509_CRL * crl);
  int APICALL (*X509_REVOKED_set_serialNumber)(struct AmiSSLIFace *Self, X509_REVOKED * x, ASN1_INTEGER * serial);
  int APICALL (*X509_REVOKED_set_revocationDate)(struct AmiSSLIFace *Self, X509_REVOKED * r, ASN1_TIME * tm);
  int APICALL (*X509_check_private_key)(struct AmiSSLIFace *Self, X509 * x509, EVP_PKEY * pkey);
  int APICALL (*X509_issuer_and_serial_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
  unsigned long APICALL (*X509_issuer_and_serial_hash)(struct AmiSSLIFace *Self, X509 * a);
  int APICALL (*X509_issuer_name_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
  unsigned long APICALL (*X509_issuer_name_hash)(struct AmiSSLIFace *Self, X509 * a);
  int APICALL (*X509_subject_name_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
  unsigned long APICALL (*X509_subject_name_hash)(struct AmiSSLIFace *Self, X509 * x);
  int APICALL (*X509_cmp)(struct AmiSSLIFace *Self, const X509 * a, const X509 * b);
  int APICALL (*X509_NAME_cmp)(struct AmiSSLIFace *Self, const X509_NAME * a, const X509_NAME * b);
  unsigned long APICALL (*X509_NAME_hash)(struct AmiSSLIFace *Self, X509_NAME * x);
  int APICALL (*X509_CRL_cmp)(struct AmiSSLIFace *Self, const X509_CRL * a, const X509_CRL * b);
  int APICALL (*X509_NAME_print)(struct AmiSSLIFace *Self, BIO * bp, X509_NAME * name, int obase);
  int APICALL (*X509_NAME_print_ex)(struct AmiSSLIFace *Self, BIO * out, X509_NAME * nm, int indent, unsigned long flags);
  int APICALL (*X509_print_ex)(struct AmiSSLIFace *Self, BIO * bp, X509 * x, unsigned long nmflag, unsigned long cflag);
  int APICALL (*X509_print)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
  int APICALL (*X509_ocspid_print)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
  int APICALL (*X509_CERT_AUX_print)(struct AmiSSLIFace *Self, BIO * bp, X509_CERT_AUX * x, int indent);
  int APICALL (*X509_CRL_print)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * x);
  int APICALL (*X509_REQ_print_ex)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * x, unsigned long nmflag, unsigned long cflag);
  int APICALL (*X509_REQ_print)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * req);
  int APICALL (*X509_NAME_entry_count)(struct AmiSSLIFace *Self, X509_NAME * name);
  int APICALL (*X509_NAME_get_text_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, char * buf, int len);
  int APICALL (*X509_NAME_get_text_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, ASN1_OBJECT * obj, char * buf, int len);
  int APICALL (*X509_NAME_get_index_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, int lastpos);
  int APICALL (*X509_NAME_get_index_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, ASN1_OBJECT * obj, int lastpos);
  X509_NAME_ENTRY * APICALL (*X509_NAME_get_entry)(struct AmiSSLIFace *Self, X509_NAME * name, int loc);
  X509_NAME_ENTRY * APICALL (*X509_NAME_delete_entry)(struct AmiSSLIFace *Self, X509_NAME * name, int loc);
  int APICALL (*X509_NAME_add_entry)(struct AmiSSLIFace *Self, X509_NAME * name, X509_NAME_ENTRY * ne, int loc, int set);
  int APICALL (*X509_NAME_add_entry_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, ASN1_OBJECT * obj, int type, unsigned char * bytes, int len, int loc, int set);
  int APICALL (*X509_NAME_add_entry_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, int type, unsigned char * bytes, int len, int loc, int set);
  X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_create_by_txt)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, const char * field, int type, const unsigned char * bytes, int len);
  X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_create_by_NID)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, int nid, int type, unsigned char * bytes, int len);
  int APICALL (*X509_NAME_add_entry_by_txt)(struct AmiSSLIFace *Self, X509_NAME * name, const char * field, int type, const unsigned char * bytes, int len, int loc, int set);
  X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_create_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
  int APICALL (*X509_NAME_ENTRY_set_object)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, ASN1_OBJECT * obj);
  int APICALL (*X509_NAME_ENTRY_set_data)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, int type, const unsigned char * bytes, int len);
  ASN1_OBJECT * APICALL (*X509_NAME_ENTRY_get_object)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
  ASN1_STRING * APICALL (*X509_NAME_ENTRY_get_data)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
  int APICALL (*X509v3_get_ext_count)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x);
  int APICALL (*X509v3_get_ext_by_NID)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int nid, int lastpos);
  int APICALL (*X509v3_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*X509v3_get_ext_by_critical)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*X509v3_get_ext)(struct AmiSSLIFace *Self, const STACK_OF(X509_EXTENSION) * x, int loc);
  X509_EXTENSION * APICALL (*X509v3_delete_ext)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) * x, int loc);
  STACK_OF(X509_EXTENSION) * APICALL (*X509v3_add_ext)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) ** x, X509_EXTENSION * ex, int loc);
  int APICALL (*X509_get_ext_count)(struct AmiSSLIFace *Self, X509 * x);
  int APICALL (*X509_get_ext_by_NID)(struct AmiSSLIFace *Self, X509 * x, int nid, int lastpos);
  int APICALL (*X509_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509 * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*X509_get_ext_by_critical)(struct AmiSSLIFace *Self, X509 * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*X509_get_ext)(struct AmiSSLIFace *Self, X509 * x, int loc);
  X509_EXTENSION * APICALL (*X509_delete_ext)(struct AmiSSLIFace *Self, X509 * x, int loc);
  int APICALL (*X509_add_ext)(struct AmiSSLIFace *Self, X509 * x, X509_EXTENSION * ex, int loc);
  void * APICALL (*X509_get_ext_d2i)(struct AmiSSLIFace *Self, X509 * x, int nid, int * crit, int * idx);
  int APICALL (*X509_add1_ext_i2d)(struct AmiSSLIFace *Self, X509 * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*X509_CRL_get_ext_count)(struct AmiSSLIFace *Self, X509_CRL * x);
  int APICALL (*X509_CRL_get_ext_by_NID)(struct AmiSSLIFace *Self, X509_CRL * x, int nid, int lastpos);
  int APICALL (*X509_CRL_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509_CRL * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*X509_CRL_get_ext_by_critical)(struct AmiSSLIFace *Self, X509_CRL * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*X509_CRL_get_ext)(struct AmiSSLIFace *Self, X509_CRL * x, int loc);
  X509_EXTENSION * APICALL (*X509_CRL_delete_ext)(struct AmiSSLIFace *Self, X509_CRL * x, int loc);
  int APICALL (*X509_CRL_add_ext)(struct AmiSSLIFace *Self, X509_CRL * x, X509_EXTENSION * ex, int loc);
  void * APICALL (*X509_CRL_get_ext_d2i)(struct AmiSSLIFace *Self, X509_CRL * x, int nid, int * crit, int * idx);
  int APICALL (*X509_CRL_add1_ext_i2d)(struct AmiSSLIFace *Self, X509_CRL * x, int nid, void * value, int crit, unsigned long flags);
  int APICALL (*X509_REVOKED_get_ext_count)(struct AmiSSLIFace *Self, X509_REVOKED * x);
  int APICALL (*X509_REVOKED_get_ext_by_NID)(struct AmiSSLIFace *Self, X509_REVOKED * x, int nid, int lastpos);
  int APICALL (*X509_REVOKED_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509_REVOKED * x, ASN1_OBJECT * obj, int lastpos);
  int APICALL (*X509_REVOKED_get_ext_by_critical)(struct AmiSSLIFace *Self, X509_REVOKED * x, int crit, int lastpos);
  X509_EXTENSION * APICALL (*X509_REVOKED_get_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, int loc);
  X509_EXTENSION * APICALL (*X509_REVOKED_delete_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, int loc);
  int APICALL (*X509_REVOKED_add_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, X509_EXTENSION * ex, int loc);
  void * APICALL (*X509_REVOKED_get_ext_d2i)(struct AmiSSLIFace *Self, X509_REVOKED * x, int nid, int * crit, int * idx);
  int APICALL (*X509_REVOKED_add1_ext_i2d)(struct AmiSSLIFace *Self, X509_REVOKED * x, int nid, void * value, int crit, unsigned long flags);
  X509_EXTENSION * APICALL (*X509_EXTENSION_create_by_NID)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, int nid, int crit, ASN1_OCTET_STRING * data);
  X509_EXTENSION * APICALL (*X509_EXTENSION_create_by_OBJ)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, ASN1_OBJECT * obj, int crit, ASN1_OCTET_STRING * data);
  int APICALL (*X509_EXTENSION_set_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, ASN1_OBJECT * obj);
  int APICALL (*X509_EXTENSION_set_critical)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, int crit);
  int APICALL (*X509_EXTENSION_set_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, ASN1_OCTET_STRING * data);
  ASN1_OBJECT * APICALL (*X509_EXTENSION_get_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
  ASN1_OCTET_STRING * APICALL (*X509_EXTENSION_get_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ne);
  int APICALL (*X509_EXTENSION_get_critical)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
  int APICALL (*X509at_get_attr_count)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x);
  int APICALL (*X509at_get_attr_by_NID)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x, int nid, int lastpos);
  int APICALL (*X509at_get_attr_by_OBJ)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * sk, ASN1_OBJECT * obj, int lastpos);
  X509_ATTRIBUTE * APICALL (*X509at_get_attr)(struct AmiSSLIFace *Self, const STACK_OF(X509_ATTRIBUTE) * x, int loc);
  X509_ATTRIBUTE * APICALL (*X509at_delete_attr)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) * x, int loc);
  STACK_OF(X509_ATTRIBUTE) * APICALL (*X509at_add1_attr)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, X509_ATTRIBUTE * attr);
  STACK_OF(X509_ATTRIBUTE) * APICALL (*X509at_add1_attr_by_OBJ)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, const ASN1_OBJECT * obj, int type, const unsigned char * bytes, int len);
  STACK_OF(X509_ATTRIBUTE) * APICALL (*X509at_add1_attr_by_NID)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, int nid, int type, const unsigned char * bytes, int len);
  STACK_OF(X509_ATTRIBUTE) * APICALL (*X509at_add1_attr_by_txt)(struct AmiSSLIFace *Self, STACK_OF(X509_ATTRIBUTE) ** x, const char * attrname, int type, const unsigned char * bytes, int len);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_create_by_NID)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, int nid, int atrtype, const void * data, int len);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_create_by_OBJ)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, const ASN1_OBJECT * obj, int atrtype, const void * data, int len);
  X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_create_by_txt)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** attr, const char * atrname, int type, const unsigned char * bytes, int len);
  int APICALL (*X509_ATTRIBUTE_set1_object)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, const ASN1_OBJECT * obj);
  int APICALL (*X509_ATTRIBUTE_set1_data)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int attrtype, const void * data, int len);
  void * APICALL (*X509_ATTRIBUTE_get0_data)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int idx, int atrtype, void * data);
  int APICALL (*X509_ATTRIBUTE_count)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr);
  ASN1_OBJECT * APICALL (*X509_ATTRIBUTE_get0_object)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr);
  ASN1_TYPE * APICALL (*X509_ATTRIBUTE_get0_type)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * attr, int idx);
  int APICALL (*X509_verify_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  X509 * APICALL (*X509_find_by_issuer_and_serial)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, X509_NAME * name, ASN1_INTEGER * serial);
  X509 * APICALL (*X509_find_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509) * sk, X509_NAME * name);
  PBEPARAM * APICALL (*PBEPARAM_new)(struct AmiSSLIFace *Self);
  void APICALL (*PBEPARAM_free)(struct AmiSSLIFace *Self, PBEPARAM * a);
  PBEPARAM * APICALL (*d2i_PBEPARAM)(struct AmiSSLIFace *Self, PBEPARAM ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PBEPARAM)(struct AmiSSLIFace *Self, PBEPARAM * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PBEPARAM_it)(struct AmiSSLIFace *Self);
  PBE2PARAM * APICALL (*PBE2PARAM_new)(struct AmiSSLIFace *Self);
  void APICALL (*PBE2PARAM_free)(struct AmiSSLIFace *Self, PBE2PARAM * a);
  PBE2PARAM * APICALL (*d2i_PBE2PARAM)(struct AmiSSLIFace *Self, PBE2PARAM ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PBE2PARAM)(struct AmiSSLIFace *Self, PBE2PARAM * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PBE2PARAM_it)(struct AmiSSLIFace *Self);
  PBKDF2PARAM * APICALL (*PBKDF2PARAM_new)(struct AmiSSLIFace *Self);
  void APICALL (*PBKDF2PARAM_free)(struct AmiSSLIFace *Self, PBKDF2PARAM * a);
  PBKDF2PARAM * APICALL (*d2i_PBKDF2PARAM)(struct AmiSSLIFace *Self, PBKDF2PARAM ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PBKDF2PARAM)(struct AmiSSLIFace *Self, PBKDF2PARAM * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PBKDF2PARAM_it)(struct AmiSSLIFace *Self);
  X509_ALGOR * APICALL (*PKCS5_pbe_set)(struct AmiSSLIFace *Self, int alg, int iter, unsigned char * salt, int saltlen);
  X509_ALGOR * APICALL (*PKCS5_pbe2_set)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int iter, unsigned char * salt, int saltlen);
  PKCS8_PRIV_KEY_INFO * APICALL (*PKCS8_PRIV_KEY_INFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKCS8_PRIV_KEY_INFO_free)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * a);
  PKCS8_PRIV_KEY_INFO * APICALL (*d2i_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKCS8_PRIV_KEY_INFO_it)(struct AmiSSLIFace *Self);
  EVP_PKEY * APICALL (*EVP_PKCS82PKEY)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
  PKCS8_PRIV_KEY_INFO * APICALL (*EVP_PKEY2PKCS8)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
  PKCS8_PRIV_KEY_INFO * APICALL (*EVP_PKEY2PKCS8_broken)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int broken);
  PKCS8_PRIV_KEY_INFO * APICALL (*PKCS8_set_broken)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int broken);
  int APICALL (*X509_check_trust)(struct AmiSSLIFace *Self, X509 * x, int id, int flags);
  int APICALL (*X509_TRUST_get_count)(struct AmiSSLIFace *Self);
  X509_TRUST * APICALL (*X509_TRUST_get0)(struct AmiSSLIFace *Self, int idx);
  int APICALL (*X509_TRUST_get_by_id)(struct AmiSSLIFace *Self, int id);
  int APICALL (*X509_TRUST_add)(struct AmiSSLIFace *Self, int id, int flags, int (*ck)(X509_TRUST *, X509 *, int), char * name, int arg1, void * arg2);
  void APICALL (*X509_TRUST_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*X509_TRUST_get_flags)(struct AmiSSLIFace *Self, X509_TRUST * xp);
  char * APICALL (*X509_TRUST_get0_name)(struct AmiSSLIFace *Self, X509_TRUST * xp);
  int APICALL (*X509_TRUST_get_trust)(struct AmiSSLIFace *Self, X509_TRUST * xp);
  void APICALL (*ERR_load_X509_strings)(struct AmiSSLIFace *Self);
  int APICALL (*X509_OBJECT_idx_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, int type, X509_NAME * name);
  X509_OBJECT * APICALL (*X509_OBJECT_retrieve_by_subject)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, int type, X509_NAME * name);
  X509_OBJECT * APICALL (*X509_OBJECT_retrieve_match)(struct AmiSSLIFace *Self, STACK_OF(X509_OBJECT) * h, X509_OBJECT * x);
  void APICALL (*X509_OBJECT_up_ref_count)(struct AmiSSLIFace *Self, X509_OBJECT * a);
  void APICALL (*X509_OBJECT_free_contents)(struct AmiSSLIFace *Self, X509_OBJECT * a);
  X509_STORE * APICALL (*X509_STORE_new)(struct AmiSSLIFace *Self);
  void APICALL (*X509_STORE_free)(struct AmiSSLIFace *Self, X509_STORE * v);
  void APICALL (*X509_STORE_set_flags)(struct AmiSSLIFace *Self, X509_STORE * ctx, long flags);
  int APICALL (*X509_STORE_set_purpose)(struct AmiSSLIFace *Self, X509_STORE * ctx, int purpose);
  int APICALL (*X509_STORE_set_trust)(struct AmiSSLIFace *Self, X509_STORE * ctx, int trust);
  X509_STORE_CTX * APICALL (*X509_STORE_CTX_new)(struct AmiSSLIFace *Self);
  int APICALL (*X509_STORE_CTX_get1_issuer)(struct AmiSSLIFace *Self, X509 ** issuer, X509_STORE_CTX * ctx, X509 * x);
  void APICALL (*X509_STORE_CTX_free)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  int APICALL (*X509_STORE_CTX_init)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE * store, X509 * x509, STACK_OF(X509) * chain);
  void APICALL (*X509_STORE_CTX_trusted_stack)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, STACK_OF(X509) * sk);
  void APICALL (*X509_STORE_CTX_cleanup)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  X509_LOOKUP * APICALL (*X509_STORE_add_lookup)(struct AmiSSLIFace *Self, X509_STORE * v, X509_LOOKUP_METHOD * m);
  X509_LOOKUP_METHOD * APICALL (*X509_LOOKUP_hash_dir)(struct AmiSSLIFace *Self);
  X509_LOOKUP_METHOD * APICALL (*X509_LOOKUP_file)(struct AmiSSLIFace *Self);
  int APICALL (*X509_STORE_add_cert)(struct AmiSSLIFace *Self, X509_STORE * ctx, X509 * x);
  int APICALL (*X509_STORE_add_crl)(struct AmiSSLIFace *Self, X509_STORE * ctx, X509_CRL * x);
  int APICALL (*X509_STORE_get_by_subject)(struct AmiSSLIFace *Self, X509_STORE_CTX * vs, int type, X509_NAME * name, X509_OBJECT * ret);
  int APICALL (*X509_LOOKUP_ctrl)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int cmd, const char * argc, long argl, char ** ret);
  int APICALL (*X509_load_cert_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
  int APICALL (*X509_load_crl_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
  int APICALL (*X509_load_cert_crl_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
  X509_LOOKUP * APICALL (*X509_LOOKUP_new)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method);
  void APICALL (*X509_LOOKUP_free)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
  int APICALL (*X509_LOOKUP_init)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
  int APICALL (*X509_LOOKUP_by_subject)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, X509_NAME * name, X509_OBJECT * ret);
  int APICALL (*X509_LOOKUP_by_issuer_serial)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, X509_NAME * name, ASN1_INTEGER * serial, X509_OBJECT * ret);
  int APICALL (*X509_LOOKUP_by_fingerprint)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, unsigned char * bytes, int len, X509_OBJECT * ret);
  int APICALL (*X509_LOOKUP_by_alias)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, char * str, int len, X509_OBJECT * ret);
  int APICALL (*X509_LOOKUP_shutdown)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
  int APICALL (*X509_STORE_load_locations)(struct AmiSSLIFace *Self, X509_STORE * ctx, const char * file, const char * dir);
  int APICALL (*X509_STORE_set_default_paths)(struct AmiSSLIFace *Self, X509_STORE * ctx);
  int APICALL (*X509_STORE_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*X509_STORE_CTX_set_ex_data)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int idx, void * data);
  void * APICALL (*X509_STORE_CTX_get_ex_data)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int idx);
  int APICALL (*X509_STORE_CTX_get_error)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  void APICALL (*X509_STORE_CTX_set_error)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int s);
  int APICALL (*X509_STORE_CTX_get_error_depth)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  X509 * APICALL (*X509_STORE_CTX_get_current_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  STACK_OF(X509) * APICALL (*X509_STORE_CTX_get_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  STACK_OF(X509) * APICALL (*X509_STORE_CTX_get1_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
  void APICALL (*X509_STORE_CTX_set_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * c, X509 * x);
  void APICALL (*X509_STORE_CTX_set_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * c, STACK_OF(X509) * sk);
  int APICALL (*X509_STORE_CTX_set_purpose)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int purpose);
  int APICALL (*X509_STORE_CTX_set_trust)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int trust);
  int APICALL (*X509_STORE_CTX_purpose_inherit)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int def_purpose, int purpose, int trust);
  void APICALL (*X509_STORE_CTX_set_flags)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, long flags);
  void APICALL (*X509_STORE_CTX_set_time)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, long flags, time_t t);
  void APICALL (*X509_STORE_CTX_set_verify_cb)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int (*verify_cb)(int, X509_STORE_CTX *));
  BASIC_CONSTRAINTS * APICALL (*BASIC_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
  void APICALL (*BASIC_CONSTRAINTS_free)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS * a);
  BASIC_CONSTRAINTS * APICALL (*d2i_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS ** a, unsigned char ** in, long len);
  int APICALL (*i2d_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*BASIC_CONSTRAINTS_it)(struct AmiSSLIFace *Self);
  SXNET * APICALL (*SXNET_new)(struct AmiSSLIFace *Self);
  void APICALL (*SXNET_free)(struct AmiSSLIFace *Self, SXNET * a);
  SXNET * APICALL (*d2i_SXNET)(struct AmiSSLIFace *Self, SXNET ** a, unsigned char ** in, long len);
  int APICALL (*i2d_SXNET)(struct AmiSSLIFace *Self, SXNET * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*SXNET_it)(struct AmiSSLIFace *Self);
  SXNETID * APICALL (*SXNETID_new)(struct AmiSSLIFace *Self);
  void APICALL (*SXNETID_free)(struct AmiSSLIFace *Self, SXNETID * a);
  SXNETID * APICALL (*d2i_SXNETID)(struct AmiSSLIFace *Self, SXNETID ** a, unsigned char ** in, long len);
  int APICALL (*i2d_SXNETID)(struct AmiSSLIFace *Self, SXNETID * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*SXNETID_it)(struct AmiSSLIFace *Self);
  int APICALL (*SXNET_add_id_asc)(struct AmiSSLIFace *Self, SXNET ** psx, char * zone, char * user, int userlen);
  int APICALL (*SXNET_add_id_ulong)(struct AmiSSLIFace *Self, SXNET ** psx, unsigned long lzone, char * user, int userlen);
  int APICALL (*SXNET_add_id_INTEGER)(struct AmiSSLIFace *Self, SXNET ** psx, ASN1_INTEGER * izone, char * user, int userlen);
  ASN1_OCTET_STRING * APICALL (*SXNET_get_id_asc)(struct AmiSSLIFace *Self, SXNET * sx, char * zone);
  ASN1_OCTET_STRING * APICALL (*SXNET_get_id_ulong)(struct AmiSSLIFace *Self, SXNET * sx, unsigned long lzone);
  ASN1_OCTET_STRING * APICALL (*SXNET_get_id_INTEGER)(struct AmiSSLIFace *Self, SXNET * sx, ASN1_INTEGER * zone);
  AUTHORITY_KEYID * APICALL (*AUTHORITY_KEYID_new)(struct AmiSSLIFace *Self);
  void APICALL (*AUTHORITY_KEYID_free)(struct AmiSSLIFace *Self, AUTHORITY_KEYID * a);
  AUTHORITY_KEYID * APICALL (*d2i_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, AUTHORITY_KEYID ** a, unsigned char ** in, long len);
  int APICALL (*i2d_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, AUTHORITY_KEYID * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*AUTHORITY_KEYID_it)(struct AmiSSLIFace *Self);
  PKEY_USAGE_PERIOD * APICALL (*PKEY_USAGE_PERIOD_new)(struct AmiSSLIFace *Self);
  void APICALL (*PKEY_USAGE_PERIOD_free)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD * a);
  PKEY_USAGE_PERIOD * APICALL (*d2i_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PKEY_USAGE_PERIOD_it)(struct AmiSSLIFace *Self);
  GENERAL_NAME * APICALL (*GENERAL_NAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*GENERAL_NAME_free)(struct AmiSSLIFace *Self, GENERAL_NAME * a);
  GENERAL_NAME * APICALL (*d2i_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*GENERAL_NAME_it)(struct AmiSSLIFace *Self);
  STACK_OF(CONF_VALUE) * APICALL (*i2v_GENERAL_NAME)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, GENERAL_NAME * gen, STACK_OF(CONF_VALUE) * ret);
  int APICALL (*GENERAL_NAME_print)(struct AmiSSLIFace *Self, BIO * out, GENERAL_NAME * gen);
  GENERAL_NAMES * APICALL (*GENERAL_NAMES_new)(struct AmiSSLIFace *Self);
  void APICALL (*GENERAL_NAMES_free)(struct AmiSSLIFace *Self, GENERAL_NAMES * a);
  GENERAL_NAMES * APICALL (*d2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, GENERAL_NAMES ** a, unsigned char ** in, long len);
  int APICALL (*i2d_GENERAL_NAMES)(struct AmiSSLIFace *Self, GENERAL_NAMES * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*GENERAL_NAMES_it)(struct AmiSSLIFace *Self);
  STACK_OF(CONF_VALUE) * APICALL (*i2v_GENERAL_NAMES)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, GENERAL_NAMES * gen, STACK_OF(CONF_VALUE) * extlist);
  GENERAL_NAMES * APICALL (*v2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, STACK_OF(CONF_VALUE) * nval);
  OTHERNAME * APICALL (*OTHERNAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*OTHERNAME_free)(struct AmiSSLIFace *Self, OTHERNAME * a);
  OTHERNAME * APICALL (*d2i_OTHERNAME)(struct AmiSSLIFace *Self, OTHERNAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_OTHERNAME)(struct AmiSSLIFace *Self, OTHERNAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*OTHERNAME_it)(struct AmiSSLIFace *Self);
  EDIPARTYNAME * APICALL (*EDIPARTYNAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*EDIPARTYNAME_free)(struct AmiSSLIFace *Self, EDIPARTYNAME * a);
  EDIPARTYNAME * APICALL (*d2i_EDIPARTYNAME)(struct AmiSSLIFace *Self, EDIPARTYNAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_EDIPARTYNAME)(struct AmiSSLIFace *Self, EDIPARTYNAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*EDIPARTYNAME_it)(struct AmiSSLIFace *Self);
  char * APICALL (*i2s_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, ASN1_OCTET_STRING * ia5);
  ASN1_OCTET_STRING * APICALL (*s2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, char * str);
  EXTENDED_KEY_USAGE * APICALL (*EXTENDED_KEY_USAGE_new)(struct AmiSSLIFace *Self);
  void APICALL (*EXTENDED_KEY_USAGE_free)(struct AmiSSLIFace *Self, EXTENDED_KEY_USAGE * a);
  EXTENDED_KEY_USAGE * APICALL (*d2i_EXTENDED_KEY_USAGE)(struct AmiSSLIFace *Self, EXTENDED_KEY_USAGE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_EXTENDED_KEY_USAGE)(struct AmiSSLIFace *Self, EXTENDED_KEY_USAGE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*EXTENDED_KEY_USAGE_it)(struct AmiSSLIFace *Self);
  int APICALL (*i2a_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, BIO * bp, ACCESS_DESCRIPTION * a);
  CERTIFICATEPOLICIES * APICALL (*CERTIFICATEPOLICIES_new)(struct AmiSSLIFace *Self);
  void APICALL (*CERTIFICATEPOLICIES_free)(struct AmiSSLIFace *Self, CERTIFICATEPOLICIES * a);
  CERTIFICATEPOLICIES * APICALL (*d2i_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, CERTIFICATEPOLICIES ** a, unsigned char ** in, long len);
  int APICALL (*i2d_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, CERTIFICATEPOLICIES * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*CERTIFICATEPOLICIES_it)(struct AmiSSLIFace *Self);
  POLICYINFO * APICALL (*POLICYINFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*POLICYINFO_free)(struct AmiSSLIFace *Self, POLICYINFO * a);
  POLICYINFO * APICALL (*d2i_POLICYINFO)(struct AmiSSLIFace *Self, POLICYINFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_POLICYINFO)(struct AmiSSLIFace *Self, POLICYINFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*POLICYINFO_it)(struct AmiSSLIFace *Self);
  POLICYQUALINFO * APICALL (*POLICYQUALINFO_new)(struct AmiSSLIFace *Self);
  void APICALL (*POLICYQUALINFO_free)(struct AmiSSLIFace *Self, POLICYQUALINFO * a);
  POLICYQUALINFO * APICALL (*d2i_POLICYQUALINFO)(struct AmiSSLIFace *Self, POLICYQUALINFO ** a, unsigned char ** in, long len);
  int APICALL (*i2d_POLICYQUALINFO)(struct AmiSSLIFace *Self, POLICYQUALINFO * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*POLICYQUALINFO_it)(struct AmiSSLIFace *Self);
  USERNOTICE * APICALL (*USERNOTICE_new)(struct AmiSSLIFace *Self);
  void APICALL (*USERNOTICE_free)(struct AmiSSLIFace *Self, USERNOTICE * a);
  USERNOTICE * APICALL (*d2i_USERNOTICE)(struct AmiSSLIFace *Self, USERNOTICE ** a, unsigned char ** in, long len);
  int APICALL (*i2d_USERNOTICE)(struct AmiSSLIFace *Self, USERNOTICE * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*USERNOTICE_it)(struct AmiSSLIFace *Self);
  NOTICEREF * APICALL (*NOTICEREF_new)(struct AmiSSLIFace *Self);
  void APICALL (*NOTICEREF_free)(struct AmiSSLIFace *Self, NOTICEREF * a);
  NOTICEREF * APICALL (*d2i_NOTICEREF)(struct AmiSSLIFace *Self, NOTICEREF ** a, unsigned char ** in, long len);
  int APICALL (*i2d_NOTICEREF)(struct AmiSSLIFace *Self, NOTICEREF * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*NOTICEREF_it)(struct AmiSSLIFace *Self);
  CRL_DIST_POINTS * APICALL (*CRL_DIST_POINTS_new)(struct AmiSSLIFace *Self);
  void APICALL (*CRL_DIST_POINTS_free)(struct AmiSSLIFace *Self, CRL_DIST_POINTS * a);
  CRL_DIST_POINTS * APICALL (*d2i_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, CRL_DIST_POINTS ** a, unsigned char ** in, long len);
  int APICALL (*i2d_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, CRL_DIST_POINTS * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*CRL_DIST_POINTS_it)(struct AmiSSLIFace *Self);
  DIST_POINT * APICALL (*DIST_POINT_new)(struct AmiSSLIFace *Self);
  void APICALL (*DIST_POINT_free)(struct AmiSSLIFace *Self, DIST_POINT * a);
  DIST_POINT * APICALL (*d2i_DIST_POINT)(struct AmiSSLIFace *Self, DIST_POINT ** a, unsigned char ** in, long len);
  int APICALL (*i2d_DIST_POINT)(struct AmiSSLIFace *Self, DIST_POINT * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*DIST_POINT_it)(struct AmiSSLIFace *Self);
  DIST_POINT_NAME * APICALL (*DIST_POINT_NAME_new)(struct AmiSSLIFace *Self);
  void APICALL (*DIST_POINT_NAME_free)(struct AmiSSLIFace *Self, DIST_POINT_NAME * a);
  DIST_POINT_NAME * APICALL (*d2i_DIST_POINT_NAME)(struct AmiSSLIFace *Self, DIST_POINT_NAME ** a, unsigned char ** in, long len);
  int APICALL (*i2d_DIST_POINT_NAME)(struct AmiSSLIFace *Self, DIST_POINT_NAME * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*DIST_POINT_NAME_it)(struct AmiSSLIFace *Self);
  ACCESS_DESCRIPTION * APICALL (*ACCESS_DESCRIPTION_new)(struct AmiSSLIFace *Self);
  void APICALL (*ACCESS_DESCRIPTION_free)(struct AmiSSLIFace *Self, ACCESS_DESCRIPTION * a);
  ACCESS_DESCRIPTION * APICALL (*d2i_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, ACCESS_DESCRIPTION ** a, unsigned char ** in, long len);
  int APICALL (*i2d_ACCESS_DESCRIPTION)(struct AmiSSLIFace *Self, ACCESS_DESCRIPTION * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*ACCESS_DESCRIPTION_it)(struct AmiSSLIFace *Self);
  AUTHORITY_INFO_ACCESS * APICALL (*AUTHORITY_INFO_ACCESS_new)(struct AmiSSLIFace *Self);
  void APICALL (*AUTHORITY_INFO_ACCESS_free)(struct AmiSSLIFace *Self, AUTHORITY_INFO_ACCESS * a);
  AUTHORITY_INFO_ACCESS * APICALL (*d2i_AUTHORITY_INFO_ACCESS)(struct AmiSSLIFace *Self, AUTHORITY_INFO_ACCESS ** a, unsigned char ** in, long len);
  int APICALL (*i2d_AUTHORITY_INFO_ACCESS)(struct AmiSSLIFace *Self, AUTHORITY_INFO_ACCESS * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*AUTHORITY_INFO_ACCESS_it)(struct AmiSSLIFace *Self);
  GENERAL_NAME * APICALL (*v2i_GENERAL_NAME)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, CONF_VALUE * cnf);
  void APICALL (*X509V3_conf_free)(struct AmiSSLIFace *Self, CONF_VALUE * val);
  X509_EXTENSION * APICALL (*X509V3_EXT_nconf_nid)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, int ext_nid, char * value);
  X509_EXTENSION * APICALL (*X509V3_EXT_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, char * name, char * value);
  int APICALL (*X509V3_EXT_add_nconf_sk)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, char * section, STACK_OF(X509_EXTENSION) ** sk);
  int APICALL (*X509V3_EXT_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, char * section, X509 * cert);
  int APICALL (*X509V3_EXT_REQ_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, char * section, X509_REQ * req);
  int APICALL (*X509V3_EXT_CRL_add_nconf)(struct AmiSSLIFace *Self, CONF * conf, X509V3_CTX * ctx, char * section, X509_CRL * crl);
  X509_EXTENSION * APICALL (*X509V3_EXT_conf_nid)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, int ext_nid, char * value);
  X509_EXTENSION * APICALL (*X509V3_EXT_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * name, char * value);
  int APICALL (*X509V3_EXT_add_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * section, X509 * cert);
  int APICALL (*X509V3_EXT_REQ_add_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * section, X509_REQ * req);
  int APICALL (*X509V3_EXT_CRL_add_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * section, X509_CRL * crl);
  int APICALL (*X509V3_add_value_bool_nf)(struct AmiSSLIFace *Self, char * name, int asn1_bool, STACK_OF(CONF_VALUE) ** extlist);
  int APICALL (*X509V3_get_value_bool)(struct AmiSSLIFace *Self, CONF_VALUE * value, int * asn1_bool);
  int APICALL (*X509V3_get_value_int)(struct AmiSSLIFace *Self, CONF_VALUE * value, ASN1_INTEGER ** aint);
  void APICALL (*X509V3_set_nconf)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, CONF * conf);
  void APICALL (*X509V3_set_conf_lhash)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, LHASH * lhash);
  char * APICALL (*X509V3_get_string)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * name, char * section);
  STACK_OF(CONF_VALUE) * APICALL (*X509V3_get_section)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * section);
  void APICALL (*X509V3_string_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * str);
  void APICALL (*X509V3_section_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, STACK_OF(CONF_VALUE) * section);
  void APICALL (*X509V3_set_ctx)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, X509 * issuer, X509 * subject, X509_REQ * req, X509_CRL * crl, int flags);
  int APICALL (*X509V3_add_value)(struct AmiSSLIFace *Self, const char * name, const char * value, STACK_OF(CONF_VALUE) ** extlist);
  int APICALL (*X509V3_add_value_uchar)(struct AmiSSLIFace *Self, const char * name, const unsigned char * value, STACK_OF(CONF_VALUE) ** extlist);
  int APICALL (*X509V3_add_value_bool)(struct AmiSSLIFace *Self, const char * name, int asn1_bool, STACK_OF(CONF_VALUE) ** extlist);
  int APICALL (*X509V3_add_value_int)(struct AmiSSLIFace *Self, const char * name, ASN1_INTEGER * aint, STACK_OF(CONF_VALUE) ** extlist);
  char * APICALL (*i2s_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_INTEGER * aint);
  ASN1_INTEGER * APICALL (*s2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, char * value);
  char * APICALL (*i2s_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_ENUMERATED * aint);
  char * APICALL (*i2s_ASN1_ENUMERATED_TABLE)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_ENUMERATED * aint);
  int APICALL (*X509V3_EXT_add)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * ext);
  int APICALL (*X509V3_EXT_add_list)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * extlist);
  int APICALL (*X509V3_EXT_add_alias)(struct AmiSSLIFace *Self, int nid_to, int nid_from);
  void APICALL (*X509V3_EXT_cleanup)(struct AmiSSLIFace *Self);
  X509V3_EXT_METHOD * APICALL (*X509V3_EXT_get)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
  X509V3_EXT_METHOD * APICALL (*X509V3_EXT_get_nid)(struct AmiSSLIFace *Self, int nid);
  int APICALL (*X509V3_add_standard_extensions)(struct AmiSSLIFace *Self);
  STACK_OF(CONF_VALUE) * APICALL (*X509V3_parse_list)(struct AmiSSLIFace *Self, const char * line);
  void * APICALL (*X509V3_EXT_d2i)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
  void * APICALL (*X509V3_get_d2i)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) * x, int nid, int * crit, int * idx);
  X509_EXTENSION * APICALL (*X509V3_EXT_i2d)(struct AmiSSLIFace *Self, int ext_nid, int crit, void * ext_struc);
  int APICALL (*X509V3_add1_i2d)(struct AmiSSLIFace *Self, STACK_OF(X509_EXTENSION) ** x, int nid, void * value, int crit, unsigned long flags);
  char * APICALL (*hex_to_string)(struct AmiSSLIFace *Self, unsigned char * buffer, long len);
  unsigned char * APICALL (*string_to_hex)(struct AmiSSLIFace *Self, char * str, long * len);
  int APICALL (*name_cmp)(struct AmiSSLIFace *Self, const char * name, const char * cmp);
  void APICALL (*X509V3_EXT_val_prn)(struct AmiSSLIFace *Self, BIO * out, STACK_OF(CONF_VALUE) * val, int indent, int ml);
  int APICALL (*X509V3_EXT_print)(struct AmiSSLIFace *Self, BIO * out, X509_EXTENSION * ext, unsigned long flag, int indent);
  int APICALL (*X509V3_extensions_print)(struct AmiSSLIFace *Self, BIO * out, char * title, STACK_OF(X509_EXTENSION) * exts, unsigned long flag, int indent);
  int APICALL (*X509_check_purpose)(struct AmiSSLIFace *Self, X509 * x, int id, int ca);
  int APICALL (*X509_supported_extension)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
  int APICALL (*X509_PURPOSE_set)(struct AmiSSLIFace *Self, int * p, int purpose);
  int APICALL (*X509_check_issued)(struct AmiSSLIFace *Self, X509 * issuer, X509 * subject);
  int APICALL (*X509_PURPOSE_get_count)(struct AmiSSLIFace *Self);
  X509_PURPOSE * APICALL (*X509_PURPOSE_get0)(struct AmiSSLIFace *Self, int idx);
  int APICALL (*X509_PURPOSE_get_by_sname)(struct AmiSSLIFace *Self, char * sname);
  int APICALL (*X509_PURPOSE_get_by_id)(struct AmiSSLIFace *Self, int id);
  int APICALL (*X509_PURPOSE_add)(struct AmiSSLIFace *Self, int id, int trust, int flags, int (*ck)(const X509_PURPOSE *, const X509 *, int), char * name, char * sname, void * arg);
  char * APICALL (*X509_PURPOSE_get0_name)(struct AmiSSLIFace *Self, X509_PURPOSE * xp);
  char * APICALL (*X509_PURPOSE_get0_sname)(struct AmiSSLIFace *Self, X509_PURPOSE * xp);
  int APICALL (*X509_PURPOSE_get_trust)(struct AmiSSLIFace *Self, X509_PURPOSE * xp);
  void APICALL (*X509_PURPOSE_cleanup)(struct AmiSSLIFace *Self);
  int APICALL (*X509_PURPOSE_get_id)(struct AmiSSLIFace *Self, X509_PURPOSE * a);
  STACK * APICALL (*X509_get1_email)(struct AmiSSLIFace *Self, X509 * x);
  STACK * APICALL (*X509_REQ_get1_email)(struct AmiSSLIFace *Self, X509_REQ * x);
  void APICALL (*X509_email_free)(struct AmiSSLIFace *Self, STACK * sk);
  void APICALL (*ERR_load_X509V3_strings)(struct AmiSSLIFace *Self);
  const char * APICALL (*AES_options)(struct AmiSSLIFace *Self);
  int APICALL (*AES_set_encrypt_key)(struct AmiSSLIFace *Self, const unsigned char * userKey, const int bits, AES_KEY * key);
  int APICALL (*AES_set_decrypt_key)(struct AmiSSLIFace *Self, const unsigned char * userKey, const int bits, AES_KEY * key);
  void APICALL (*AES_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key);
  void APICALL (*AES_decrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key);
  void APICALL (*AES_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const AES_KEY * key, const int enc);
  void APICALL (*AES_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char * ivec, const int enc);
  void APICALL (*AES_cfb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
  void APICALL (*AES_cfb1_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
  void APICALL (*AES_cfb8_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char * ivec, int * num, const int enc);
  void APICALL (*AES_cfbr_encrypt_block)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const int nbits, const AES_KEY * key, unsigned char * ivec, const int enc);
  void APICALL (*AES_ofb128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char * ivec, int * num);
  void APICALL (*AES_ctr128_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const unsigned long length, const AES_KEY * key, unsigned char ivec, unsigned char ecount_buf, unsigned int * num);
  void APICALL (*BF_set_key)(struct AmiSSLIFace *Self, BF_KEY * key, int len, const unsigned char * data);
  void APICALL (*BF_encrypt)(struct AmiSSLIFace *Self, BF_LONG * data, const BF_KEY * key);
  void APICALL (*BF_decrypt)(struct AmiSSLIFace *Self, BF_LONG * data, const BF_KEY * key);
  void APICALL (*BF_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, const BF_KEY * key, int enc);
  void APICALL (*BF_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int enc);
  void APICALL (*BF_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int * num, int enc);
  void APICALL (*BF_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, const BF_KEY * schedule, unsigned char * ivec, int * num);
  const char * APICALL (*BF_options)(struct AmiSSLIFace *Self);
  void APICALL (*CAST_set_key)(struct AmiSSLIFace *Self, CAST_KEY * key, int len, const unsigned char * data);
  void APICALL (*CAST_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, CAST_KEY * key, int enc);
  void APICALL (*CAST_encrypt)(struct AmiSSLIFace *Self, CAST_LONG * data, CAST_KEY * key);
  void APICALL (*CAST_decrypt)(struct AmiSSLIFace *Self, CAST_LONG * data, CAST_KEY * key);
  void APICALL (*CAST_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, CAST_KEY * ks, unsigned char * iv, int enc);
  void APICALL (*CAST_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, CAST_KEY * schedule, unsigned char * ivec, int * num, int enc);
  void APICALL (*CAST_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, CAST_KEY * schedule, unsigned char * ivec, int * num);
  int * APICALL (*_shadow_DES_check_key)(struct AmiSSLIFace *Self);
  int * APICALL (*_shadow_DES_rw_mode)(struct AmiSSLIFace *Self);
  const char * APICALL (*DES_options)(struct AmiSSLIFace *Self);
  void APICALL (*DES_ecb3_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, int enc);
  DES_LONG APICALL (*DES_cbc_cksum)(struct AmiSSLIFace *Self, const unsigned char * input, DES_cblock * output, long length, DES_key_schedule * schedule, const_DES_cblock * ivec);
  void APICALL (*DES_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
  void APICALL (*DES_ncbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
  void APICALL (*DES_xcbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, const_DES_cblock * inw, const_DES_cblock * outw, int enc);
  void APICALL (*DES_cfb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
  void APICALL (*DES_ecb_encrypt)(struct AmiSSLIFace *Self, const_DES_cblock * input, DES_cblock * output, DES_key_schedule * ks, int enc);
  void APICALL (*DES_encrypt1)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks, int enc);
  void APICALL (*DES_encrypt2)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks, int enc);
  void APICALL (*DES_encrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3);
  void APICALL (*DES_decrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3);
  void APICALL (*DES_ede3_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int enc);
  void APICALL (*DES_ede3_cbcm_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec1, DES_cblock * ivec2, int enc);
  void APICALL (*DES_ede3_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int * num, int enc);
  void APICALL (*DES_ede3_cfb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int enc);
  void APICALL (*DES_ede3_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * ks1, DES_key_schedule * ks2, DES_key_schedule * ks3, DES_cblock * ivec, int * num);
  void APICALL (*DES_xwhite_in2out)(struct AmiSSLIFace *Self, const_DES_cblock * DES_key, const_DES_cblock * in_white, DES_cblock * out_white);
  int APICALL (*DES_enc_read)(struct AmiSSLIFace *Self, int fd, void * buf, int len, DES_key_schedule * sched, DES_cblock * iv);
  int APICALL (*DES_enc_write)(struct AmiSSLIFace *Self, int fd, const void * buf, int len, DES_key_schedule * sched, DES_cblock * iv);
  char * APICALL (*DES_fcrypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt, char * ret);
  char * APICALL (*DES_crypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt);
  void APICALL (*DES_ofb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, int numbits, long length, DES_key_schedule * schedule, DES_cblock * ivec);
  void APICALL (*DES_pcbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * input, unsigned char * output, long length, DES_key_schedule * schedule, DES_cblock * ivec, int enc);
  DES_LONG APICALL (*DES_quad_cksum)(struct AmiSSLIFace *Self, const unsigned char * input, DES_cblock * output, long length, int out_count, DES_cblock * seed);
  int APICALL (*DES_random_key)(struct AmiSSLIFace *Self, DES_cblock * ret);
  void APICALL (*DES_set_odd_parity)(struct AmiSSLIFace *Self, DES_cblock * key);
  int APICALL (*DES_check_key_parity)(struct AmiSSLIFace *Self, const_DES_cblock * key);
  int APICALL (*DES_is_weak_key)(struct AmiSSLIFace *Self, const_DES_cblock * key);
  int APICALL (*DES_set_key)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
  int APICALL (*DES_key_sched)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
  int APICALL (*DES_set_key_checked)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
  void APICALL (*DES_set_key_unchecked)(struct AmiSSLIFace *Self, const_DES_cblock * key, DES_key_schedule * schedule);
  void APICALL (*DES_string_to_key)(struct AmiSSLIFace *Self, const char * str, DES_cblock * key);
  void APICALL (*DES_string_to_2keys)(struct AmiSSLIFace *Self, const char * str, DES_cblock * key1, DES_cblock * key2);
  void APICALL (*DES_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * schedule, DES_cblock * ivec, int * num, int enc);
  void APICALL (*DES_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, DES_key_schedule * schedule, DES_cblock * ivec, int * num);
  int APICALL (*DES_read_password)(struct AmiSSLIFace *Self, DES_cblock * key, const char * prompt, int verify);
  int APICALL (*DES_read_2passwords)(struct AmiSSLIFace *Self, DES_cblock * key1, DES_cblock * key2, const char * prompt, int verify);
  const char * APICALL (*_ossl_old_des_options)(struct AmiSSLIFace *Self);
  void APICALL (*_ossl_old_des_ecb3_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3, int enc);
  DES_LONG APICALL (*_ossl_old_des_cbc_cksum)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec);
  void APICALL (*_ossl_old_des_cbc_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int enc);
  void APICALL (*_ossl_old_des_ncbc_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int enc);
  void APICALL (*_ossl_old_des_xcbc_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, _ossl_old_des_cblock * inw, _ossl_old_des_cblock * outw, int enc);
  void APICALL (*_ossl_old_des_cfb_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, int numbits, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int enc);
  void APICALL (*_ossl_old_des_ecb_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, _ossl_old_des_key_schedule ks, int enc);
  void APICALL (*_ossl_old_des_encrypt)(struct AmiSSLIFace *Self, DES_LONG * data, _ossl_old_des_key_schedule ks, int enc);
  void APICALL (*_ossl_old_des_encrypt2)(struct AmiSSLIFace *Self, DES_LONG * data, _ossl_old_des_key_schedule ks, int enc);
  void APICALL (*_ossl_old_des_encrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3);
  void APICALL (*_ossl_old_des_decrypt3)(struct AmiSSLIFace *Self, DES_LONG * data, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3);
  void APICALL (*_ossl_old_des_ede3_cbc_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3, _ossl_old_des_cblock * ivec, int enc);
  void APICALL (*_ossl_old_des_ede3_cfb64_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, long length, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3, _ossl_old_des_cblock * ivec, int * num, int enc);
  void APICALL (*_ossl_old_des_ede3_ofb64_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, long length, _ossl_old_des_key_schedule ks1, _ossl_old_des_key_schedule ks2, _ossl_old_des_key_schedule ks3, _ossl_old_des_cblock * ivec, int * num);
  void APICALL (*_ossl_old_des_xwhite_in2out)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * des_key, _ossl_old_des_cblock * in_white, _ossl_old_des_cblock * out_white);
  int APICALL (*_ossl_old_des_enc_read)(struct AmiSSLIFace *Self, int fd, char * buf, int len, _ossl_old_des_key_schedule sched, _ossl_old_des_cblock * iv);
  int APICALL (*_ossl_old_des_enc_write)(struct AmiSSLIFace *Self, int fd, char * buf, int len, _ossl_old_des_key_schedule sched, _ossl_old_des_cblock * iv);
  char * APICALL (*_ossl_old_des_fcrypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt, char * ret);
  char * APICALL (*_ossl_old_des_crypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt);
  char * APICALL (*_ossl_old_crypt)(struct AmiSSLIFace *Self, const char * buf, const char * salt);
  void APICALL (*_ossl_old_des_ofb_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, int numbits, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec);
  void APICALL (*_ossl_old_des_pcbc_encrypt)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int enc);
  DES_LONG APICALL (*_ossl_old_des_quad_cksum)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * input, _ossl_old_des_cblock * output, long length, int out_count, _ossl_old_des_cblock * seed);
  void APICALL (*_ossl_old_des_random_seed)(struct AmiSSLIFace *Self, _ossl_old_des_cblock key);
  void APICALL (*_ossl_old_des_random_key)(struct AmiSSLIFace *Self, _ossl_old_des_cblock ret);
  int APICALL (*_ossl_old_des_read_password)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key, const char * prompt, int verify);
  int APICALL (*_ossl_old_des_read_2passwords)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key1, _ossl_old_des_cblock * key2, const char * prompt, int verify);
  void APICALL (*_ossl_old_des_set_odd_parity)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key);
  int APICALL (*_ossl_old_des_is_weak_key)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key);
  int APICALL (*_ossl_old_des_set_key)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key, _ossl_old_des_key_schedule schedule);
  int APICALL (*_ossl_old_des_key_sched)(struct AmiSSLIFace *Self, _ossl_old_des_cblock * key, _ossl_old_des_key_schedule schedule);
  void APICALL (*_ossl_old_des_string_to_key)(struct AmiSSLIFace *Self, char * str, _ossl_old_des_cblock * key);
  void APICALL (*_ossl_old_des_string_to_2keys)(struct AmiSSLIFace *Self, char * str, _ossl_old_des_cblock * key1, _ossl_old_des_cblock * key2);
  void APICALL (*_ossl_old_des_cfb64_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int * num, int enc);
  void APICALL (*_ossl_old_des_ofb64_encrypt)(struct AmiSSLIFace *Self, unsigned char * in, unsigned char * out, long length, _ossl_old_des_key_schedule schedule, _ossl_old_des_cblock * ivec, int * num);
  void APICALL (*_ossl_096_des_random_seed)(struct AmiSSLIFace *Self, des_cblock * key);
  const DH_METHOD * APICALL (*DH_OpenSSL)(struct AmiSSLIFace *Self);
  void APICALL (*DH_set_default_method)(struct AmiSSLIFace *Self, const DH_METHOD * meth);
  const DH_METHOD * APICALL (*DH_get_default_method)(struct AmiSSLIFace *Self);
  int APICALL (*DH_set_method)(struct AmiSSLIFace *Self, DH * dh, const DH_METHOD * meth);
  DH * APICALL (*DH_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
  DH * APICALL (*DH_new)(struct AmiSSLIFace *Self);
  void APICALL (*DH_free)(struct AmiSSLIFace *Self, DH * dh);
  int APICALL (*DH_up_ref)(struct AmiSSLIFace *Self, DH * dh);
  int APICALL (*DH_size)(struct AmiSSLIFace *Self, const DH * dh);
  int APICALL (*DH_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*DH_set_ex_data)(struct AmiSSLIFace *Self, DH * d, int idx, void * arg);
  void * APICALL (*DH_get_ex_data)(struct AmiSSLIFace *Self, DH * d, int idx);
  DH * APICALL (*DH_generate_parameters)(struct AmiSSLIFace *Self, int prime_len, int generator, void (*callback)(int, int, void *), void * cb_arg);
  int APICALL (*DH_check)(struct AmiSSLIFace *Self, const DH * dh, int * codes);
  int APICALL (*DH_generate_key)(struct AmiSSLIFace *Self, DH * dh);
  int APICALL (*DH_compute_key)(struct AmiSSLIFace *Self, unsigned char * key, const BIGNUM * pub_key, DH * dh);
  DH * APICALL (*d2i_DHparams)(struct AmiSSLIFace *Self, DH ** a, const unsigned char ** pp, long length);
  int APICALL (*i2d_DHparams)(struct AmiSSLIFace *Self, const DH * a, unsigned char ** pp);
  int APICALL (*DHparams_print)(struct AmiSSLIFace *Self, BIO * bp, const DH * x);
  void APICALL (*ERR_load_DH_strings)(struct AmiSSLIFace *Self);
  DSA_SIG * APICALL (*DSA_SIG_new)(struct AmiSSLIFace *Self);
  void APICALL (*DSA_SIG_free)(struct AmiSSLIFace *Self, DSA_SIG * a);
  int APICALL (*i2d_DSA_SIG)(struct AmiSSLIFace *Self, const DSA_SIG * a, unsigned char ** pp);
  DSA_SIG * APICALL (*d2i_DSA_SIG)(struct AmiSSLIFace *Self, DSA_SIG ** v, const unsigned char ** pp, long length);
  DSA_SIG * APICALL (*DSA_do_sign)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dlen, DSA * dsa);
  int APICALL (*DSA_do_verify)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dgst_len, DSA_SIG * sig, DSA * dsa);
  const DSA_METHOD * APICALL (*DSA_OpenSSL)(struct AmiSSLIFace *Self);
  void APICALL (*DSA_set_default_method)(struct AmiSSLIFace *Self, const DSA_METHOD * a);
  const DSA_METHOD * APICALL (*DSA_get_default_method)(struct AmiSSLIFace *Self);
  int APICALL (*DSA_set_method)(struct AmiSSLIFace *Self, DSA * dsa, const DSA_METHOD * a);
  DSA * APICALL (*DSA_new)(struct AmiSSLIFace *Self);
  DSA * APICALL (*DSA_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
  void APICALL (*DSA_free)(struct AmiSSLIFace *Self, DSA * r);
  int APICALL (*DSA_up_ref)(struct AmiSSLIFace *Self, DSA * r);
  int APICALL (*DSA_size)(struct AmiSSLIFace *Self, const DSA * a);
  int APICALL (*DSA_sign_setup)(struct AmiSSLIFace *Self, DSA * dsa, BN_CTX * ctx_in, BIGNUM ** kinvp, BIGNUM ** rp);
  int APICALL (*DSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dlen, unsigned char * sig, unsigned int * siglen, DSA * dsa);
  int APICALL (*DSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgst_len, const unsigned char * sigbuf, int siglen, DSA * dsa);
  int APICALL (*DSA_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*DSA_set_ex_data)(struct AmiSSLIFace *Self, DSA * d, int idx, void * arg);
  void * APICALL (*DSA_get_ex_data)(struct AmiSSLIFace *Self, DSA * d, int idx);
  DSA * APICALL (*d2i_DSAPublicKey)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
  DSA * APICALL (*d2i_DSAPrivateKey)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
  DSA * APICALL (*d2i_DSAparams)(struct AmiSSLIFace *Self, DSA ** a, const unsigned char ** pp, long length);
  DSA * APICALL (*DSA_generate_parameters)(struct AmiSSLIFace *Self, int bits, unsigned char * seed, int seed_len, int * counter_ret, unsigned long * h_ret, void (*callback)(int, int, void *), void * cb_arg);
  int APICALL (*DSA_generate_key)(struct AmiSSLIFace *Self, DSA * a);
  int APICALL (*i2d_DSAPublicKey)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
  int APICALL (*i2d_DSAPrivateKey)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
  int APICALL (*i2d_DSAparams)(struct AmiSSLIFace *Self, const DSA * a, unsigned char ** pp);
  int APICALL (*DSAparams_print)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x);
  int APICALL (*DSA_print)(struct AmiSSLIFace *Self, BIO * bp, const DSA * x, int off);
  DH * APICALL (*DSA_dup_DH)(struct AmiSSLIFace *Self, const DSA * r);
  void APICALL (*ERR_load_DSA_strings)(struct AmiSSLIFace *Self);
  const char * APICALL (*idea_options)(struct AmiSSLIFace *Self);
  void APICALL (*idea_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, IDEA_KEY_SCHEDULE * ks);
  void APICALL (*idea_set_encrypt_key)(struct AmiSSLIFace *Self, const unsigned char * key, IDEA_KEY_SCHEDULE * ks);
  void APICALL (*idea_set_decrypt_key)(struct AmiSSLIFace *Self, IDEA_KEY_SCHEDULE * ek, IDEA_KEY_SCHEDULE * dk);
  void APICALL (*idea_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int enc);
  void APICALL (*idea_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int * num, int enc);
  void APICALL (*idea_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, IDEA_KEY_SCHEDULE * ks, unsigned char * iv, int * num);
  void APICALL (*idea_encrypt)(struct AmiSSLIFace *Self, unsigned long * in, IDEA_KEY_SCHEDULE * ks);
  const char * APICALL (*MD2_options)(struct AmiSSLIFace *Self);
  int APICALL (*MD2_Init)(struct AmiSSLIFace *Self, MD2_CTX * c);
  int APICALL (*MD2_Update)(struct AmiSSLIFace *Self, MD2_CTX * c, const unsigned char * data, unsigned long len);
  int APICALL (*MD2_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD2_CTX * c);
  unsigned char * APICALL (*MD2)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  int APICALL (*MD4_Init)(struct AmiSSLIFace *Self, MD4_CTX * c);
  int APICALL (*MD4_Update)(struct AmiSSLIFace *Self, MD4_CTX * c, const void * data, unsigned long len);
  int APICALL (*MD4_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD4_CTX * c);
  unsigned char * APICALL (*MD4)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*MD4_Transform)(struct AmiSSLIFace *Self, MD4_CTX * c, const unsigned char * b);
  int APICALL (*MD5_Init)(struct AmiSSLIFace *Self, MD5_CTX * c);
  int APICALL (*MD5_Update)(struct AmiSSLIFace *Self, MD5_CTX * c, const void * data, unsigned long len);
  int APICALL (*MD5_Final)(struct AmiSSLIFace *Self, unsigned char * md, MD5_CTX * c);
  unsigned char * APICALL (*MD5)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*MD5_Transform)(struct AmiSSLIFace *Self, MD5_CTX * c, const unsigned char * b);
  int APICALL (*MDC2_Init)(struct AmiSSLIFace *Self, MDC2_CTX * c);
  int APICALL (*MDC2_Update)(struct AmiSSLIFace *Self, MDC2_CTX * c, const unsigned char * data, unsigned long len);
  int APICALL (*MDC2_Final)(struct AmiSSLIFace *Self, unsigned char * md, MDC2_CTX * c);
  unsigned char * APICALL (*MDC2)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*RC2_set_key)(struct AmiSSLIFace *Self, RC2_KEY * key, int len, const unsigned char * data, int bits);
  void APICALL (*RC2_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, RC2_KEY * key, int enc);
  void APICALL (*RC2_encrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC2_KEY * key);
  void APICALL (*RC2_decrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC2_KEY * key);
  void APICALL (*RC2_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * ks, unsigned char * iv, int enc);
  void APICALL (*RC2_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * schedule, unsigned char * ivec, int * num, int enc);
  void APICALL (*RC2_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC2_KEY * schedule, unsigned char * ivec, int * num);
  const char * APICALL (*RC4_options)(struct AmiSSLIFace *Self);
  void APICALL (*RC4_set_key)(struct AmiSSLIFace *Self, RC4_KEY * key, int len, const unsigned char * data);
  void APICALL (*RC4)(struct AmiSSLIFace *Self, RC4_KEY * key, unsigned long len, const unsigned char * indata, unsigned char * outdata);
  void APICALL (*RC5_32_set_key)(struct AmiSSLIFace *Self, RC5_32_KEY * key, int len, const unsigned char * data, int rounds);
  void APICALL (*RC5_32_ecb_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, RC5_32_KEY * key, int enc);
  void APICALL (*RC5_32_encrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC5_32_KEY * key);
  void APICALL (*RC5_32_decrypt)(struct AmiSSLIFace *Self, unsigned long * data, RC5_32_KEY * key);
  void APICALL (*RC5_32_cbc_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * ks, unsigned char * iv, int enc);
  void APICALL (*RC5_32_cfb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * schedule, unsigned char * ivec, int * num, int enc);
  void APICALL (*RC5_32_ofb64_encrypt)(struct AmiSSLIFace *Self, const unsigned char * in, unsigned char * out, long length, RC5_32_KEY * schedule, unsigned char * ivec, int * num);
  int APICALL (*RIPEMD160_Init)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c);
  int APICALL (*RIPEMD160_Update)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c, const void * data, unsigned long len);
  int APICALL (*RIPEMD160_Final)(struct AmiSSLIFace *Self, unsigned char * md, RIPEMD160_CTX * c);
  unsigned char * APICALL (*RIPEMD160)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*RIPEMD160_Transform)(struct AmiSSLIFace *Self, RIPEMD160_CTX * c, const unsigned char * b);
  RSA * APICALL (*RSA_new)(struct AmiSSLIFace *Self);
  RSA * APICALL (*RSA_new_method)(struct AmiSSLIFace *Self, ENGINE * engine);
  int APICALL (*RSA_size)(struct AmiSSLIFace *Self, const RSA * a);
  RSA * APICALL (*RSA_generate_key)(struct AmiSSLIFace *Self, int bits, unsigned long e, void (*callback)(int, int, void *), void * cb_arg);
  int APICALL (*RSA_check_key)(struct AmiSSLIFace *Self, const RSA * a);
  int APICALL (*RSA_public_encrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
  int APICALL (*RSA_private_encrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
  int APICALL (*RSA_public_decrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
  int APICALL (*RSA_private_decrypt)(struct AmiSSLIFace *Self, int flen, const unsigned char * from, unsigned char * to, RSA * rsa, int padding);
  void APICALL (*RSA_free)(struct AmiSSLIFace *Self, RSA * r);
  int APICALL (*RSA_up_ref)(struct AmiSSLIFace *Self, RSA * r);
  int APICALL (*RSA_flags)(struct AmiSSLIFace *Self, const RSA * r);
  void APICALL (*RSA_set_default_method)(struct AmiSSLIFace *Self, const RSA_METHOD * meth);
  const RSA_METHOD * APICALL (*RSA_get_default_method)(struct AmiSSLIFace *Self);
  const RSA_METHOD * APICALL (*RSA_get_method)(struct AmiSSLIFace *Self, const RSA * rsa);
  int APICALL (*RSA_set_method)(struct AmiSSLIFace *Self, RSA * rsa, const RSA_METHOD * meth);
  int APICALL (*RSA_memory_lock)(struct AmiSSLIFace *Self, RSA * r);
  const RSA_METHOD * APICALL (*RSA_PKCS1_SSLeay)(struct AmiSSLIFace *Self);
  const RSA_METHOD * APICALL (*RSA_null_method)(struct AmiSSLIFace *Self);
  RSA * APICALL (*d2i_RSAPublicKey)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** in, long len);
  int APICALL (*i2d_RSAPublicKey)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*RSAPublicKey_it)(struct AmiSSLIFace *Self);
  RSA * APICALL (*d2i_RSAPrivateKey)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** in, long len);
  int APICALL (*i2d_RSAPrivateKey)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*RSAPrivateKey_it)(struct AmiSSLIFace *Self);
  int APICALL (*RSA_print)(struct AmiSSLIFace *Self, BIO * bp, const RSA * r, int offset);
  int APICALL (*i2d_RSA_NET)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** pp, int (*cb)(), int sgckey);
  RSA * APICALL (*d2i_RSA_NET)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** pp, long length, int (*cb)(), int sgckey);
  int APICALL (*i2d_Netscape_RSA)(struct AmiSSLIFace *Self, const RSA * a, unsigned char ** pp, int (*cb)());
  RSA * APICALL (*d2i_Netscape_RSA)(struct AmiSSLIFace *Self, RSA ** a, const unsigned char ** pp, long length, int (*cb)());
  int APICALL (*RSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
  int APICALL (*RSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
  int APICALL (*RSA_sign_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
  int APICALL (*RSA_verify_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, const unsigned char * m, unsigned int m_length, unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
  int APICALL (*RSA_blinding_on)(struct AmiSSLIFace *Self, RSA * rsa, BN_CTX * ctx);
  void APICALL (*RSA_blinding_off)(struct AmiSSLIFace *Self, RSA * rsa);
  int APICALL (*RSA_padding_add_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
  int APICALL (*RSA_padding_check_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
  int APICALL (*RSA_padding_add_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
  int APICALL (*RSA_padding_check_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
  int APICALL (*RSA_padding_add_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, const unsigned char * p, int pl);
  int APICALL (*RSA_padding_check_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len, const unsigned char * p, int pl);
  int APICALL (*RSA_padding_add_SSLv23)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
  int APICALL (*RSA_padding_check_SSLv23)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
  int APICALL (*RSA_padding_add_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl);
  int APICALL (*RSA_padding_check_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, const unsigned char * f, int fl, int rsa_len);
  int APICALL (*RSA_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, void * argp, CRYPTO_EX_new * (*new_func)(), CRYPTO_EX_dup * (*dup_func)(), CRYPTO_EX_free * (*free_func)());
  int APICALL (*RSA_set_ex_data)(struct AmiSSLIFace *Self, RSA * r, int idx, void * arg);
  void * APICALL (*RSA_get_ex_data)(struct AmiSSLIFace *Self, const RSA * r, int idx);
  RSA * APICALL (*RSAPublicKey_dup)(struct AmiSSLIFace *Self, RSA * rsa);
  RSA * APICALL (*RSAPrivateKey_dup)(struct AmiSSLIFace *Self, RSA * rsa);
  void APICALL (*ERR_load_RSA_strings)(struct AmiSSLIFace *Self);
  int APICALL (*SHA_Init)(struct AmiSSLIFace *Self, SHA_CTX * c);
  int APICALL (*SHA_Update)(struct AmiSSLIFace *Self, SHA_CTX * c, const void * data, unsigned long len);
  int APICALL (*SHA_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA_CTX * c);
  unsigned char * APICALL (*SHA)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*SHA_Transform)(struct AmiSSLIFace *Self, SHA_CTX * c, const unsigned char * data);
  int APICALL (*SHA1_Init)(struct AmiSSLIFace *Self, SHA_CTX * c);
  int APICALL (*SHA1_Update)(struct AmiSSLIFace *Self, SHA_CTX * c, const void * data, unsigned long len);
  int APICALL (*SHA1_Final)(struct AmiSSLIFace *Self, unsigned char * md, SHA_CTX * c);
  unsigned char * APICALL (*SHA1)(struct AmiSSLIFace *Self, const unsigned char * d, unsigned long n, unsigned char * md);
  void APICALL (*SHA1_Transform)(struct AmiSSLIFace *Self, SHA_CTX * c, const unsigned char * data);
  int APICALL (*UI_read_string_lib)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis);
  int APICALL (*UI_write_string_lib)(struct AmiSSLIFace *Self, UI * ui, UI_STRING * uis);
  void APICALL (*HMAC_CTX_set_flags)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned long flags);
  int APICALL (*X509_check_ca)(struct AmiSSLIFace *Self, X509 * x);
  PROXY_POLICY * APICALL (*PROXY_POLICY_new)(struct AmiSSLIFace *Self);
  void APICALL (*PROXY_POLICY_free)(struct AmiSSLIFace *Self, PROXY_POLICY * a);
  PROXY_POLICY * APICALL (*d2i_PROXY_POLICY)(struct AmiSSLIFace *Self, PROXY_POLICY ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PROXY_POLICY)(struct AmiSSLIFace *Self, PROXY_POLICY * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PROXY_POLICY_it)(struct AmiSSLIFace *Self);
  PROXY_CERT_INFO_EXTENSION * APICALL (*PROXY_CERT_INFO_EXTENSION_new)(struct AmiSSLIFace *Self);
  void APICALL (*PROXY_CERT_INFO_EXTENSION_free)(struct AmiSSLIFace *Self, PROXY_CERT_INFO_EXTENSION * a);
  PROXY_CERT_INFO_EXTENSION * APICALL (*d2i_PROXY_CERT_INFO_EXTENSION)(struct AmiSSLIFace *Self, PROXY_CERT_INFO_EXTENSION ** a, unsigned char ** in, long len);
  int APICALL (*i2d_PROXY_CERT_INFO_EXTENSION)(struct AmiSSLIFace *Self, PROXY_CERT_INFO_EXTENSION * a, unsigned char ** out);
  const ASN1_ITEM * APICALL (*PROXY_CERT_INFO_EXTENSION_it)(struct AmiSSLIFace *Self);
};

#endif /* AMISSL_INTERFACE_DEF_H */
