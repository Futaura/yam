#ifndef XADMASTER_INTERFACE_DEF_H
#define XADMASTER_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 52.7.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#ifndef LIBRARIES_XADMASTER_H
#include <libraries/xadmaster.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct xadMasterIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct xadMasterIFace *Self);
	uint32 APICALL (*Release)(struct xadMasterIFace *Self);
	void APICALL (*Expunge)(struct xadMasterIFace *Self);
	struct Interface * APICALL (*Clone)(struct xadMasterIFace *Self);
	xadPTR APICALL (*xadAllocObjectA)(struct xadMasterIFace *Self, xadUINT32 type, const struct TagItem * tags);
	xadPTR APICALL (*xadAllocObject)(struct xadMasterIFace *Self, xadUINT32 type, ...);
	void APICALL (*xadFreeObjectA)(struct xadMasterIFace *Self, xadPTR object, const struct TagItem * tags);
	void APICALL (*xadFreeObject)(struct xadMasterIFace *Self, xadPTR object, ...);
	struct xadClient * APICALL (*xadRecogFileA)(struct xadMasterIFace *Self, xadSize size, const void * memory, const struct TagItem * tags);
	struct xadClient * APICALL (*xadRecogFile)(struct xadMasterIFace *Self, xadSize size, const void * memory, ...);
	xadERROR APICALL (*xadGetInfoA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadGetInfo)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	void APICALL (*xadFreeInfo)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai);
	xadERROR APICALL (*xadFileUnArcA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadFileUnArc)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadDiskUnArcA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadDiskUnArc)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	xadSTRPTR APICALL (*xadGetErrorText)(struct xadMasterIFace *Self, xadERROR errnum);
	struct xadClient * APICALL (*xadGetClientInfo)(struct xadMasterIFace *Self);
	xadERROR APICALL (*xadHookAccess)(struct xadMasterIFace *Self, xadUINT32 command, xadSignSize data, xadPTR buffer, struct xadArchiveInfo * ai);
	xadERROR APICALL (*xadConvertDatesA)(struct xadMasterIFace *Self, const struct TagItem * tags);
	xadERROR APICALL (*xadConvertDates)(struct xadMasterIFace *Self, ...);
	xadUINT16 APICALL (*xadCalcCRC16)(struct xadMasterIFace *Self, xadUINT16 id, xadUINT16 init, xadSize size, const xadUINT8 * buffer);
	xadUINT32 APICALL (*xadCalcCRC32)(struct xadMasterIFace *Self, xadUINT32 id, xadUINT32 init, xadSize size, const xadUINT8 * buffer);
	xadPTR APICALL (*xadAllocVec)(struct xadMasterIFace *Self, xadSize size, xadUINT32 flags);
	void APICALL (*xadCopyMem)(struct xadMasterIFace *Self, const void * src, xadPTR dest, xadSize size);
	xadERROR APICALL (*xadHookTagAccessA)(struct xadMasterIFace *Self, xadUINT32 command, xadSignSize data, xadPTR buffer, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadHookTagAccess)(struct xadMasterIFace *Self, xadUINT32 command, xadSignSize data, xadPTR buffer, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadConvertProtectionA)(struct xadMasterIFace *Self, const struct TagItem * tags);
	xadERROR APICALL (*xadConvertProtection)(struct xadMasterIFace *Self, ...);
	xadERROR APICALL (*xadGetDiskInfoA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadGetDiskInfo)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadDiskFileUnArcA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadDiskFileUnArc)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadGetHookAccessA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadGetHookAccess)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	void APICALL (*xadFreeHookAccessA)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, const struct TagItem * tags);
	void APICALL (*xadFreeHookAccess)(struct xadMasterIFace *Self, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadAddFileEntryA)(struct xadMasterIFace *Self, struct xadFileInfo * fi, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadAddFileEntry)(struct xadMasterIFace *Self, struct xadFileInfo * fi, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadAddDiskEntryA)(struct xadMasterIFace *Self, struct xadDiskInfo * di, struct xadArchiveInfo * ai, const struct TagItem * tags);
	xadERROR APICALL (*xadAddDiskEntry)(struct xadMasterIFace *Self, struct xadDiskInfo * di, struct xadArchiveInfo * ai, ...);
	xadERROR APICALL (*xadGetFilenameA)(struct xadMasterIFace *Self, xadUINT32 buffersize, xadSTRPTR buffer, const xadSTRING * path, const xadSTRING * name, const struct TagItem * tags);
	xadERROR APICALL (*xadGetFilename)(struct xadMasterIFace *Self, xadUINT32 buffersize, xadSTRPTR buffer, const xadSTRING * path, const xadSTRING * name, ...);
	xadSTRPTR APICALL (*xadConvertNameA)(struct xadMasterIFace *Self, xadUINT32 charset, const struct TagItem * tags);
	xadSTRPTR APICALL (*xadConvertName)(struct xadMasterIFace *Self, xadUINT32 charset, ...);
	xadSTRPTR APICALL (*xadGetDefaultNameA)(struct xadMasterIFace *Self, const struct TagItem * tags);
	xadSTRPTR APICALL (*xadGetDefaultName)(struct xadMasterIFace *Self, ...);
	const struct xadSystemInfo * APICALL (*xadGetSystemInfo)(struct xadMasterIFace *Self);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* XADMASTER_INTERFACE_DEF_H */
