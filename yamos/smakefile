#/***************************************************************************
#
# YAM - Yet Another Mailer
# Copyright (C) 1995-2000 by Marcel Beck <mbeck@yam.ch>
# Copyright (C) 2000-2002 by YAM Open Source Team
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# YAM Official Support Site :  http://www.yam.ch
# YAM OpenSource project    :  http://sourceforge.net/projects/yamos/
#
# $Id$
#
#***************************************************************************/

TARGET = YAM

# Programs
CC   = sc
CP   = copy
RM   = delete quiet
FC   = flexcat
FLEX = flex

# Directories
PREFIX     =
CLASSDIR   = $(PREFIX)classes
LOCALE     = $(PREFIX)locale
EXTSRC     = $(PREFIX)extrasrc
GENCLASSES = $(EXTSRC)/genclasses

# Compiler/Linker flags
CPU      = 68020
CDEFS    = `rx "say 'DEF __YAM_VERDATE=' || '22'x ||\
  right(date(S),2)*1'.'substr(date(S),5,2)*1'.'left(date(S),4) ||\
  '22'x || ' DEF __YAM_VERDAYS=' || date('I')"`
WARN     = WARN=ALL IGNORE=51,61,148,165,178,212,306
OPTFLAGS = STRIPDEBUG OPT OPTSIZE OPTCOMPLEXITY=5 OPTDEPTH=3 OPTINLOCAL\
  OPTGO OPTLOOP OPTPEEP #OPTSCHED
DEBUG    = NOSTRIPDEBUG NOOPT DEF=DEBUG DEBUG=LINE
CFLAGS   = RESOPT NOVER PARM=R CODE=FAR NOSTKCHK STRINGMERGE\
  IDLEN=60 ERRORREXX INCLUDEDIR=includes INCLUDEDIR=$(CLASSDIR)\
  DEF=__USE_SYSBASE CPU=$(CPU) $(WARN) $(OPTFLAGS) $(DEBUG)
LNKFLAGS = RESOPT NOVER LINK SMALLCODE SMALLDATA UTILLIB MATH=S\
  LIB lib:debug.lib NOICONS NOCHECKABORT $(OPTFLAGS) $(DEBUG)\
  "LINKOPT=MAP $(TARGET).map,fhx FWIDTH 32 PWIDTH 32 SWIDTH 32"

# CPU and DEBUG can be defined outside, defaults to above
# using e.g. "smake DEBUG= CPU=68060" produces optimized non-debug 68060 version
#
# OPTFLAGS are disabled by DEBUG normally!
#
# ignored warnings are:
#  51 C++ comment detected                                 -- we agreed to use them
#  61 undefined struct/union tag "tag-name"                -- in include files
# 148 use of incomplete struct/union/enum tag "name"       -- in include files
# 165 use of narrow type in prototype                      -- very unlikely portability problem
# 178 indirect call without indirection operator           -- only old-style support
# 212 item "name" already declared                         -- in include files
# 306 .. function inlined                                  -- disturbs

# Objects

CLASSES = $(CLASSDIR)/Classes.o $(CLASSDIR)/Recipientstring.o $(CLASSDIR)/Searchwindow.o\
  $(CLASSDIR)/Addrmatchlist.o $(CLASSDIR)/InfoBar.o $(CLASSDIR)/YAM.o

OBJS = YAM.o YAM_AB.o YAM_CL.o YAM_CO.o YAM_COg.o YAM_COs.o YAM_DI.o YAM_EA.o\
  YAM_ER.o YAM_FI.o YAM_FO.o YAM_global.o YAM_locale.o YAM_MA.o YAM_MAf.o\
  YAM_md5.o YAM_MI.o YAM_mail_lex.o YAM_RE.o YAM_rexx.o YAM_rexx_rxcl.o YAM_rexx_rxif.o\
  YAM_TR.o YAM_US.o YAM_UT.o YAM_WR.o $(CLASSES) all_sas.o Debug.o

#

default: ClassInfo $(TARGET)

# Default rule

.c.o:
  @echo "*e[32mCompiling $*.c*e[0m"
  @$(CC) $(CFLAGS) $<

#

.ct.catalog:
  @echo "*e[33mGenerating $*.catalog*e[0m"
  @$(FC) $(LOCALE)/YAM.cd $*.ct CATALOG $*.catalog

#

$(TARGET): $(OBJS)
  @echo "*e[32mLinking $**e[0m"
  @$(CC) $(LNKFLAGS) TO $@ WITH <<
  $(OBJS)
  <

#

clean: # leaves final YAM exe
  -$(RM) $(OBJS) YAM.lnk YAM.map YAM_locale.c YAM_locale.h
  -$(RM) $(CLASSDIR)/Classes.c $(CLASSDIR)/Classes.h $(CLASSDIR)/*_cl.h
  @execute <<
    cd $(EXTSRC)/genclasses
    smake -s clean
  <

#

cleanall: clean
  -$(RM) $(TARGET)

#

copy:
  $(CP) $(TARGET) YAM:

#

## AUTOGEN TOOLS ######################

GenClasses: $(GENCLASSES)/GenClasses

$(GENCLASSES)/GenClasses: $(GENCLASSES)/gc.c $(GENCLASSES)/gc.h\
  $(GENCLASSES)/lists.c $(GENCLASSES)/lists.h
  @echo "*e[33mMaking $@ tool...*e[0m"
  @execute <<
    cd $(EXTSRC)/genclasses
    smake -s
  <

ClassInfo: $(CLASSDIR)/Classes.h

$(CLASSDIR)/Classes.h: $(GENCLASSES)/GenClasses $(CLASSDIR)/Addrmatchlist.c $(CLASSDIR)/Searchwindow.c \
  $(CLASSDIR)/Recipientstring.c $(CLASSDIR)/InfoBar.c $(CLASSDIR)/YAM.c
  @echo "*e[33mGenerating Classinfo...*e[0m"
  @$(GENCLASSES)/GenClasses $(CLASSDIR) -b$(TARGET) -gpl -storm -iClassesExtra.h

Catalogs: $(LOCALE)/deutsch.catalog $(LOCALE)/bosanski.catalog $(LOCALE)/czech.catalog\
  $(LOCALE)/dansk.catalog $(LOCALE)/greek.catalog $(LOCALE)/italiano.catalog\
  $(LOCALE)/magyar.catalog $(LOCALE)/norsk.catalog $(LOCALE)/polski.catalog\
  $(LOCALE)/russian.catalog $(LOCALE)/srpski.catalog $(LOCALE)/suomi.catalog\
  $(LOCALE)/svenska.catalog

## MAIN DEPENDENCIES ##################

YAM.o: YAM.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h YAM_classes.h \
  YAM_config.h YAM_configFile.h YAM_debug.h YAM_find.h YAM_folderconfig.h \
  YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_AB.o: YAM_AB.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h YAM_global.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_CL.o: YAM_CL.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_CO.o: YAM_CO.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_configFile.h YAM_configGUI.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

YAM_COg.o: YAM_COg.c YAM.h YAM_classes.h YAM_config.h YAM_find.h \
  YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_mime.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h

YAM_COs.o: YAM_COs.c YAM.h YAM_config.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h YAM_locale.h YAM_mainFolder.h \
  YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h

YAM_DI.o: YAM_DI.c YAM.h YAM_classes.h YAM_error.h YAM_glossarydisplay.h \
  includes/SDI_hook.h YAM_locale.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_EA.o: YAM_EA.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

YAM_ER.o: YAM_ER.c YAM.h YAM_config.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

YAM_FI.o: YAM_FI.c YAM.h YAM_config.h YAM_configFile.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_read.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_FO.o: YAM_FO.c YAM.h YAM_classes.h YAM_debug.h YAM_error.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h

YAM_global.o: YAM_global.c YAM_global.h YAM_locale.h YAM_stringsizes.h
  @echo "*e[32mCompiling $*.c*e[0m"
  @$(CC) $(CFLAGS) $(CDEFS) YAM_global.c

YAM_MA.o: YAM_MA.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_MAf.o: YAM_MAf.c YAM.h YAM_config.h YAM_debug.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_md5.o: YAM_md5.c YAM_md5.h

YAM_MI.o: YAM_MI.c YAM_error.h YAM_locale.h YAM_mime.h YAM_stringsizes.h \
  YAM_utilities.h

YAM_mail_lex.o: YAM_mail_lex.c
YAM_mail_lex.c: YAM_mail_lex.l YAM_mail_lex.h
  @echo "*e[32mGenerating lexer $*.c*e[0m"
  @$(FLEX) -Cem -i -t YAM_mail_lex.l > $*.c

YAM_RE.o: YAM_RE.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h includes/SDI_hook.h YAM_global.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_mime.h YAM_read.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_rexx.o: YAM_rexx.c YAM_rexx.h YAM_rexx_rxcl.h YAM_rexx_rxif.h

YAM_rexx_rxcl.o: YAM_rexx_rxcl.c YAM_rexx_rxcl.h YAM_rexx_rxif.h

YAM_rexx_rxif.o: YAM_rexx_rxif.c YAM.h YAM_addressbook.h \
  YAM_addressbookEntry.h YAM_config.h YAM_find.h YAM_folderconfig.h \
  YAM_global.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_read.h \
  YAM_rexx_rxcl.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

YAM_TR.o: YAM_TR.c YAM.h YAM_addressbookEntry.h YAM_config.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_md5.h YAM_mime.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h

YAM_US.o: YAM_US.c YAM.h YAM_config.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

YAM_UT.o: YAM_UT.c YAM.h YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_mime.h YAM_read.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h \
  YAM_write.h

YAM_WR.o: YAM_WR.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_classes.h YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h YAM_glossarydisplay.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_mime.h YAM_read.h \
  YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h YAM_write.h

all_sas.o: all_sas.c $(EXTSRC)/NewReadArgs.c

YAM_locale.c: YAM_locale.h
YAM_locale.h: $(LOCALE)/YAM.cd C_h.sd C_c.sd
  @echo "*e[33mConverting Catalog with flexcat*e[0m"
  @$(FC) $(LOCALE)/YAM.cd YAM_locale.h=C_h.sd YAM_locale.c=C_c.sd

## CLASS DEPENDENCIES #################

$(CLASSDIR)/Addrmatchlist.o: $(CLASSDIR)/Addrmatchlist.c $(CLASSDIR)/Addrmatchlist_cl.h \
  YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(CLASSDIR)/Searchwindow.o: $(CLASSDIR)/Searchwindow.c $(CLASSDIR)/Searchwindow_cl.h YAM.h \
  YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(CLASSDIR)/Recipientstring.o: $(CLASSDIR)/Recipientstring.c $(CLASSDIR)/Recipientstring_cl.h \
  YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(CLASSDIR)/InfoBar.o: $(CLASSDIR)/InfoBar.c $(CLASSDIR)/InfoBar_cl.h \
  YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(CLASSDIR)/Classes.o: $(CLASSDIR)/Classes.c $(CLASSDIR)/Classes.h YAM.h YAM_addressbook.h \
  YAM_config.h YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(CLASSDIR)/Classes.c: # this is needed because it`s autogenerated in here.
  @echo NOLINE

$(CLASSDIR)/YAM.o: $(CLASSDIR)/YAM.c $(CLASSDIR)/YAM_cl.h YAM.h YAM_addressbook.h \
  YAM_config.h YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h
