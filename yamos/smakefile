#/***************************************************************************
#
# YAM - Yet Another Mailer
# Copyright (C) 1995-2000 by Marcel Beck <mbeck@yam.ch>
# Copyright (C) 2000-2004 by YAM Open Source Team
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# YAM Official Support Site :  http://www.yam.ch
# YAM OpenSource project    :  http://sourceforge.net/projects/yamos/
#
# $Id$
#
#***************************************************************************/

TARGET = YAM

# Programs
CC   = sc
CP   = copy
RM   = delete quiet
RMDIR= delete all quiet
MKDIR= makedir
FC   = flexcat
FLEX = flex

# Directories
PREFIX     =
CLASSDIR   = $(PREFIX)classes
LOCALE     = $(PREFIX)locale
EXTSRC     = $(PREFIX)extrasrc
GENCLASSES = $(EXTSRC)/genclasses
OBJDIR     = .obj_sas

# Compiler/Linker flags
CPU      = 68020
CDEFS    = `rx "say 'DEF __YAM_VERDATE=' || '22'x ||\
  right(date(S),2)*1'.'substr(date(S),5,2)*1'.'left(date(S),4) ||\
  '22'x || ' DEF __YAM_VERDAYS=' || date('I')"`
WARN     = WARN=ALL IGNORE=51,61,148,165,178,212,306
OPTFLAGS = STRIPDEBUG OPT OPTCOMPLEXITY=5 OPTDEPTH=3 OPTINLOCAL\
  OPTGO OPTLOOP OPTPEEP OPTSCHED OPTTIME #OPTSIZE
DEBUG    = NOSTRIPDEBUG NOOPT DEF=DEBUG DEBUG=LINE
CFLAGS   = RESOPT NOVER PARM=R CODE=FAR NOSTKCHK STRINGMERGE\
  IDLEN=60 ERRORREXX INCLUDEDIR=includes INCLUDEDIR=$(CLASSDIR)\
  DEF=__USE_SYSBASE CPU=$(CPU) $(WARN) $(OPTFLAGS) $(DEBUG)
LNKFLAGS = RESOPT NOVER LINK SMALLCODE SMALLDATA UTILLIB MATH=S\
  LIB lib:debug.lib NOICONS NOCHECKABORT $(OPTFLAGS) $(DEBUG)\
  "LINKOPT=MAP $(TARGET).map,fhx FWIDTH 32 PWIDTH 32 SWIDTH 32"

# Special flags
DEVFLAGS = DEF=DEVWARNING `rx "say 'DEF EXPDATE=' || date('I')+31"`

# CPU and DEBUG can be defined outside, defaults to above
# using e.g. "smake DEBUG= CPU=68060" produces optimized non-debug 68060 version
# using e.g. "smake DEBUG= DEVFLAGS=" produces 68020 optimized release version
#
# OPTFLAGS are disabled by DEBUG normally!
#
# ignored warnings are:
#  51 C++ comment detected                                 -- we agreed to use them
#  61 undefined struct/union tag "tag-name"                -- in include files
# 148 use of incomplete struct/union/enum tag "name"       -- in include files
# 165 use of narrow type in prototype                      -- very unlikely portability problem
# 178 indirect call without indirection operator           -- only old-style support
# 212 item "name" already declared                         -- in include files
# 306 .. function inlined                                  -- disturbs

# our few new rewritten classes
CLASSES	= \
	$(OBJDIR)/$(CLASSDIR)/Classes.o \
	$(OBJDIR)/$(CLASSDIR)/Recipientstring.o \
	$(OBJDIR)/$(CLASSDIR)/Searchwindow.o \
	$(OBJDIR)/$(CLASSDIR)/AddrBookEntryList.o \
	$(OBJDIR)/$(CLASSDIR)/AddrBookListtree.o \
	$(OBJDIR)/$(CLASSDIR)/Addrmatchlist.o \
	$(OBJDIR)/$(CLASSDIR)/Aboutwindow.o \
	$(OBJDIR)/$(CLASSDIR)/BodychunkImage.o \
	$(OBJDIR)/$(CLASSDIR)/ConfigPageList.o \
	$(OBJDIR)/$(CLASSDIR)/Splashwindow.o \
	$(OBJDIR)/$(CLASSDIR)/MailTextEdit.o \
	$(OBJDIR)/$(CLASSDIR)/MainFolderListtree.o \
	$(OBJDIR)/$(CLASSDIR)/MainMailList.o \
	$(OBJDIR)/$(CLASSDIR)/MainWindow.o \
	$(OBJDIR)/$(CLASSDIR)/InfoBar.o \
	$(OBJDIR)/$(CLASSDIR)/WriteAttachmentList.o \
	$(OBJDIR)/$(CLASSDIR)/YAM.o

# and the other object files
OBJS = \
  $(OBJDIR)/YAM.o \
  $(OBJDIR)/YAM_AB.o \
  $(OBJDIR)/YAM_CO.o \
  $(OBJDIR)/YAM_COg.o \
  $(OBJDIR)/YAM_COs.o \
  $(OBJDIR)/YAM_DI.o \
  $(OBJDIR)/YAM_EA.o \
  $(OBJDIR)/YAM_ER.o \
  $(OBJDIR)/YAM_FI.o \
  $(OBJDIR)/YAM_FO.o \
  $(OBJDIR)/YAM_global.o \
  $(OBJDIR)/YAM_locale.o \
  $(OBJDIR)/YAM_MA.o \
  $(OBJDIR)/YAM_MAf.o \
  $(OBJDIR)/YAM_md5.o \
  $(OBJDIR)/YAM_MI.o \
  $(OBJDIR)/YAM_mail_lex.o \
  $(OBJDIR)/YAM_RE.o \
  $(OBJDIR)/YAM_rexx.o \
  $(OBJDIR)/YAM_rexx_rxcl.o \
  $(OBJDIR)/YAM_rexx_rxif.o \
  $(OBJDIR)/YAM_TR.o \
  $(OBJDIR)/YAM_US.o \
  $(OBJDIR)/YAM_UT.o \
  $(OBJDIR)/YAM_WR.o \
  $(OBJDIR)/all_sas.o \
  $(OBJDIR)/Debug.o \
  $(CLASSES)

#

all: note $(OBJDIR) classinfo YAM_locale.c YAM_mail_lex.c $(TARGET)

# make the object directories
$(OBJDIR):
  @echo "*e[33mGenerating $@ directory*e[0m"
  @$(MKDIR) $(OBJDIR)
  @$(MKDIR) $(OBJDIR)/$(CLASSDIR)

# Default rule

.c.o:
  @echo "*e[32mCompiling $<*e[0m"
  @$(CC) $(CFLAGS) $< OBJNAME=$@

.ct.catalog:
  @echo "*e[33mGenerating $@*e[0m"
  @$(FC) $(LOCALE)/YAM.cd $< CATALOG $@

.l.c:
  @echo "*e[33mGenerating lexer $*.l*e[0m"
  @$(FLEX) -Cem -i -t $< > $@

#

$(TARGET): $(OBJS)
  @echo "*e[32mLinking *e[1m$@*e[0m"
  @$(CC) $(LNKFLAGS) TO $@ WITH <<
  $(OBJS)
  <

note:
  @echo "*e[33mNOTE: SAS/C compilation has been considered obsolete.*e[0m"
  @echo "*e[33m      So, if this compile breaks, don`t complain!*e[0m"

#

clean:
  -$(RM) $(TARGET) $(TARGET).debug $(TARGET).lnk $(TARGET).map $(OBJS)

cleanall: clean
  -$(RM) YAM_locale.* YAM_mail_lex.c $(CLASSDIR)/Classes.* $(CLASSDIR)/*_cl.h
  -$(RMDIR) $(OBJDIR)

distclean: cleanall
  @execute <<
    cd $(EXTSRC)/genclasses
    smake -s clean
  <

## AUTOGEN TOOLS ######################

GenClasses: $(GENCLASSES)/GenClasses

$(GENCLASSES)/GenClasses: $(GENCLASSES)/gc.c $(GENCLASSES)/gc.h\
  $(GENCLASSES)/lists.c $(GENCLASSES)/lists.h
  @echo "*e[33mMaking $@ tool...*e[0m"
  @execute <<
    cd $(EXTSRC)/genclasses
    smake -s
  <

classinfo: $(CLASSDIR)/Classes.h

$(CLASSDIR)/Classes.h: $(GENCLASSES)/GenClasses $(CLASSDIR)/Addrmatchlist.c $(CLASSDIR)/Searchwindow.c \
  $(CLASSDIR)/Recipientstring.c $(CLASSDIR)/InfoBar.c $(CLASSDIR)/YAM.c
  @echo "*e[33mGenerating classinfo...*e[0m"
  @$(GENCLASSES)/GenClasses $(CLASSDIR) -b$(TARGET) -gpl -storm -iClassesExtra.h

Catalogs: $(LOCALE)/deutsch.catalog $(LOCALE)/bosanski.catalog $(LOCALE)/czech.catalog\
  $(LOCALE)/dansk.catalog $(LOCALE)/greek.catalog $(LOCALE)/italiano.catalog\
  $(LOCALE)/magyar.catalog $(LOCALE)/norsk.catalog $(LOCALE)/polski.catalog\
  $(LOCALE)/russian.catalog $(LOCALE)/srpski.catalog $(LOCALE)/suomi.catalog\
  $(LOCALE)/svenska.catalog

## MAIN DEPENDENCIES ##################

$(OBJDIR)/YAM_global.o: YAM_global.c YAM_global.h YAM_locale.h YAM_stringsizes.h
  @echo "*e[32mCompiling $*.c*e[0m"
  @$(CC) $(CFLAGS) $(CDEFS) YAM_global.c OBJNAME=$@

YAM_locale.h: YAM_locale.c
YAM_locale.c: $(LOCALE)/YAM.cd C_h.sd C_c.sd
  @echo "*e[33mConverting Catalog with flexcat*e[0m"
  @$(FC) $(LOCALE)/YAM.cd YAM_locale.h=C_h.sd YAM_locale.c=C_c.sd

$(OBJDIR)/YAM_locale.o: YAM_locale.c YAM_locale.h

$(OBJDIR)/YAM.o: YAM.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_configFile.h YAM_debug.h YAM_find.h YAM_folderconfig.h \
  YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h
  @echo "*e[32mCompiling $*.c*e[0m"
  @$(CC) $(CFLAGS) $(DEVFLAGS) $< OBJNAME=$@

$(OBJDIR)/YAM_AB.o: YAM_AB.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_debug.h YAM_error.h YAM_find.h YAM_global.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_CO.o: YAM_CO.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_configFile.h YAM_configGUI.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_COg.o: YAM_COg.c YAM.h YAM_config.h YAM_find.h \
  YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_mime.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h

$(OBJDIR)/YAM_COs.o: YAM_COs.c YAM.h YAM_config.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h YAM_locale.h YAM_mainFolder.h \
  YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h

$(OBJDIR)/YAM_DI.o: YAM_DI.c YAM.h YAM_error.h YAM_glossarydisplay.h \
  includes/SDI_hook.h YAM_locale.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_EA.o: YAM_EA.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_debug.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_ER.o: YAM_ER.c YAM.h YAM_config.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_FI.o: YAM_FI.c YAM.h YAM_config.h YAM_configFile.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_read.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_FO.o: YAM_FO.c YAM.h YAM_debug.h YAM_error.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_MA.o: YAM_MA.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_MAf.o: YAM_MAf.c YAM.h YAM_config.h YAM_debug.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_read.h YAM_rexx.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_md5.o: YAM_md5.c YAM_md5.h

$(OBJDIR)/YAM_MI.o: YAM_MI.c YAM_error.h YAM_locale.h YAM_mime.h YAM_stringsizes.h \
  YAM_utilities.h

$(OBJDIR)/YAM_mail_lex.o: YAM_mail_lex.c
YAM_mail_lex.c: YAM_mail_lex.l YAM_mail_lex.h

$(OBJDIR)/YAM_RE.o: YAM_RE.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h includes/SDI_hook.h YAM_global.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_mime.h YAM_read.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_rexx.o: YAM_rexx.c YAM_rexx.h YAM_rexx_rxcl.h YAM_rexx_rxif.h

$(OBJDIR)/YAM_rexx_rxcl.o: YAM_rexx_rxcl.c YAM_rexx_rxcl.h YAM_rexx_rxif.h

$(OBJDIR)/YAM_rexx_rxif.o: YAM_rexx_rxif.c YAM.h YAM_addressbook.h \
  YAM_addressbookEntry.h YAM_config.h YAM_find.h YAM_folderconfig.h \
  YAM_global.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_read.h \
  YAM_rexx_rxcl.h YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h \
  YAM_userlist.h YAM_utilities.h YAM_write.h

$(OBJDIR)/YAM_TR.o: YAM_TR.c YAM.h YAM_addressbookEntry.h YAM_config.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_md5.h YAM_mime.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_US.o: YAM_US.c YAM.h YAM_config.h YAM_error.h YAM_find.h includes/SDI_hook.h \
  YAM_locale.h YAM_mainFolder.h YAM_rexx_rxif.h YAM_stringsizes.h \
  YAM_transfer.h YAM_userlist.h YAM_utilities.h

$(OBJDIR)/YAM_UT.o: YAM_UT.c YAM.h YAM_config.h YAM_debug.h YAM_error.h \
  YAM_find.h YAM_folderconfig.h YAM_global.h includes/SDI_hook.h YAM_locale.h \
  YAM_main.h YAM_mainFolder.h YAM_mime.h YAM_read.h YAM_rexx_rxif.h \
  YAM_stringsizes.h YAM_transfer.h YAM_userlist.h YAM_utilities.h \
  YAM_write.h

$(OBJDIR)/YAM_WR.o: YAM_WR.c YAM.h YAM_addressbook.h YAM_addressbookEntry.h \
  YAM_config.h YAM_debug.h YAM_error.h YAM_find.h \
  YAM_folderconfig.h YAM_global.h YAM_glossarydisplay.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_mime.h YAM_read.h \
  YAM_rexx_rxif.h YAM_stringsizes.h YAM_transfer.h YAM_userlist.h \
  YAM_utilities.h YAM_write.h

$(OBJDIR)/all_sas.o: all_sas.c $(EXTSRC)/NewReadArgs.c

$(OBJDIR)/Debug.o: Debug.c Debug.h

## CLASS DEPENDENCIES #################

$(OBJDIR)/$(CLASSDIR)/ConfigPageList.o: $(CLASSDIR)/ConfigPageList.c \
  $(CLASSDIR)/ConfigPageList_cl.h

$(OBJDIR)/$(CLASSDIR)/BodychunkImage.o: $(CLASSDIR)/BodychunkImage.c \
  $(CLASSDIR)/BodychunkImage_cl.h

$(OBJDIR)/$(CLASSDIR)/WriteAttachmentList.o: $(CLASSDIR)/WriteAttachmentList.c \
  $(CLASSDIR)/WriteAttachmentList_cl.h

$(OBJDIR)/$(CLASSDIR)/MainFolderListtree.o: $(CLASSDIR)/MainFolderListtree.c \
  $(CLASSDIR)/MainFolderListtree_cl.h

$(OBJDIR)/$(CLASSDIR)/MainMailList.o: $(CLASSDIR)/MainMailList.c \
  $(CLASSDIR)/MainMailList_cl.h

$(OBJDIR)/$(CLASSDIR)/AddrBookEntryList.o: $(CLASSDIR)/AddrBookEntryList.c \
  $(CLASSDIR)/AddrBookEntryList_cl.h

$(OBJDIR)/$(CLASSDIR)/AddrBookListtree.o: $(CLASSDIR)/AddrBookListtree.c \
  $(CLASSDIR)/AddrBookListtree_cl.h

$(OBJDIR)/$(CLASSDIR)/MainWindow.o: $(CLASSDIR)/MainWindow.c \
  $(CLASSDIR)/MainWindow_cl.h

$(OBJDIR)/$(CLASSDIR)/MailTextEdit.o: $(CLASSDIR)/MailTextEdit.c \
  $(CLASSDIR)/MailTextEdit_cl.h

$(OBJDIR)/$(CLASSDIR)/Splashwindow.o: $(CLASSDIR)/Splashwindow.c \
  $(CLASSDIR)/Splashwindow_cl.h

$(OBJDIR)/$(CLASSDIR)/Aboutwindow.o: $(CLASSDIR)/Aboutwindow.c \
  $(CLASSDIR)/Aboutwindow_cl.h

$(OBJDIR)/$(CLASSDIR)/Addrmatchlist.o: $(CLASSDIR)/Addrmatchlist.c \
  $(CLASSDIR)/Addrmatchlist_cl.h YAM.h YAM_addressbook.h YAM_config.h \
  YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h YAM_main.h \
  YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(OBJDIR)/$(CLASSDIR)/Searchwindow.o: $(CLASSDIR)/Searchwindow.c \
  $(CLASSDIR)/Searchwindow_cl.h YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h \
  YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_utilities.h YAM_write.h

$(OBJDIR)/$(CLASSDIR)/Recipientstring.o: $(CLASSDIR)/Recipientstring.c \
  $(CLASSDIR)/Recipientstring_cl.h YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h \
  YAM_folderconfig.h includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h \
  YAM_utilities.h YAM_write.h

$(OBJDIR)/$(CLASSDIR)/InfoBar.o: $(CLASSDIR)/InfoBar.c $(CLASSDIR)/InfoBar_cl.h \
  YAM.h YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h \
  includes/SDI_hook.h YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(OBJDIR)/$(CLASSDIR)/Classes.o: $(CLASSDIR)/Classes.c $(CLASSDIR)/Classes.h YAM.h \
  YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h

$(OBJDIR)/$(CLASSDIR)/YAM.o: $(CLASSDIR)/YAM.c $(CLASSDIR)/YAM_cl.h YAM.h \
  YAM_addressbook.h YAM_config.h YAM_debug.h YAM_folderconfig.h includes/SDI_hook.h \
  YAM_locale.h YAM_main.h YAM_mainFolder.h YAM_utilities.h YAM_write.h
