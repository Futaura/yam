#ifndef AMISSL_INTERFACE_DEF_H
#define AMISSL_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 50.10.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef AMISSL_AMISSL_H
#include <amissl/amissl.h>
#endif
#ifndef DOS_DOS_H
#include <dos/dos.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#ifndef STDLIB_H
#include <stdlib.h>
#endif

struct AmiSSLIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct AmiSSLIFace *Self);
	ULONG APICALL (*Release)(struct AmiSSLIFace *Self);
	void APICALL (*Expunge)(struct AmiSSLIFace *Self);
	struct Interface * APICALL (*Clone)(struct AmiSSLIFace *Self);
	long APICALL (*InitAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
	long APICALL (*InitAmiSSL)(struct AmiSSLIFace *Self, ...);
	long APICALL (*CleanupAmiSSLA)(struct AmiSSLIFace *Self, struct TagItem * tagList);
	long APICALL (*CleanupAmiSSL)(struct AmiSSLIFace *Self, ...);
	void * APICALL (*AmiSSLMalloc)(struct AmiSSLIFace *Self, long num);
	void * APICALL (*AmiSSLRealloc)(struct AmiSSLIFace *Self, void * block, long num);
	void APICALL (*AmiSSLFree)(struct AmiSSLIFace *Self, void * block);
	long APICALL (*EVP_BF_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_CAST_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_des_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_idea_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_MD2_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_MD5_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_MDC2_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_RC2_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_RC4_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_RC5_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_RIPEMD160_IsReal)(struct AmiSSLIFace *Self);
	long APICALL (*EVP_SHA_IsReal)(struct AmiSSLIFace *Self);
	ASN1_TYPE * APICALL (*ASN1_TYPE_new)(struct AmiSSLIFace *Self);
	void APICALL (*ASN1_TYPE_free)(struct AmiSSLIFace *Self, ASN1_TYPE * a);
	int APICALL (*i2d_ASN1_TYPE)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char ** pp);
	ASN1_TYPE * APICALL (*d2i_ASN1_TYPE)(struct AmiSSLIFace *Self, ASN1_TYPE ** a, unsigned char ** pp, long length);
	int APICALL (*ASN1_TYPE_get)(struct AmiSSLIFace *Self, ASN1_TYPE * a);
	void APICALL (*ASN1_TYPE_set)(struct AmiSSLIFace *Self, ASN1_TYPE * a, int type, void * value);
	ASN1_OBJECT * APICALL (*ASN1_OBJECT_new)(struct AmiSSLIFace *Self);
	void APICALL (*ASN1_OBJECT_free)(struct AmiSSLIFace *Self, ASN1_OBJECT * a);
	int APICALL (*i2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT * a, unsigned char ** pp);
	ASN1_OBJECT * APICALL (*d2i_ASN1_OBJECT)(struct AmiSSLIFace *Self, ASN1_OBJECT ** a, unsigned char ** pp, long length);
	ASN1_STRING * APICALL (*ASN1_STRING_new)(struct AmiSSLIFace *Self);
	void APICALL (*ASN1_STRING_free)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	ASN1_STRING * APICALL (*ASN1_STRING_dup)(struct AmiSSLIFace *Self, ASN1_STRING * a);
	ASN1_STRING * APICALL (*ASN1_STRING_type_new)(struct AmiSSLIFace *Self, int type);
	int APICALL (*ASN1_STRING_cmp)(struct AmiSSLIFace *Self, ASN1_STRING * a, ASN1_STRING * b);
	int APICALL (*ASN1_STRING_set)(struct AmiSSLIFace *Self, ASN1_STRING * str, const void * data, int len);
	int APICALL (*i2d_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, unsigned char ** pp);
	ASN1_BIT_STRING * APICALL (*d2i_ASN1_BIT_STRING)(struct AmiSSLIFace *Self, ASN1_BIT_STRING ** a, unsigned char ** pp, long length);
	int APICALL (*ASN1_BIT_STRING_set_bit)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, int n, int value);
	int APICALL (*ASN1_BIT_STRING_get_bit)(struct AmiSSLIFace *Self, ASN1_BIT_STRING * a, int n);
	int APICALL (*i2d_ASN1_BOOLEAN)(struct AmiSSLIFace *Self, int a, unsigned char ** pp);
	int APICALL (*d2i_ASN1_BOOLEAN)(struct AmiSSLIFace *Self, int * a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, unsigned char ** pp);
	ASN1_INTEGER * APICALL (*d2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, unsigned char ** pp, long length);
	ASN1_INTEGER * APICALL (*d2i_ASN1_UINTEGER)(struct AmiSSLIFace *Self, ASN1_INTEGER ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, unsigned char ** pp);
	ASN1_ENUMERATED * APICALL (*d2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, ASN1_ENUMERATED ** a, unsigned char ** pp, long length);
	int APICALL (*ASN1_UTCTIME_check)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a);
	ASN1_UTCTIME * APICALL (*ASN1_UTCTIME_set)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, time_t t);
	int APICALL (*ASN1_UTCTIME_set_string)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, char * str);
	int APICALL (*ASN1_GENERALIZEDTIME_check)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * a);
	ASN1_GENERALIZEDTIME * APICALL (*ASN1_GENERALIZEDTIME_set)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, time_t t);
	int APICALL (*ASN1_GENERALIZEDTIME_set_string)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * s, char * str);
	int APICALL (*i2d_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING * a, unsigned char ** pp);
	ASN1_OCTET_STRING * APICALL (*d2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, ASN1_OCTET_STRING ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING * a, unsigned char ** pp);
	ASN1_VISIBLESTRING * APICALL (*d2i_ASN1_VISIBLESTRING)(struct AmiSSLIFace *Self, ASN1_VISIBLESTRING ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, ASN1_UTF8STRING * a, unsigned char ** pp);
	ASN1_UTF8STRING * APICALL (*d2i_ASN1_UTF8STRING)(struct AmiSSLIFace *Self, ASN1_UTF8STRING ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, ASN1_BMPSTRING * a, unsigned char ** pp);
	ASN1_BMPSTRING * APICALL (*d2i_ASN1_BMPSTRING)(struct AmiSSLIFace *Self, ASN1_BMPSTRING ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** pp);
	ASN1_STRING * APICALL (*d2i_ASN1_PRINTABLE)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long l);
	ASN1_PRINTABLESTRING * APICALL (*d2i_ASN1_PRINTABLESTRING)(struct AmiSSLIFace *Self, ASN1_PRINTABLESTRING ** a, unsigned char ** pp, long l);
	int APICALL (*i2d_DIRECTORYSTRING)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** pp);
	ASN1_STRING * APICALL (*d2i_DIRECTORYSTRING)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_DISPLAYTEXT)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** pp);
	ASN1_STRING * APICALL (*d2i_DISPLAYTEXT)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length);
	ASN1_T61STRING * APICALL (*d2i_ASN1_T61STRING)(struct AmiSSLIFace *Self, ASN1_T61STRING ** a, unsigned char ** pp, long l);
	int APICALL (*i2d_ASN1_IA5STRING)(struct AmiSSLIFace *Self, ASN1_IA5STRING * a, unsigned char ** pp);
	ASN1_IA5STRING * APICALL (*d2i_ASN1_IA5STRING)(struct AmiSSLIFace *Self, ASN1_IA5STRING ** a, unsigned char ** pp, long l);
	int APICALL (*i2d_ASN1_UTCTIME)(struct AmiSSLIFace *Self, ASN1_UTCTIME * a, unsigned char ** pp);
	ASN1_UTCTIME * APICALL (*d2i_ASN1_UTCTIME)(struct AmiSSLIFace *Self, ASN1_UTCTIME ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME * a, unsigned char ** pp);
	ASN1_GENERALIZEDTIME * APICALL (*d2i_ASN1_GENERALIZEDTIME)(struct AmiSSLIFace *Self, ASN1_GENERALIZEDTIME ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_ASN1_TIME)(struct AmiSSLIFace *Self, ASN1_TIME * a, unsigned char ** pp);
	ASN1_TIME * APICALL (*d2i_ASN1_TIME)(struct AmiSSLIFace *Self, ASN1_TIME ** a, unsigned char ** pp, long length);
	ASN1_TIME * APICALL (*ASN1_TIME_set)(struct AmiSSLIFace *Self, ASN1_TIME * s, time_t t);
	int APICALL (*i2d_ASN1_SET)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp, int (*func)() , int ex_tag, int ex_class, int is_set);
	STACK * APICALL (*d2i_ASN1_SET)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length, char * (*func)() , void (*free_func)() , int ex_tag, int ex_class);
	int APICALL (*i2a_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, ASN1_INTEGER * a);
	int APICALL (*a2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIO * bp, ASN1_INTEGER * bs, char * buf, int size);
	int APICALL (*i2a_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, ASN1_ENUMERATED * a);
	int APICALL (*a2i_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIO * bp, ASN1_ENUMERATED * bs, char * buf, int size);
	int APICALL (*i2a_ASN1_OBJECT)(struct AmiSSLIFace *Self, BIO * bp, ASN1_OBJECT * a);
	int APICALL (*a2i_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * bs, char * buf, int size);
	int APICALL (*i2a_ASN1_STRING)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * a, int type);
	int APICALL (*i2t_ASN1_OBJECT)(struct AmiSSLIFace *Self, char * buf, int buf_len, ASN1_OBJECT * a);
	int APICALL (*a2d_ASN1_OBJECT)(struct AmiSSLIFace *Self, unsigned char * out, int olen, const char * buf, int num);
	ASN1_OBJECT * APICALL (*ASN1_OBJECT_create)(struct AmiSSLIFace *Self, int nid, unsigned char * data, int len, char * sn, char * ln);
	int APICALL (*ASN1_INTEGER_set)(struct AmiSSLIFace *Self, ASN1_INTEGER * a, long v);
	long APICALL (*ASN1_INTEGER_get)(struct AmiSSLIFace *Self, ASN1_INTEGER * a);
	ASN1_INTEGER * APICALL (*BN_to_ASN1_INTEGER)(struct AmiSSLIFace *Self, BIGNUM * bn, ASN1_INTEGER * ai);
	BIGNUM * APICALL (*ASN1_INTEGER_to_BN)(struct AmiSSLIFace *Self, ASN1_INTEGER * ai, BIGNUM * bn);
	int APICALL (*ASN1_ENUMERATED_set)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a, long v);
	long APICALL (*ASN1_ENUMERATED_get)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * a);
	ASN1_ENUMERATED * APICALL (*BN_to_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, BIGNUM * bn, ASN1_ENUMERATED * ai);
	BIGNUM * APICALL (*ASN1_ENUMERATED_to_BN)(struct AmiSSLIFace *Self, ASN1_ENUMERATED * ai, BIGNUM * bn);
	int APICALL (*ASN1_PRINTABLE_type)(struct AmiSSLIFace *Self, unsigned char * s, int max);
	int APICALL (*i2d_ASN1_bytes)(struct AmiSSLIFace *Self, ASN1_STRING * a, unsigned char ** pp, int tags, int xclass);
	ASN1_STRING * APICALL (*d2i_ASN1_bytes)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length, int Ptag, int Pclass);
	ASN1_STRING * APICALL (*d2i_ASN1_type_bytes)(struct AmiSSLIFace *Self, ASN1_STRING ** a, unsigned char ** pp, long length, int type);
	int APICALL (*asn1_Finish)(struct AmiSSLIFace *Self, ASN1_CTX * c);
	int APICALL (*ASN1_get_object)(struct AmiSSLIFace *Self, unsigned char ** pp, long * plength, int * ptag, int * pclass, long omax);
	int APICALL (*ASN1_check_infinite_end)(struct AmiSSLIFace *Self, unsigned char ** p, long len);
	void APICALL (*ASN1_put_object)(struct AmiSSLIFace *Self, unsigned char ** pp, int constructed, int length, int tags, int xclass);
	int APICALL (*ASN1_object_size)(struct AmiSSLIFace *Self, int constructed, int length, int tags);
	char * APICALL (*ASN1_dup)(struct AmiSSLIFace *Self, int (*i2d)() , char * (*d2i)() , char * x);
	char * APICALL (*ASN1_d2i_bio)(struct AmiSSLIFace *Self, char * (*xnew)() , char * (*d2i)() , BIO * bp, unsigned char ** x);
	int APICALL (*ASN1_i2d_bio)(struct AmiSSLIFace *Self, int (*i2d)() , BIO * out, unsigned char * x);
	int APICALL (*ASN1_UTCTIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_UTCTIME * a);
	int APICALL (*ASN1_GENERALIZEDTIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_GENERALIZEDTIME * a);
	int APICALL (*ASN1_TIME_print)(struct AmiSSLIFace *Self, BIO * fp, ASN1_TIME * a);
	int APICALL (*ASN1_STRING_print)(struct AmiSSLIFace *Self, BIO * bp, ASN1_STRING * v);
	int APICALL (*ASN1_parse)(struct AmiSSLIFace *Self, BIO * bp, unsigned char * pp, long len, int indent);
	int APICALL (*i2d_ASN1_HEADER)(struct AmiSSLIFace *Self, ASN1_HEADER * a, unsigned char ** pp);
	ASN1_HEADER * APICALL (*d2i_ASN1_HEADER)(struct AmiSSLIFace *Self, ASN1_HEADER ** a, unsigned char ** pp, long length);
	ASN1_HEADER * APICALL (*ASN1_HEADER_new)(struct AmiSSLIFace *Self);
	void APICALL (*ASN1_HEADER_free)(struct AmiSSLIFace *Self, ASN1_HEADER * a);
	int APICALL (*ASN1_UNIVERSALSTRING_to_string)(struct AmiSSLIFace *Self, ASN1_UNIVERSALSTRING * s);
	void APICALL (*ERR_load_ASN1_strings)(struct AmiSSLIFace *Self);
	ASN1_METHOD * APICALL (*X509_asn1_meth)(struct AmiSSLIFace *Self);
	ASN1_METHOD * APICALL (*RSAPrivateKey_asn1_meth)(struct AmiSSLIFace *Self);
	ASN1_METHOD * APICALL (*ASN1_IA5STRING_asn1_meth)(struct AmiSSLIFace *Self);
	ASN1_METHOD * APICALL (*ASN1_BIT_STRING_asn1_meth)(struct AmiSSLIFace *Self);
	int APICALL (*ASN1_TYPE_set_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char * data, int len);
	int APICALL (*ASN1_TYPE_get_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, unsigned char * data, int max_len);
	int APICALL (*ASN1_TYPE_set_int_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, long num, unsigned char * data, int len);
	int APICALL (*ASN1_TYPE_get_int_octetstring)(struct AmiSSLIFace *Self, ASN1_TYPE * a, long * num, unsigned char * data, int max_len);
	STACK * APICALL (*ASN1_seq_unpack)(struct AmiSSLIFace *Self, unsigned char * buf, int len, char * (*d2i)() , void (*free_func)() );
	unsigned char * APICALL (*ASN1_seq_pack)(struct AmiSSLIFace *Self, STACK * safes, int (*i2d)() , unsigned char ** buf, int * len);
	void * APICALL (*ASN1_unpack_string)(struct AmiSSLIFace *Self, ASN1_STRING * oct, char * (*d2i)() );
	ASN1_STRING * APICALL (*ASN1_pack_string)(struct AmiSSLIFace *Self, void * obj, int (*i2d)() , ASN1_OCTET_STRING ** oct);
	int APICALL (*asn1_GetSequence)(struct AmiSSLIFace *Self, ASN1_CTX * c, long * length);
	void APICALL (*asn1_add_error)(struct AmiSSLIFace *Self, unsigned char * address, int offset);
	int APICALL (*BIO_set_ex_data)(struct AmiSSLIFace *Self, BIO * bio, int idx, char * data);
	char * APICALL (*BIO_get_ex_data)(struct AmiSSLIFace *Self, BIO * bio, int idx);
	int APICALL (*BIO_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	BIO_METHOD * APICALL (*BIO_s_file)(struct AmiSSLIFace *Self);
	BIO * APICALL (*BIO_new_file)(struct AmiSSLIFace *Self, const char * filename, const char * mode);
	BIO * APICALL (*BIO_new_fp_amiga)(struct AmiSSLIFace *Self, BPTR stream, int close_flag);
	BIO * APICALL (*BIO_new)(struct AmiSSLIFace *Self, BIO_METHOD * type);
	int APICALL (*BIO_set)(struct AmiSSLIFace *Self, BIO * a, BIO_METHOD * type);
	int APICALL (*BIO_free)(struct AmiSSLIFace *Self, BIO * a);
	int APICALL (*BIO_read)(struct AmiSSLIFace *Self, BIO * b, void * data, int len);
	int APICALL (*BIO_gets)(struct AmiSSLIFace *Self, BIO * bp, char * buf, int size);
	int APICALL (*BIO_write)(struct AmiSSLIFace *Self, BIO * b, const char * data, int len);
	int APICALL (*BIO_puts)(struct AmiSSLIFace *Self, BIO * bp, const char * buf);
	long APICALL (*BIO_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, void * parg);
	char * APICALL (*BIO_ptr_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg);
	long APICALL (*BIO_int_ctrl)(struct AmiSSLIFace *Self, BIO * bp, int cmd, long larg, int iarg);
	BIO * APICALL (*BIO_push)(struct AmiSSLIFace *Self, BIO * b, BIO * append);
	BIO * APICALL (*BIO_pop)(struct AmiSSLIFace *Self, BIO * b);
	void APICALL (*BIO_free_all)(struct AmiSSLIFace *Self, BIO * a);
	BIO * APICALL (*BIO_find_type)(struct AmiSSLIFace *Self, BIO * b, int bio_type);
	BIO * APICALL (*BIO_get_retry_BIO)(struct AmiSSLIFace *Self, BIO * bio, int * reason);
	int APICALL (*BIO_get_retry_reason)(struct AmiSSLIFace *Self, BIO * bio);
	BIO * APICALL (*BIO_dup_chain)(struct AmiSSLIFace *Self, BIO * in);
	long APICALL (*BIO_debug_callback)(struct AmiSSLIFace *Self, BIO * bio, int cmd, const char * argp, int argi, long argl, long ret);
	BIO_METHOD * APICALL (*BIO_s_mem)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_socket)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_connect)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_accept)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_fd)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_log)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_s_null)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_null)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_buffer)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_nbio_test)(struct AmiSSLIFace *Self);
	int APICALL (*BIO_sock_should_retry)(struct AmiSSLIFace *Self, int i);
	int APICALL (*BIO_sock_non_fatal_error)(struct AmiSSLIFace *Self, int error);
	int APICALL (*BIO_fd_should_retry)(struct AmiSSLIFace *Self, int i);
	int APICALL (*BIO_fd_non_fatal_error)(struct AmiSSLIFace *Self, int error);
	int APICALL (*BIO_dump)(struct AmiSSLIFace *Self, BIO * b, const char * bytes, int len);
	struct hostent * APICALL (*BIO_gethostbyname)(struct AmiSSLIFace *Self, const char * name);
	int APICALL (*BIO_sock_error)(struct AmiSSLIFace *Self, int sock);
	int APICALL (*BIO_socket_ioctl)(struct AmiSSLIFace *Self, int fd, long type, unsigned long * arg);
	int APICALL (*BIO_socket_nbio)(struct AmiSSLIFace *Self, int fd, int mode);
	int APICALL (*BIO_get_port)(struct AmiSSLIFace *Self, const char * str, unsigned short * port_ptr);
	int APICALL (*BIO_get_host_ip)(struct AmiSSLIFace *Self, const char * str, unsigned char * ip);
	int APICALL (*BIO_get_accept_socket)(struct AmiSSLIFace *Self, char * host_port, int mode);
	int APICALL (*BIO_accept)(struct AmiSSLIFace *Self, int sock, char ** ip_port);
	int APICALL (*BIO_sock_init)(struct AmiSSLIFace *Self);
	void APICALL (*BIO_sock_cleanup)(struct AmiSSLIFace *Self);
	int APICALL (*BIO_set_tcp_ndelay)(struct AmiSSLIFace *Self, int sock, int turn_on);
	void APICALL (*ERR_load_BIO_strings)(struct AmiSSLIFace *Self);
	BIO * APICALL (*BIO_new_socket)(struct AmiSSLIFace *Self, int sock, int close_flag);
	BIO * APICALL (*BIO_new_fd)(struct AmiSSLIFace *Self, int fd, int close_flag);
	BIO * APICALL (*BIO_new_connect)(struct AmiSSLIFace *Self, char * host_port);
	BIO * APICALL (*BIO_new_accept)(struct AmiSSLIFace *Self, char * host_port);
	void APICALL (*BIO_copy_next_retry)(struct AmiSSLIFace *Self, BIO * b);
	long APICALL (*BIO_ghbn_ctrl)(struct AmiSSLIFace *Self, int cmd, int iarg, char * parg);
	int APICALL (*BIO_printfA)(struct AmiSSLIFace *Self, BIO * bio, void * args);
	int APICALL (*BIO_printf)(struct AmiSSLIFace *Self, BIO * bio, ...);
	BIGNUM * APICALL (*BN_value_one)(struct AmiSSLIFace *Self);
	char * APICALL (*BN_options)(struct AmiSSLIFace *Self);
	BN_CTX * APICALL (*BN_CTX_new)(struct AmiSSLIFace *Self);
	void APICALL (*BN_CTX_init)(struct AmiSSLIFace *Self, BN_CTX * c);
	void APICALL (*BN_CTX_free)(struct AmiSSLIFace *Self, BN_CTX * c);
	int APICALL (*BN_rand)(struct AmiSSLIFace *Self, BIGNUM * rnd, int bits, int top, int bottom);
	int APICALL (*BN_num_bits)(struct AmiSSLIFace *Self, const BIGNUM * a);
	int APICALL (*BN_num_bits_word)(struct AmiSSLIFace *Self, BN_ULONG a);
	BIGNUM * APICALL (*BN_new)(struct AmiSSLIFace *Self);
	void APICALL (*BN_init)(struct AmiSSLIFace *Self, BIGNUM * a);
	void APICALL (*BN_clear_free)(struct AmiSSLIFace *Self, BIGNUM * a);
	BIGNUM * APICALL (*BN_copy)(struct AmiSSLIFace *Self, BIGNUM * a, const BIGNUM * b);
	BIGNUM * APICALL (*BN_bin2bn)(struct AmiSSLIFace *Self, const unsigned char * s, int len, BIGNUM * ret);
	int APICALL (*BN_bn2bin)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
	BIGNUM * APICALL (*BN_mpi2bn)(struct AmiSSLIFace *Self, unsigned char * s, int len, BIGNUM * ret);
	int APICALL (*BN_bn2mpi)(struct AmiSSLIFace *Self, const BIGNUM * a, unsigned char * to);
	int APICALL (*BN_sub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	int APICALL (*BN_usub)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	int APICALL (*BN_uadd)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * b);
	int APICALL (*BN_add)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BIGNUM * b);
	int APICALL (*BN_mod)(struct AmiSSLIFace *Self, BIGNUM * rem, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
	int APICALL (*BN_div)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, const BIGNUM * m, const BIGNUM * d, BN_CTX * ctx);
	int APICALL (*BN_mul)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BIGNUM * b, BN_CTX * ctx);
	int APICALL (*BN_sqr)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BN_CTX * ctx);
	BN_ULONG APICALL (*BN_mod_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	BN_ULONG APICALL (*BN_div_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	int APICALL (*BN_mul_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	int APICALL (*BN_add_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	int APICALL (*BN_sub_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	int APICALL (*BN_set_word)(struct AmiSSLIFace *Self, BIGNUM * a, BN_ULONG w);
	BN_ULONG APICALL (*BN_get_word)(struct AmiSSLIFace *Self, BIGNUM * a);
	int APICALL (*BN_cmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
	void APICALL (*BN_free)(struct AmiSSLIFace *Self, BIGNUM * a);
	int APICALL (*BN_is_bit_set)(struct AmiSSLIFace *Self, const BIGNUM * a, int n);
	int APICALL (*BN_lshift)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, int n);
	int APICALL (*BN_lshift1)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a);
	int APICALL (*BN_exp)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BIGNUM * p, BN_CTX * ctx);
	int APICALL (*BN_mod_exp)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
	int APICALL (*BN_mod_exp_mont)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
	int APICALL (*BN_mod_exp2_mont)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a1, BIGNUM * p1, BIGNUM * a2, BIGNUM * p2, BIGNUM * m, BN_CTX * ctx, BN_MONT_CTX * m_ctx);
	int APICALL (*BN_mod_exp_simple)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BIGNUM * p, BIGNUM * m, BN_CTX * ctx);
	int APICALL (*BN_mask_bits)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	int APICALL (*BN_mod_mul)(struct AmiSSLIFace *Self, BIGNUM * ret, BIGNUM * a, BIGNUM * b, const BIGNUM * m, BN_CTX * ctx);
	int APICALL (*BN_print)(struct AmiSSLIFace *Self, BIO * fp, const BIGNUM * a);
	int APICALL (*BN_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * m, int len, BN_CTX * ctx);
	int APICALL (*BN_rshift)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, int n);
	int APICALL (*BN_rshift1)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a);
	void APICALL (*BN_clear)(struct AmiSSLIFace *Self, BIGNUM * a);
	BIGNUM * APICALL (*bn_expand2)(struct AmiSSLIFace *Self, BIGNUM * b, int bits);
	BIGNUM * APICALL (*BN_dup)(struct AmiSSLIFace *Self, const BIGNUM * a);
	int APICALL (*BN_ucmp)(struct AmiSSLIFace *Self, const BIGNUM * a, const BIGNUM * b);
	int APICALL (*BN_set_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	int APICALL (*BN_clear_bit)(struct AmiSSLIFace *Self, BIGNUM * a, int n);
	char * APICALL (*BN_bn2hex)(struct AmiSSLIFace *Self, const BIGNUM * a);
	char * APICALL (*BN_bn2dec)(struct AmiSSLIFace *Self, const BIGNUM * a);
	int APICALL (*BN_hex2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
	int APICALL (*BN_dec2bn)(struct AmiSSLIFace *Self, BIGNUM ** a, const char * str);
	int APICALL (*BN_gcd)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * in_a, BIGNUM * in_b, BN_CTX * ctx);
	BIGNUM * APICALL (*BN_mod_inverse)(struct AmiSSLIFace *Self, BIGNUM * ret, BIGNUM * a, const BIGNUM * n, BN_CTX * ctx);
	BIGNUM * APICALL (*BN_generate_prime)(struct AmiSSLIFace *Self, BIGNUM * ret, int bits, int strong, BIGNUM * add, BIGNUM * rem, void (*callback)(int , int , void * ) , void * cb_arg);
	int APICALL (*BN_is_prime)(struct AmiSSLIFace *Self, BIGNUM * p, int nchecks, void (*callback)(int , int , void * ) , BN_CTX * ctx, void * cb_arg);
	void APICALL (*ERR_load_BN_strings)(struct AmiSSLIFace *Self);
	BN_ULONG APICALL (*bn_mul_add_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, BN_ULONG * ap, int num, BN_ULONG w);
	BN_ULONG APICALL (*bn_mul_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, BN_ULONG * ap, int num, BN_ULONG w);
	void APICALL (*bn_sqr_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, BN_ULONG * ap, int num);
	BN_ULONG APICALL (*bn_div_words)(struct AmiSSLIFace *Self, BN_ULONG h, BN_ULONG l, BN_ULONG d);
	BN_ULONG APICALL (*bn_add_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, BN_ULONG * ap, BN_ULONG * bp, int num);
	BN_ULONG APICALL (*bn_sub_words)(struct AmiSSLIFace *Self, BN_ULONG * rp, BN_ULONG * ap, BN_ULONG * bp, int num);
	BN_MONT_CTX * APICALL (*BN_MONT_CTX_new)(struct AmiSSLIFace *Self);
	void APICALL (*BN_MONT_CTX_init)(struct AmiSSLIFace *Self, BN_MONT_CTX * ctx);
	int APICALL (*BN_mod_mul_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BIGNUM * b, BN_MONT_CTX * mont, BN_CTX * ctx);
	int APICALL (*BN_from_montgomery)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * a, BN_MONT_CTX * mont, BN_CTX * ctx);
	void APICALL (*BN_MONT_CTX_free)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont);
	int APICALL (*BN_MONT_CTX_set)(struct AmiSSLIFace *Self, BN_MONT_CTX * mont, const BIGNUM * modulus, BN_CTX * ctx);
	BN_MONT_CTX * APICALL (*BN_MONT_CTX_copy)(struct AmiSSLIFace *Self, BN_MONT_CTX * to, BN_MONT_CTX * from);
	BN_BLINDING * APICALL (*BN_BLINDING_new)(struct AmiSSLIFace *Self, BIGNUM * A, BIGNUM * Ai, BIGNUM * mod);
	void APICALL (*BN_BLINDING_free)(struct AmiSSLIFace *Self, BN_BLINDING * b);
	int APICALL (*BN_BLINDING_update)(struct AmiSSLIFace *Self, BN_BLINDING * b, BN_CTX * ctx);
	int APICALL (*BN_BLINDING_convert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * r, BN_CTX * ctx);
	int APICALL (*BN_BLINDING_invert)(struct AmiSSLIFace *Self, BIGNUM * n, BN_BLINDING * b, BN_CTX * ctx);
	void APICALL (*BN_set_params)(struct AmiSSLIFace *Self, int mul, int high, int low, int mont);
	int APICALL (*BN_get_params)(struct AmiSSLIFace *Self, int which);
	void APICALL (*BN_RECP_CTX_init)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp);
	BN_RECP_CTX * APICALL (*BN_RECP_CTX_new)(struct AmiSSLIFace *Self);
	void APICALL (*BN_RECP_CTX_free)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp);
	int APICALL (*BN_RECP_CTX_set)(struct AmiSSLIFace *Self, BN_RECP_CTX * recp, const BIGNUM * rdiv, BN_CTX * ctx);
	int APICALL (*BN_mod_mul_reciprocal)(struct AmiSSLIFace *Self, BIGNUM * r, BIGNUM * x, BIGNUM * y, BN_RECP_CTX * recp, BN_CTX * ctx);
	int APICALL (*BN_mod_exp_recp)(struct AmiSSLIFace *Self, BIGNUM * r, const BIGNUM * a, const BIGNUM * p, const BIGNUM * m, BN_CTX * ctx);
	int APICALL (*BN_div_recp)(struct AmiSSLIFace *Self, BIGNUM * dv, BIGNUM * rem, BIGNUM * m, BN_RECP_CTX * recp, BN_CTX * ctx);
	BUF_MEM * APICALL (*BUF_MEM_new)(struct AmiSSLIFace *Self);
	void APICALL (*BUF_MEM_free)(struct AmiSSLIFace *Self, BUF_MEM * a);
	int APICALL (*BUF_MEM_grow)(struct AmiSSLIFace *Self, BUF_MEM * str, int len);
	char * APICALL (*BUF_strdup)(struct AmiSSLIFace *Self, const char * str);
	void APICALL (*ERR_load_BUF_strings)(struct AmiSSLIFace *Self);
	COMP_CTX * APICALL (*COMP_CTX_new)(struct AmiSSLIFace *Self, COMP_METHOD * meth);
	void APICALL (*COMP_CTX_free)(struct AmiSSLIFace *Self, COMP_CTX * ctx);
	int APICALL (*COMP_compress_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
	int APICALL (*COMP_expand_block)(struct AmiSSLIFace *Self, COMP_CTX * ctx, unsigned char * out, int olen, unsigned char * in, int ilen);
	COMP_METHOD * APICALL (*COMP_rle)(struct AmiSSLIFace *Self);
	LHASH * APICALL (*CONF_load)(struct AmiSSLIFace *Self, LHASH * conf, const char * file, long * eline);
	STACK * APICALL (*CONF_get_section)(struct AmiSSLIFace *Self, LHASH * conf, char * section);
	char * APICALL (*CONF_get_string)(struct AmiSSLIFace *Self, LHASH * conf, char * group, char * name);
	long APICALL (*CONF_get_number)(struct AmiSSLIFace *Self, LHASH * conf, char * group, char * name);
	void APICALL (*CONF_free)(struct AmiSSLIFace *Self, LHASH * conf);
	void APICALL (*ERR_load_CONF_strings)(struct AmiSSLIFace *Self);
	const char * APICALL (*SSLeay_version)(struct AmiSSLIFace *Self, int type);
	unsigned long APICALL (*SSLeay)(struct AmiSSLIFace *Self);
	int APICALL (*CRYPTO_get_ex_new_index)(struct AmiSSLIFace *Self, int idx, STACK ** sk, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*CRYPTO_set_ex_data)(struct AmiSSLIFace *Self, CRYPTO_EX_DATA * ad, int idx, char * val);
	char * APICALL (*CRYPTO_get_ex_data)(struct AmiSSLIFace *Self, CRYPTO_EX_DATA * ad, int idx);
	int APICALL (*CRYPTO_dup_ex_data)(struct AmiSSLIFace *Self, STACK * meth, CRYPTO_EX_DATA * from, CRYPTO_EX_DATA * to);
	void APICALL (*CRYPTO_free_ex_data)(struct AmiSSLIFace *Self, STACK * meth, char * obj, CRYPTO_EX_DATA * ad);
	void APICALL (*CRYPTO_new_ex_data)(struct AmiSSLIFace *Self, STACK * meth, char * obj, CRYPTO_EX_DATA * ad);
	int APICALL (*CRYPTO_mem_ctrl)(struct AmiSSLIFace *Self, int mode);
	int APICALL (*CRYPTO_get_new_lockid)(struct AmiSSLIFace *Self, char * name);
	void APICALL (*CRYPTO_lock)(struct AmiSSLIFace *Self, int mode, int type, const char * file, int line);
	void APICALL (*CRYPTO_set_locking_callback)(struct AmiSSLIFace *Self, void (*func)(int mode , int type , const char * file , int line ) );
	void * APICALL (*CRYPTO_get_locking_callback)(struct AmiSSLIFace *Self);
	void APICALL (*CRYPTO_set_add_lock_callback)(struct AmiSSLIFace *Self, int (*func)(int * num , int mount , int type , const char * file , int line ) );
	int * APICALL (*CRYPTO_get_add_lock_callback)(struct AmiSSLIFace *Self);
	void APICALL (*CRYPTO_set_id_callback)(struct AmiSSLIFace *Self, unsigned long (*func)(void ) );
	unsigned long * APICALL (*CRYPTO_get_id_callback)(struct AmiSSLIFace *Self);
	unsigned long APICALL (*CRYPTO_thread_id)(struct AmiSSLIFace *Self);
	const char * APICALL (*CRYPTO_get_lock_name)(struct AmiSSLIFace *Self, int type);
	int APICALL (*CRYPTO_add_lock)(struct AmiSSLIFace *Self, int * pointer, int amount, int type, const char * file, int line);
	void APICALL (*CRYPTO_set_mem_functions)(struct AmiSSLIFace *Self, char * (*m)() , char * (*r)() , void (*free_func)() );
	void APICALL (*CRYPTO_get_mem_functions)(struct AmiSSLIFace *Self, char * (*m)() , char * (*r)() , void (*f)() );
	void APICALL (*CRYPTO_set_locked_mem_functions)(struct AmiSSLIFace *Self, char * (*m)() , void (*free_func)() );
	void APICALL (*CRYPTO_get_locked_mem_functions)(struct AmiSSLIFace *Self, char * (*m)() , void (*f)() );
	void * APICALL (*CRYPTO_malloc_locked)(struct AmiSSLIFace *Self, int num);
	void APICALL (*CRYPTO_free_locked)(struct AmiSSLIFace *Self, void * a);
	void * APICALL (*CRYPTO_malloc)(struct AmiSSLIFace *Self, int num);
	void APICALL (*CRYPTO_free)(struct AmiSSLIFace *Self, void * a);
	void * APICALL (*CRYPTO_realloc)(struct AmiSSLIFace *Self, void * addr, int num);
	void * APICALL (*CRYPTO_remalloc)(struct AmiSSLIFace *Self, void * addr, int num);
	void * APICALL (*CRYPTO_dbg_malloc)(struct AmiSSLIFace *Self, int num, const char * file, int line);
	void * APICALL (*CRYPTO_dbg_realloc)(struct AmiSSLIFace *Self, void * addr, int num, const char * file, int line);
	void APICALL (*CRYPTO_dbg_free)(struct AmiSSLIFace *Self, void * a);
	void * APICALL (*CRYPTO_dbg_remalloc)(struct AmiSSLIFace *Self, void * addr, int num, const char * file, int line);
	void APICALL (*CRYPTO_mem_leaks)(struct AmiSSLIFace *Self, struct bio_st * bio);
	void APICALL (*CRYPTO_mem_leaks_cb)(struct AmiSSLIFace *Self, void (*cb)() );
	void APICALL (*ERR_load_CRYPTO_strings)(struct AmiSSLIFace *Self);
	DH * APICALL (*DH_new)(struct AmiSSLIFace *Self);
	void APICALL (*DH_free)(struct AmiSSLIFace *Self, DH * dh);
	int APICALL (*DH_size)(struct AmiSSLIFace *Self, DH * dh);
	DH * APICALL (*DH_generate_parameters)(struct AmiSSLIFace *Self, int prime_len, int generator, void (*callback)(int , int , void * ) , void * cb_arg);
	int APICALL (*DH_check)(struct AmiSSLIFace *Self, DH * dh, int * codes);
	int APICALL (*DH_generate_key)(struct AmiSSLIFace *Self, DH * dh);
	int APICALL (*DH_compute_key)(struct AmiSSLIFace *Self, unsigned char * key, BIGNUM * pub_key, DH * dh);
	DH * APICALL (*d2i_DHparams)(struct AmiSSLIFace *Self, DH ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_DHparams)(struct AmiSSLIFace *Self, DH * a, unsigned char ** pp);
	int APICALL (*DHparams_print)(struct AmiSSLIFace *Self, BIO * bp, DH * x);
	void APICALL (*ERR_load_DH_strings)(struct AmiSSLIFace *Self);
	DSA_SIG * APICALL (*DSA_SIG_new)(struct AmiSSLIFace *Self);
	void APICALL (*DSA_SIG_free)(struct AmiSSLIFace *Self, DSA_SIG * a);
	int APICALL (*i2d_DSA_SIG)(struct AmiSSLIFace *Self, DSA_SIG * a, unsigned char ** pp);
	DSA_SIG * APICALL (*d2i_DSA_SIG)(struct AmiSSLIFace *Self, DSA_SIG ** v, unsigned char ** pp, long length);
	DSA_SIG * APICALL (*DSA_do_sign)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dlen, DSA * dsa);
	int APICALL (*DSA_do_verify)(struct AmiSSLIFace *Self, const unsigned char * dgst, int dgst_len, DSA_SIG * sig, DSA * dsa);
	DSA * APICALL (*DSA_new)(struct AmiSSLIFace *Self);
	int APICALL (*DSA_size)(struct AmiSSLIFace *Self, DSA * a);
	int APICALL (*DSA_sign_setup)(struct AmiSSLIFace *Self, DSA * dsa, BN_CTX * ctx_in, BIGNUM ** kinvp, BIGNUM ** rp);
	int APICALL (*DSA_sign)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dlen, unsigned char * sig, unsigned int * siglen, DSA * dsa);
	int APICALL (*DSA_verify)(struct AmiSSLIFace *Self, int type, const unsigned char * dgst, int dgst_len, unsigned char * sigbuf, int siglen, DSA * dsa);
	void APICALL (*DSA_free)(struct AmiSSLIFace *Self, DSA * r);
	void APICALL (*ERR_load_DSA_strings)(struct AmiSSLIFace *Self);
	DSA * APICALL (*d2i_DSAPublicKey)(struct AmiSSLIFace *Self, DSA ** a, unsigned char ** pp, long length);
	DSA * APICALL (*d2i_DSAPrivateKey)(struct AmiSSLIFace *Self, DSA ** a, unsigned char ** pp, long length);
	DSA * APICALL (*d2i_DSAparams)(struct AmiSSLIFace *Self, DSA ** a, unsigned char ** pp, long length);
	DSA * APICALL (*DSA_generate_parameters)(struct AmiSSLIFace *Self, int bits, unsigned char * seed, int seed_len, int * counter_ret, unsigned long * h_ret, void (*callback)() , char * cb_arg);
	int APICALL (*DSA_generate_key)(struct AmiSSLIFace *Self, DSA * a);
	int APICALL (*i2d_DSAPublicKey)(struct AmiSSLIFace *Self, DSA * a, unsigned char ** pp);
	int APICALL (*i2d_DSAPrivateKey)(struct AmiSSLIFace *Self, DSA * a, unsigned char ** pp);
	int APICALL (*i2d_DSAparams)(struct AmiSSLIFace *Self, DSA * a, unsigned char ** pp);
	int APICALL (*DSAparams_print)(struct AmiSSLIFace *Self, BIO * bp, DSA * x);
	int APICALL (*DSA_print)(struct AmiSSLIFace *Self, BIO * bp, DSA * x, int off);
	int APICALL (*DSA_is_prime)(struct AmiSSLIFace *Self, BIGNUM * q, void (*callback)() , char * cb_arg);
	void APICALL (*ERR_put_error)(struct AmiSSLIFace *Self, int lib, int func, int reason, const char * file, int line);
	void APICALL (*ERR_set_error_data)(struct AmiSSLIFace *Self, char * data, int flags);
	unsigned long APICALL (*ERR_get_error)(struct AmiSSLIFace *Self);
	unsigned long APICALL (*ERR_get_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
	unsigned long APICALL (*ERR_get_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
	unsigned long APICALL (*ERR_peek_error)(struct AmiSSLIFace *Self);
	unsigned long APICALL (*ERR_peek_error_line)(struct AmiSSLIFace *Self, const char ** file, int * line);
	unsigned long APICALL (*ERR_peek_error_line_data)(struct AmiSSLIFace *Self, const char ** file, int * line, const char ** data, int * flags);
	void APICALL (*ERR_clear_error)(struct AmiSSLIFace *Self);
	char * APICALL (*ERR_error_string)(struct AmiSSLIFace *Self, unsigned long e, char * buf);
	const char * APICALL (*ERR_lib_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	const char * APICALL (*ERR_func_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	const char * APICALL (*ERR_reason_error_string)(struct AmiSSLIFace *Self, unsigned long e);
	void APICALL (*ERR_print_errors)(struct AmiSSLIFace *Self, BIO * bp);
	void APICALL (*ERR_add_error_dataA)(struct AmiSSLIFace *Self, int num, void * data);
	void APICALL (*ERR_add_error_data)(struct AmiSSLIFace *Self, int num, ...);
	void APICALL (*ERR_load_strings)(struct AmiSSLIFace *Self, int lib, ERR_STRING_DATA * str);
	void APICALL (*ERR_load_ERR_strings)(struct AmiSSLIFace *Self);
	void APICALL (*ERR_load_crypto_strings)(struct AmiSSLIFace *Self);
	void APICALL (*ERR_free_strings)(struct AmiSSLIFace *Self);
	void APICALL (*ERR_remove_state)(struct AmiSSLIFace *Self, unsigned long pid);
	ERR_STATE * APICALL (*ERR_get_state)(struct AmiSSLIFace *Self);
	LHASH * APICALL (*ERR_get_string_table)(struct AmiSSLIFace *Self);
	LHASH * APICALL (*ERR_get_err_state_table)(struct AmiSSLIFace *Self);
	int APICALL (*ERR_get_next_error_library)(struct AmiSSLIFace *Self);
	int APICALL (*EVP_MD_CTX_copy)(struct AmiSSLIFace *Self, EVP_MD_CTX * out, EVP_MD_CTX * in);
	void APICALL (*EVP_DigestInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const EVP_MD * type);
	void APICALL (*EVP_DigestUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, const unsigned char * d, unsigned int cnt);
	void APICALL (*EVP_DigestFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s);
	int APICALL (*EVP_read_pw_string)(struct AmiSSLIFace *Self, char * buf, int length, const char * prompt, int verify);
	void APICALL (*EVP_set_pw_prompt)(struct AmiSSLIFace *Self, char * prompt);
	char * APICALL (*EVP_get_pw_prompt)(struct AmiSSLIFace *Self);
	int APICALL (*EVP_BytesToKey)(struct AmiSSLIFace *Self, const EVP_CIPHER * type, EVP_MD * md, unsigned char * salt, unsigned char * data, int datal, int count, unsigned char * key, unsigned char * iv);
	void APICALL (*EVP_EncryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char * key, unsigned char * iv);
	void APICALL (*EVP_EncryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	void APICALL (*EVP_EncryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	void APICALL (*EVP_DecryptInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char * key, unsigned char * iv);
	void APICALL (*EVP_DecryptUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	int APICALL (*EVP_DecryptFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	void APICALL (*EVP_CipherInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const EVP_CIPHER * type, unsigned char * key, unsigned char * iv, int enc);
	void APICALL (*EVP_CipherUpdate)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	int APICALL (*EVP_CipherFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * outm, int * outl);
	int APICALL (*EVP_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * md, unsigned int * s, EVP_PKEY * pkey);
	int APICALL (*EVP_VerifyFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigbuf, unsigned int siglen, EVP_PKEY * pkey);
	int APICALL (*EVP_OpenInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, EVP_CIPHER * type, unsigned char * ek, int ekl, unsigned char * iv, EVP_PKEY * priv);
	int APICALL (*EVP_OpenFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	int APICALL (*EVP_SealInit)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, EVP_CIPHER * type, unsigned char ** ek, int * ekl, unsigned char * iv, EVP_PKEY ** pubk, int npubk);
	void APICALL (*EVP_SealFinal)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, unsigned char * out, int * outl);
	void APICALL (*EVP_EncodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	void APICALL (*EVP_EncodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	void APICALL (*EVP_EncodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
	int APICALL (*EVP_EncodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, unsigned char * f, int n);
	void APICALL (*EVP_DecodeInit)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx);
	int APICALL (*EVP_DecodeUpdate)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	int APICALL (*EVP_DecodeFinal)(struct AmiSSLIFace *Self, EVP_ENCODE_CTX * ctx, unsigned char * out, int * outl);
	int APICALL (*EVP_DecodeBlock)(struct AmiSSLIFace *Self, unsigned char * t, unsigned char * f, int n);
	void APICALL (*ERR_load_EVP_strings)(struct AmiSSLIFace *Self);
	void APICALL (*EVP_CIPHER_CTX_init)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
	void APICALL (*EVP_CIPHER_CTX_cleanup)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * a);
	BIO_METHOD * APICALL (*BIO_f_md)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_base64)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_cipher)(struct AmiSSLIFace *Self);
	BIO_METHOD * APICALL (*BIO_f_reliable)(struct AmiSSLIFace *Self);
	void APICALL (*BIO_set_cipher)(struct AmiSSLIFace *Self, BIO * b, const EVP_CIPHER * c, unsigned char * k, unsigned char * i, int enc);
	EVP_MD * APICALL (*EVP_md_null)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_md2)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_md5)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_sha)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_sha1)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_dss)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_dss1)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_mdc2)(struct AmiSSLIFace *Self);
	EVP_MD * APICALL (*EVP_ripemd160)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_enc_null)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede3)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede3_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede3_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_des_ede3_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_desx_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc4)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc4_40)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_idea_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_idea_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_idea_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_idea_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_40_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_64_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc2_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_bf_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_bf_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_bf_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_bf_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_cast5_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_cast5_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_cast5_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_cast5_ofb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_cbc)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_ecb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_cfb)(struct AmiSSLIFace *Self);
	EVP_CIPHER * APICALL (*EVP_rc5_32_12_16_ofb)(struct AmiSSLIFace *Self);
	void APICALL (*SSLeay_add_all_algorithms)(struct AmiSSLIFace *Self);
	void APICALL (*SSLeay_add_all_ciphers)(struct AmiSSLIFace *Self);
	void APICALL (*SSLeay_add_all_digests)(struct AmiSSLIFace *Self);
	int APICALL (*EVP_add_cipher)(struct AmiSSLIFace *Self, EVP_CIPHER * cipher);
	int APICALL (*EVP_add_digest)(struct AmiSSLIFace *Self, EVP_MD * digest);
	const EVP_CIPHER * APICALL (*EVP_get_cipherbyname)(struct AmiSSLIFace *Self, const char * name);
	const EVP_MD * APICALL (*EVP_get_digestbyname)(struct AmiSSLIFace *Self, const char * name);
	void APICALL (*EVP_cleanup)(struct AmiSSLIFace *Self);
	int APICALL (*EVP_PKEY_decrypt)(struct AmiSSLIFace *Self, unsigned char * dec_key, unsigned char * enc_key, int enc_key_len, EVP_PKEY * private_key);
	int APICALL (*EVP_PKEY_encrypt)(struct AmiSSLIFace *Self, unsigned char * enc_key, unsigned char * key, int key_len, EVP_PKEY * pub_key);
	int APICALL (*EVP_PKEY_type)(struct AmiSSLIFace *Self, int type);
	int APICALL (*EVP_PKEY_bits)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	int APICALL (*EVP_PKEY_size)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	int APICALL (*EVP_PKEY_assign)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int type, char * key);
	EVP_PKEY * APICALL (*EVP_PKEY_new)(struct AmiSSLIFace *Self);
	void APICALL (*EVP_PKEY_free)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	EVP_PKEY * APICALL (*d2i_PublicKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_PublicKey)(struct AmiSSLIFace *Self, EVP_PKEY * a, unsigned char ** pp);
	EVP_PKEY * APICALL (*d2i_PrivateKey)(struct AmiSSLIFace *Self, int type, EVP_PKEY ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_PrivateKey)(struct AmiSSLIFace *Self, EVP_PKEY * a, unsigned char ** pp);
	int APICALL (*EVP_PKEY_copy_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * to, EVP_PKEY * from);
	int APICALL (*EVP_PKEY_missing_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	int APICALL (*EVP_PKEY_save_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, int mode);
	int APICALL (*EVP_PKEY_cmp_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * a, EVP_PKEY * b);
	int APICALL (*EVP_CIPHER_type)(struct AmiSSLIFace *Self, const EVP_CIPHER * ctx);
	int APICALL (*EVP_CIPHER_param_to_asn1)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	int APICALL (*EVP_CIPHER_asn1_to_param)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	int APICALL (*EVP_CIPHER_set_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	int APICALL (*EVP_CIPHER_get_asn1_iv)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * c, ASN1_TYPE * type);
	void APICALL (*HMAC_Init)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, const void * key, int len, const EVP_MD * md);
	void APICALL (*HMAC_Update)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned char * key, int len);
	void APICALL (*HMAC_Final)(struct AmiSSLIFace *Self, HMAC_CTX * ctx, unsigned char * md, unsigned int * len);
	void APICALL (*HMAC_cleanup)(struct AmiSSLIFace *Self, HMAC_CTX * ctx);
	unsigned char * APICALL (*HMAC)(struct AmiSSLIFace *Self, const EVP_MD * evp_md, const void * key, int key_len, unsigned char * d, int n, unsigned char * md, unsigned int * md_len);
	LHASH * APICALL (*lh_new)(struct AmiSSLIFace *Self, unsigned long (*h)() , int (*c)() );
	void APICALL (*lh_free)(struct AmiSSLIFace *Self, LHASH * lh);
	char * APICALL (*lh_insert)(struct AmiSSLIFace *Self, LHASH * lh, char * data);
	char * APICALL (*lh_delete)(struct AmiSSLIFace *Self, LHASH * lh, char * data);
	char * APICALL (*lh_retrieve)(struct AmiSSLIFace *Self, LHASH * lh, char * data);
	void APICALL (*lh_doall)(struct AmiSSLIFace *Self, LHASH * lh, void (*func)() );
	void APICALL (*lh_doall_arg)(struct AmiSSLIFace *Self, LHASH * lh, void (*func)() , char * arg);
	unsigned long APICALL (*lh_strhash)(struct AmiSSLIFace *Self, const char * c);
	void APICALL (*lh_stats_bio)(struct AmiSSLIFace *Self, LHASH * lh, BIO * out);
	void APICALL (*lh_node_stats_bio)(struct AmiSSLIFace *Self, LHASH * lh, BIO * out);
	void APICALL (*lh_node_usage_stats_bio)(struct AmiSSLIFace *Self, LHASH * lh, BIO * out);
	int APICALL (*OBJ_NAME_init)(struct AmiSSLIFace *Self);
	int APICALL (*OBJ_NAME_new_index)(struct AmiSSLIFace *Self, unsigned long (*hash_func)() , int (*cmp_func)() , void (*free_func)() );
	const char * APICALL (*OBJ_NAME_get)(struct AmiSSLIFace *Self, const char * name, int type);
	int APICALL (*OBJ_NAME_add)(struct AmiSSLIFace *Self, const char * name, int type, const char * data);
	int APICALL (*OBJ_NAME_remove)(struct AmiSSLIFace *Self, const char * name, int type);
	void APICALL (*OBJ_NAME_cleanup)(struct AmiSSLIFace *Self, int type);
	ASN1_OBJECT * APICALL (*OBJ_dup)(struct AmiSSLIFace *Self, ASN1_OBJECT * o);
	ASN1_OBJECT * APICALL (*OBJ_nid2obj)(struct AmiSSLIFace *Self, int n);
	const char * APICALL (*OBJ_nid2ln)(struct AmiSSLIFace *Self, int n);
	const char * APICALL (*OBJ_nid2sn)(struct AmiSSLIFace *Self, int n);
	int APICALL (*OBJ_obj2nid)(struct AmiSSLIFace *Self, ASN1_OBJECT * o);
	ASN1_OBJECT * APICALL (*OBJ_txt2obj)(struct AmiSSLIFace *Self, const char * s, int no_name);
	int APICALL (*OBJ_txt2nid)(struct AmiSSLIFace *Self, char * s);
	int APICALL (*OBJ_ln2nid)(struct AmiSSLIFace *Self, const char * s);
	int APICALL (*OBJ_sn2nid)(struct AmiSSLIFace *Self, const char * s);
	int APICALL (*OBJ_cmp)(struct AmiSSLIFace *Self, ASN1_OBJECT * a, ASN1_OBJECT * b);
	char * APICALL (*OBJ_bsearch)(struct AmiSSLIFace *Self, char * key, char * base, int num, int size, int (*cmp)() );
	void APICALL (*ERR_load_OBJ_strings)(struct AmiSSLIFace *Self);
	int APICALL (*OBJ_new_nid)(struct AmiSSLIFace *Self, int num);
	int APICALL (*OBJ_add_object)(struct AmiSSLIFace *Self, ASN1_OBJECT * obj);
	int APICALL (*OBJ_create)(struct AmiSSLIFace *Self, char * oid, char * sn, char * ln);
	void APICALL (*OBJ_cleanup)(struct AmiSSLIFace *Self);
	int APICALL (*OBJ_create_objects)(struct AmiSSLIFace *Self, BIO * in);
	int APICALL (*PEM_get_EVP_CIPHER_INFO)(struct AmiSSLIFace *Self, char * header, EVP_CIPHER_INFO * cipher);
	int APICALL (*PEM_do_header)(struct AmiSSLIFace *Self, EVP_CIPHER_INFO * cipher, unsigned char * data, long * len, pem_password_cb * (*callback)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_read_bio)(struct AmiSSLIFace *Self, BIO * bp, char ** name, char ** header, unsigned char ** data, long * len);
	int APICALL (*PEM_write_bio)(struct AmiSSLIFace *Self, BIO * bp, const char * name, char * hdr, unsigned char * data, long len);
	char * APICALL (*PEM_ASN1_read_bio)(struct AmiSSLIFace *Self, char * (*d2i)() , const char * name, BIO * bp, char ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_ASN1_write_bio)(struct AmiSSLIFace *Self, int (*i2d)() , const char * name, BIO * bp, char * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	STACK * APICALL (*PEM_X509_INFO_read_bio)(struct AmiSSLIFace *Self, BIO * bp, STACK * sk, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_X509_INFO_write_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_INFO * xi, EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_SealInit)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, EVP_CIPHER * type, EVP_MD * md_type, unsigned char ** ek, int * ekl, unsigned char * iv, EVP_PKEY ** pubk, int npubk);
	void APICALL (*PEM_SealUpdate)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, unsigned char * out, int * outl, unsigned char * in, int inl);
	int APICALL (*PEM_SealFinal)(struct AmiSSLIFace *Self, PEM_ENCODE_SEAL_CTX * ctx, unsigned char * sig, int * sigl, unsigned char * out, int * outl, EVP_PKEY * priv);
	void APICALL (*PEM_SignInit)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, EVP_MD * type);
	void APICALL (*PEM_SignUpdate)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * d, unsigned int cnt);
	int APICALL (*PEM_SignFinal)(struct AmiSSLIFace *Self, EVP_MD_CTX * ctx, unsigned char * sigret, unsigned int * siglen, EVP_PKEY * pkey);
	void APICALL (*ERR_load_PEM_strings)(struct AmiSSLIFace *Self);
	void APICALL (*PEM_proc_type)(struct AmiSSLIFace *Self, char * buf, int type);
	void APICALL (*PEM_dek_info)(struct AmiSSLIFace *Self, char * buf, const char * type, int len, char * str);
	X509 * APICALL (*PEM_read_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	X509_REQ * APICALL (*PEM_read_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	X509_CRL * APICALL (*PEM_read_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	RSA * APICALL (*PEM_read_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	RSA * APICALL (*PEM_read_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * bp, RSA ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	DSA * APICALL (*PEM_read_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	EVP_PKEY * APICALL (*PEM_read_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * bp, EVP_PKEY ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	PKCS7 * APICALL (*PEM_read_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	DH * APICALL (*PEM_read_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, DH ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	NETSCAPE_CERT_SEQUENCE * APICALL (*PEM_read_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, NETSCAPE_CERT_SEQUENCE ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	DSA * APICALL (*PEM_read_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, DSA ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_write_bio_X509)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
	int APICALL (*PEM_write_bio_X509_REQ)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * x);
	int APICALL (*PEM_write_bio_X509_CRL)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * x);
	int APICALL (*PEM_write_bio_RSAPrivateKey)(struct AmiSSLIFace *Self, BIO * fp, RSA * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_write_bio_RSAPublicKey)(struct AmiSSLIFace *Self, BIO * fp, RSA * x);
	int APICALL (*PEM_write_bio_DSAPrivateKey)(struct AmiSSLIFace *Self, BIO * fp, DSA * x, const EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_write_bio_PrivateKey)(struct AmiSSLIFace *Self, BIO * fp, EVP_PKEY * x, EVP_CIPHER * enc, unsigned char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_write_bio_PKCS7)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 * x);
	int APICALL (*PEM_write_bio_DHparams)(struct AmiSSLIFace *Self, BIO * bp, DH * x);
	int APICALL (*PEM_write_bio_DSAparams)(struct AmiSSLIFace *Self, BIO * bp, DSA * x);
	int APICALL (*PEM_write_bio_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, BIO * bp, NETSCAPE_CERT_SEQUENCE * x);
	PKCS12_SAFEBAG * APICALL (*PKCS12_pack_safebag)(struct AmiSSLIFace *Self, char * obj, int (*i2d)() , int nid1, int nid2);
	PKCS12_SAFEBAG * APICALL (*PKCS12_MAKE_KEYBAG)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
	X509_SIG * APICALL (*PKCS8_encrypt)(struct AmiSSLIFace *Self, int pbe_nid, const EVP_CIPHER * cipher, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
	PKCS12_SAFEBAG * APICALL (*PKCS12_MAKE_SHKEYBAG)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, PKCS8_PRIV_KEY_INFO * p8);
	PKCS7 * APICALL (*PKCS12_pack_p7data)(struct AmiSSLIFace *Self, STACK * sk);
	PKCS7 * APICALL (*PKCS12_pack_p7encdata)(struct AmiSSLIFace *Self, int pbe_nid, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, STACK * bags);
	int APICALL (*PKCS12_add_localkeyid)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, unsigned char * name, int namelen);
	int APICALL (*PKCS12_add_friendlyname_asc)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const char * name, int namelen);
	int APICALL (*PKCS12_add_friendlyname_uni)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag, const unsigned char * name, int namelen);
	int APICALL (*PKCS8_add_keyusage)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int usage);
	ASN1_TYPE * APICALL (*PKCS12_get_attr_gen)(struct AmiSSLIFace *Self, STACK * attrs, int attr_nid);
	char * APICALL (*PKCS12_get_friendlyname)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * bag);
	unsigned char * APICALL (*PKCS12_pbe_crypt)(struct AmiSSLIFace *Self, X509_ALGOR * algor, const char * pass, int passlen, unsigned char * in, int inlen, unsigned char ** data, int * datalen, int en_de);
	char * APICALL (*PKCS12_decrypt_d2i)(struct AmiSSLIFace *Self, X509_ALGOR * algor, char * (*d2i)() , void (*free_func)() , const char * pass, int passlen, ASN1_STRING * oct, int seq);
	ASN1_STRING * APICALL (*PKCS12_i2d_encrypt)(struct AmiSSLIFace *Self, X509_ALGOR * algor, int (*i2d)() , const char * pass, int passlen, char * obj, int seq);
	PKCS12 * APICALL (*PKCS12_init)(struct AmiSSLIFace *Self, int mode);
	int APICALL (*PKCS12_key_gen_asc)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
	int APICALL (*PKCS12_key_gen_uni)(struct AmiSSLIFace *Self, unsigned char * pass, int passlen, unsigned char * salt, int saltlen, int id, int iter, int n, unsigned char * out, const EVP_MD * md_type);
	int APICALL (*PKCS12_gen_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * mac, unsigned int * maclen);
	int APICALL (*PKCS12_verify_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen);
	int APICALL (*PKCS12_set_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, EVP_MD * md_type);
	int APICALL (*PKCS12_setup_mac)(struct AmiSSLIFace *Self, PKCS12 * p12, int iter, unsigned char * salt, int saltlen, EVP_MD * md_type);
	unsigned char * APICALL (*asc2uni)(struct AmiSSLIFace *Self, const char * asc, unsigned char ** uni, int * unilen);
	char * APICALL (*uni2asc)(struct AmiSSLIFace *Self, unsigned char * uni, int unilen);
	int APICALL (*i2d_PKCS12_BAGS)(struct AmiSSLIFace *Self, PKCS12_BAGS * a, unsigned char ** pp);
	PKCS12_BAGS * APICALL (*PKCS12_BAGS_new)(struct AmiSSLIFace *Self);
	PKCS12_BAGS * APICALL (*d2i_PKCS12_BAGS)(struct AmiSSLIFace *Self, PKCS12_BAGS ** a, unsigned char ** pp, long length);
	void APICALL (*PKCS12_BAGS_free)(struct AmiSSLIFace *Self, PKCS12_BAGS * a);
	int APICALL (*i2d_PKCS12)(struct AmiSSLIFace *Self, PKCS12 * a, unsigned char ** pp);
	PKCS12 * APICALL (*d2i_PKCS12)(struct AmiSSLIFace *Self, PKCS12 ** a, unsigned char ** pp, long length);
	PKCS12 * APICALL (*PKCS12_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS12_free)(struct AmiSSLIFace *Self, PKCS12 * a);
	int APICALL (*i2d_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA * a, unsigned char ** pp);
	PKCS12_MAC_DATA * APICALL (*PKCS12_MAC_DATA_new)(struct AmiSSLIFace *Self);
	PKCS12_MAC_DATA * APICALL (*d2i_PKCS12_MAC_DATA)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA ** a, unsigned char ** pp, long length);
	void APICALL (*PKCS12_MAC_DATA_free)(struct AmiSSLIFace *Self, PKCS12_MAC_DATA * a);
	int APICALL (*i2d_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * a, unsigned char ** pp);
	PKCS12_SAFEBAG * APICALL (*PKCS12_SAFEBAG_new)(struct AmiSSLIFace *Self);
	PKCS12_SAFEBAG * APICALL (*d2i_PKCS12_SAFEBAG)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG ** a, unsigned char ** pp, long length);
	void APICALL (*PKCS12_SAFEBAG_free)(struct AmiSSLIFace *Self, PKCS12_SAFEBAG * a);
	void APICALL (*ERR_load_PKCS12_strings)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS12_PBE_add)(struct AmiSSLIFace *Self);
	int APICALL (*PKCS12_parse)(struct AmiSSLIFace *Self, PKCS12 * p12, const char * pass, EVP_PKEY ** pkey, X509 ** cert, STACK ** ca);
	PKCS12 * APICALL (*PKCS12_create)(struct AmiSSLIFace *Self, char * pass, char * name, EVP_PKEY * pkey, X509 * cert, STACK * ca, int nid_key, int nid_cert, int iter, int mac_iter, int keytype);
	int APICALL (*i2d_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS12 * p12);
	PKCS12 * APICALL (*d2i_PKCS12_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS12 ** p12);
	PKCS7_ISSUER_AND_SERIAL * APICALL (*PKCS7_ISSUER_AND_SERIAL_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_ISSUER_AND_SERIAL_free)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * a);
	int APICALL (*i2d_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * a, unsigned char ** pp);
	PKCS7_ISSUER_AND_SERIAL * APICALL (*d2i_PKCS7_ISSUER_AND_SERIAL)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL ** a, unsigned char ** pp, long length);
	int APICALL (*PKCS7_ISSUER_AND_SERIAL_digest)(struct AmiSSLIFace *Self, PKCS7_ISSUER_AND_SERIAL * data, EVP_MD * type, unsigned char * md, unsigned int * len);
	PKCS7 * APICALL (*PKCS7_dup)(struct AmiSSLIFace *Self, PKCS7 * p7);
	PKCS7 * APICALL (*d2i_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 ** p7);
	int APICALL (*i2d_PKCS7_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS7 * p7);
	PKCS7_SIGNER_INFO * APICALL (*PKCS7_SIGNER_INFO_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_SIGNER_INFO_free)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * a);
	int APICALL (*i2d_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * a, unsigned char ** pp);
	PKCS7_SIGNER_INFO * APICALL (*d2i_PKCS7_SIGNER_INFO)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO ** a, unsigned char ** pp, long length);
	PKCS7_RECIP_INFO * APICALL (*PKCS7_RECIP_INFO_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_RECIP_INFO_free)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * a);
	int APICALL (*i2d_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * a, unsigned char ** pp);
	PKCS7_RECIP_INFO * APICALL (*d2i_PKCS7_RECIP_INFO)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO ** a, unsigned char ** pp, long length);
	PKCS7_SIGNED * APICALL (*PKCS7_SIGNED_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_SIGNED_free)(struct AmiSSLIFace *Self, PKCS7_SIGNED * a);
	int APICALL (*i2d_PKCS7_SIGNED)(struct AmiSSLIFace *Self, PKCS7_SIGNED * a, unsigned char ** pp);
	PKCS7_SIGNED * APICALL (*d2i_PKCS7_SIGNED)(struct AmiSSLIFace *Self, PKCS7_SIGNED ** a, unsigned char ** pp, long length);
	PKCS7_ENC_CONTENT * APICALL (*PKCS7_ENC_CONTENT_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_ENC_CONTENT_free)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT * a);
	int APICALL (*i2d_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT * a, unsigned char ** pp);
	PKCS7_ENC_CONTENT * APICALL (*d2i_PKCS7_ENC_CONTENT)(struct AmiSSLIFace *Self, PKCS7_ENC_CONTENT ** a, unsigned char ** pp, long length);
	PKCS7_ENVELOPE * APICALL (*PKCS7_ENVELOPE_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE * a);
	int APICALL (*i2d_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE * a, unsigned char ** pp);
	PKCS7_ENVELOPE * APICALL (*d2i_PKCS7_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_ENVELOPE ** a, unsigned char ** pp, long length);
	PKCS7_SIGN_ENVELOPE * APICALL (*PKCS7_SIGN_ENVELOPE_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_SIGN_ENVELOPE_free)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE * a);
	int APICALL (*i2d_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE * a, unsigned char ** pp);
	PKCS7_SIGN_ENVELOPE * APICALL (*d2i_PKCS7_SIGN_ENVELOPE)(struct AmiSSLIFace *Self, PKCS7_SIGN_ENVELOPE ** a, unsigned char ** pp, long length);
	PKCS7_DIGEST * APICALL (*PKCS7_DIGEST_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_DIGEST_free)(struct AmiSSLIFace *Self, PKCS7_DIGEST * a);
	int APICALL (*i2d_PKCS7_DIGEST)(struct AmiSSLIFace *Self, PKCS7_DIGEST * a, unsigned char ** pp);
	PKCS7_DIGEST * APICALL (*d2i_PKCS7_DIGEST)(struct AmiSSLIFace *Self, PKCS7_DIGEST ** a, unsigned char ** pp, long length);
	PKCS7_ENCRYPT * APICALL (*PKCS7_ENCRYPT_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_ENCRYPT_free)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT * a);
	int APICALL (*i2d_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT * a, unsigned char ** pp);
	PKCS7_ENCRYPT * APICALL (*d2i_PKCS7_ENCRYPT)(struct AmiSSLIFace *Self, PKCS7_ENCRYPT ** a, unsigned char ** pp, long length);
	PKCS7 * APICALL (*PKCS7_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKCS7_free)(struct AmiSSLIFace *Self, PKCS7 * a);
	void APICALL (*PKCS7_content_free)(struct AmiSSLIFace *Self, PKCS7 * a);
	int APICALL (*i2d_PKCS7)(struct AmiSSLIFace *Self, PKCS7 * a, unsigned char ** pp);
	PKCS7 * APICALL (*d2i_PKCS7)(struct AmiSSLIFace *Self, PKCS7 ** a, unsigned char ** pp, long length);
	void APICALL (*ERR_load_PKCS7_strings)(struct AmiSSLIFace *Self);
	long APICALL (*PKCS7_ctrl)(struct AmiSSLIFace *Self, PKCS7 * p7, int cmd, long larg, char * parg);
	int APICALL (*PKCS7_set_type)(struct AmiSSLIFace *Self, PKCS7 * p7, int type);
	int APICALL (*PKCS7_set_content)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7 * p7_data);
	int APICALL (*PKCS7_SIGNER_INFO_set)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7i, X509 * x509, EVP_PKEY * pkey, EVP_MD * dgst);
	int APICALL (*PKCS7_add_signer)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * p7i);
	int APICALL (*PKCS7_add_certificate)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509);
	int APICALL (*PKCS7_add_crl)(struct AmiSSLIFace *Self, PKCS7 * p7, X509_CRL * x509);
	int APICALL (*PKCS7_content_new)(struct AmiSSLIFace *Self, PKCS7 * p7, int nid);
	int APICALL (*PKCS7_dataVerify)(struct AmiSSLIFace *Self, X509_STORE * cert_store, X509_STORE_CTX * ctx, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
	BIO * APICALL (*PKCS7_dataInit)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
	int APICALL (*PKCS7_dataFinal)(struct AmiSSLIFace *Self, PKCS7 * p7, BIO * bio);
	BIO * APICALL (*PKCS7_dataDecode)(struct AmiSSLIFace *Self, PKCS7 * p7, EVP_PKEY * pkey, BIO * in_bio, X509 * pcert);
	PKCS7_SIGNER_INFO * APICALL (*PKCS7_add_signature)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509, EVP_PKEY * pkey, EVP_MD * dgst);
	X509 * APICALL (*PKCS7_cert_from_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_SIGNER_INFO * si);
	STACK * APICALL (*PKCS7_get_signer_info)(struct AmiSSLIFace *Self, PKCS7 * p7);
	PKCS7_RECIP_INFO * APICALL (*PKCS7_add_recipient)(struct AmiSSLIFace *Self, PKCS7 * p7, X509 * x509);
	int APICALL (*PKCS7_add_recipient_info)(struct AmiSSLIFace *Self, PKCS7 * p7, PKCS7_RECIP_INFO * ri);
	int APICALL (*PKCS7_RECIP_INFO_set)(struct AmiSSLIFace *Self, PKCS7_RECIP_INFO * p7i, X509 * x509);
	int APICALL (*PKCS7_set_cipher)(struct AmiSSLIFace *Self, PKCS7 * p7, const EVP_CIPHER * cipher);
	PKCS7_ISSUER_AND_SERIAL * APICALL (*PKCS7_get_issuer_and_serial)(struct AmiSSLIFace *Self, PKCS7 * p7, int idx);
	ASN1_OCTET_STRING * APICALL (*PKCS7_digest_from_attributes)(struct AmiSSLIFace *Self, STACK * sk);
	int APICALL (*PKCS7_add_signed_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int type, void * data);
	int APICALL (*PKCS7_add_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, int nid, int atrtype, void * value);
	ASN1_TYPE * APICALL (*PKCS7_get_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, int nid);
	ASN1_TYPE * APICALL (*PKCS7_get_signed_attribute)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * si, int nid);
	int APICALL (*PKCS7_set_signed_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK * sk);
	int APICALL (*PKCS7_set_attributes)(struct AmiSSLIFace *Self, PKCS7_SIGNER_INFO * p7si, STACK * sk);
	void APICALL (*RAND_set_rand_method)(struct AmiSSLIFace *Self, RAND_METHOD * meth);
	RAND_METHOD * APICALL (*RAND_get_rand_method)(struct AmiSSLIFace *Self);
	RAND_METHOD * APICALL (*RAND_SSLeay)(struct AmiSSLIFace *Self);
	void APICALL (*RAND_cleanup)(struct AmiSSLIFace *Self);
	void APICALL (*RAND_bytes)(struct AmiSSLIFace *Self, unsigned char * buf, int num);
	void APICALL (*RAND_seed)(struct AmiSSLIFace *Self, const void * buf, int num);
	int APICALL (*RAND_load_file)(struct AmiSSLIFace *Self, const char * file, long max_bytes);
	int APICALL (*RAND_write_file)(struct AmiSSLIFace *Self, const char * file);
	char * APICALL (*RAND_file_name)(struct AmiSSLIFace *Self, char * file, int num);
	void APICALL (*ERR_load_RSAREF_strings)(struct AmiSSLIFace *Self);
	RSA * APICALL (*RSA_new)(struct AmiSSLIFace *Self);
	RSA * APICALL (*RSA_new_method)(struct AmiSSLIFace *Self, RSA_METHOD * method);
	int APICALL (*RSA_size)(struct AmiSSLIFace *Self, RSA * a);
	RSA * APICALL (*RSA_generate_key)(struct AmiSSLIFace *Self, int bits, unsigned long e, void (*callback)(int , int , void * ) , void * cb_arg);
	int APICALL (*RSA_public_encrypt)(struct AmiSSLIFace *Self, int flen, unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	int APICALL (*RSA_private_encrypt)(struct AmiSSLIFace *Self, int flen, unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	int APICALL (*RSA_public_decrypt)(struct AmiSSLIFace *Self, int flen, unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	int APICALL (*RSA_private_decrypt)(struct AmiSSLIFace *Self, int flen, unsigned char * from, unsigned char * to, RSA * rsa, int padding);
	void APICALL (*RSA_free)(struct AmiSSLIFace *Self, RSA * r);
	int APICALL (*RSA_flags)(struct AmiSSLIFace *Self, RSA * r);
	void APICALL (*RSA_set_default_method)(struct AmiSSLIFace *Self, RSA_METHOD * meth);
	int APICALL (*RSA_memory_lock)(struct AmiSSLIFace *Self, RSA * r);
	RSA_METHOD * APICALL (*RSA_PKCS1_Default)(struct AmiSSLIFace *Self);
	void APICALL (*ERR_load_RSA_strings)(struct AmiSSLIFace *Self);
	RSA * APICALL (*d2i_RSAPublicKey)(struct AmiSSLIFace *Self, RSA ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_RSAPublicKey)(struct AmiSSLIFace *Self, RSA * a, unsigned char ** pp);
	RSA * APICALL (*d2i_RSAPrivateKey)(struct AmiSSLIFace *Self, RSA ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_RSAPrivateKey)(struct AmiSSLIFace *Self, RSA * a, unsigned char ** pp);
	int APICALL (*RSA_print)(struct AmiSSLIFace *Self, BIO * bp, RSA * r, int offset);
	int APICALL (*i2d_Netscape_RSA)(struct AmiSSLIFace *Self, RSA * a, unsigned char ** pp, int (*cb)() );
	RSA * APICALL (*d2i_Netscape_RSA)(struct AmiSSLIFace *Self, RSA ** a, unsigned char ** pp, long length, int (*cb)() );
	RSA * APICALL (*d2i_Netscape_RSA_2)(struct AmiSSLIFace *Self, RSA ** a, unsigned char ** pp, long length, int (*cb)() );
	int APICALL (*RSA_sign)(struct AmiSSLIFace *Self, int type, unsigned char * m, unsigned int m_len, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
	int APICALL (*RSA_verify)(struct AmiSSLIFace *Self, int type, unsigned char * m, unsigned int m_len, unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
	int APICALL (*RSA_sign_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, unsigned char * m, unsigned int m_len, unsigned char * sigret, unsigned int * siglen, RSA * rsa);
	int APICALL (*RSA_verify_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, int type, unsigned char * m, unsigned int m_len, unsigned char * sigbuf, unsigned int siglen, RSA * rsa);
	int APICALL (*RSA_blinding_on)(struct AmiSSLIFace *Self, RSA * rsa, BN_CTX * ctx);
	void APICALL (*RSA_blinding_off)(struct AmiSSLIFace *Self, RSA * rsa);
	int APICALL (*RSA_padding_add_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl);
	int APICALL (*RSA_padding_check_PKCS1_type_1)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, int rsa_len);
	int APICALL (*RSA_padding_add_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl);
	int APICALL (*RSA_padding_check_PKCS1_type_2)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, int rsa_len);
	int APICALL (*RSA_padding_add_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, unsigned char * p, int pl);
	int APICALL (*RSA_padding_check_PKCS1_OAEP)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, int rsa_len, unsigned char * p, int pl);
	int APICALL (*RSA_padding_add_SSLv23)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl);
	int APICALL (*RSA_padding_check_SSLv23)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, int rsa_len);
	int APICALL (*RSA_padding_add_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl);
	int APICALL (*RSA_padding_check_none)(struct AmiSSLIFace *Self, unsigned char * to, int tlen, unsigned char * f, int fl, int rsa_len);
	int APICALL (*RSA_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*RSA_set_ex_data)(struct AmiSSLIFace *Self, RSA * r, int idx, char * arg);
	char * APICALL (*RSA_get_ex_data)(struct AmiSSLIFace *Self, RSA * r, int idx);
	BIO_METHOD * APICALL (*BIO_f_ssl)(struct AmiSSLIFace *Self);
	BIO * APICALL (*BIO_new_ssl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int client);
	BIO * APICALL (*BIO_new_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	BIO * APICALL (*BIO_new_buffer_ssl_connect)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int APICALL (*BIO_ssl_copy_session_id)(struct AmiSSLIFace *Self, BIO * to, BIO * from);
	void APICALL (*BIO_ssl_shutdown)(struct AmiSSLIFace *Self, BIO * ssl_bio);
	int APICALL (*SSL_CTX_set_cipher_list)(struct AmiSSLIFace *Self, SSL_CTX * a, char * str);
	SSL_CTX * APICALL (*SSL_CTX_new)(struct AmiSSLIFace *Self, SSL_METHOD * meth);
	void APICALL (*SSL_CTX_free)(struct AmiSSLIFace *Self, SSL_CTX * a);
	long APICALL (*SSL_CTX_set_timeout)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long t);
	long APICALL (*SSL_CTX_get_timeout)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	X509_STORE * APICALL (*SSL_CTX_get_cert_store)(struct AmiSSLIFace *Self, SSL_CTX * a);
	void APICALL (*SSL_CTX_set_cert_store)(struct AmiSSLIFace *Self, SSL_CTX * a, X509_STORE * b);
	int APICALL (*SSL_want)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_clear)(struct AmiSSLIFace *Self, SSL * s);
	void APICALL (*SSL_CTX_flush_sessions)(struct AmiSSLIFace *Self, SSL_CTX * ctx, long tm);
	SSL_CIPHER * APICALL (*SSL_get_current_cipher)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_CIPHER_get_bits)(struct AmiSSLIFace *Self, SSL_CIPHER * c, int * alg_bits);
	char * APICALL (*SSL_CIPHER_get_version)(struct AmiSSLIFace *Self, SSL_CIPHER * c);
	const char * APICALL (*SSL_CIPHER_get_name)(struct AmiSSLIFace *Self, SSL_CIPHER * c);
	int APICALL (*SSL_get_fd)(struct AmiSSLIFace *Self, SSL * s);
	const char * APICALL (*SSL_get_cipher_list)(struct AmiSSLIFace *Self, SSL * s, int n);
	char * APICALL (*SSL_get_shared_ciphers)(struct AmiSSLIFace *Self, SSL * s, char * buf, int len);
	int APICALL (*SSL_get_read_ahead)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_pending)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_set_fd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	int APICALL (*SSL_set_rfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	int APICALL (*SSL_set_wfd)(struct AmiSSLIFace *Self, SSL * s, int fd);
	void APICALL (*SSL_set_bio)(struct AmiSSLIFace *Self, SSL * s, BIO * rbio, BIO * wbio);
	BIO * APICALL (*SSL_get_rbio)(struct AmiSSLIFace *Self, SSL * s);
	BIO * APICALL (*SSL_get_wbio)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_set_cipher_list)(struct AmiSSLIFace *Self, SSL * s, char * str);
	void APICALL (*SSL_set_read_ahead)(struct AmiSSLIFace *Self, SSL * s, int yes);
	int APICALL (*SSL_get_verify_mode)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_get_verify_depth)(struct AmiSSLIFace *Self, SSL * s);
	int * APICALL (*SSL_get_verify_callback)(struct AmiSSLIFace *Self, SSL * s);
	void APICALL (*SSL_set_verify)(struct AmiSSLIFace *Self, SSL * s, int mode, int (*callback)(int ok , X509_STORE_CTX * ctx ) );
	void APICALL (*SSL_set_verify_depth)(struct AmiSSLIFace *Self, SSL * s, int depth);
	int APICALL (*SSL_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, RSA * rsa);
	int APICALL (*SSL_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, unsigned char * d, long len);
	int APICALL (*SSL_use_PrivateKey)(struct AmiSSLIFace *Self, SSL * ssl, EVP_PKEY * pkey);
	int APICALL (*SSL_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL * ssl, unsigned char * d, long len);
	int APICALL (*SSL_use_certificate)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
	int APICALL (*SSL_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL * ssl, unsigned char * d, int len);
	int APICALL (*SSL_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	int APICALL (*SSL_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	int APICALL (*SSL_use_certificate_file)(struct AmiSSLIFace *Self, SSL * ssl, const char * file, int type);
	int APICALL (*SSL_CTX_use_RSAPrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	int APICALL (*SSL_CTX_use_PrivateKey_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	int APICALL (*SSL_CTX_use_certificate_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file, int type);
	int APICALL (*SSL_CTX_use_certificate_chain_file)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * file);
	STACK * APICALL (*SSL_load_client_CA_file)(struct AmiSSLIFace *Self, const char * file);
	int APICALL (*SSL_add_file_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK * stackCAs, const char * file);
	int APICALL (*SSL_add_dir_cert_subjects_to_stack)(struct AmiSSLIFace *Self, STACK * stackCAs, const char * dir);
	void APICALL (*ERR_load_SSL_strings)(struct AmiSSLIFace *Self);
	void APICALL (*SSL_load_error_strings)(struct AmiSSLIFace *Self);
	char * APICALL (*SSL_state_string)(struct AmiSSLIFace *Self, SSL * s);
	char * APICALL (*SSL_rstate_string)(struct AmiSSLIFace *Self, SSL * s);
	char * APICALL (*SSL_state_string_long)(struct AmiSSLIFace *Self, SSL * s);
	char * APICALL (*SSL_rstate_string_long)(struct AmiSSLIFace *Self, SSL * s);
	long APICALL (*SSL_SESSION_get_time)(struct AmiSSLIFace *Self, SSL_SESSION * s);
	long APICALL (*SSL_SESSION_set_time)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
	long APICALL (*SSL_SESSION_get_timeout)(struct AmiSSLIFace *Self, SSL_SESSION * s);
	long APICALL (*SSL_SESSION_set_timeout)(struct AmiSSLIFace *Self, SSL_SESSION * s, long t);
	void APICALL (*SSL_copy_session_id)(struct AmiSSLIFace *Self, SSL * to, SSL * from);
	SSL_SESSION * APICALL (*SSL_SESSION_new)(struct AmiSSLIFace *Self);
	unsigned long APICALL (*SSL_SESSION_hash)(struct AmiSSLIFace *Self, SSL_SESSION * a);
	int APICALL (*SSL_SESSION_cmp)(struct AmiSSLIFace *Self, SSL_SESSION * a, SSL_SESSION * b);
	int APICALL (*SSL_SESSION_print)(struct AmiSSLIFace *Self, BIO * fp, SSL_SESSION * ses);
	void APICALL (*SSL_SESSION_free)(struct AmiSSLIFace *Self, SSL_SESSION * ses);
	int APICALL (*i2d_SSL_SESSION)(struct AmiSSLIFace *Self, SSL_SESSION * in, unsigned char ** pp);
	int APICALL (*SSL_set_session)(struct AmiSSLIFace *Self, SSL * to, SSL_SESSION * session);
	int APICALL (*SSL_CTX_add_session)(struct AmiSSLIFace *Self, SSL_CTX * s, SSL_SESSION * c);
	int APICALL (*SSL_CTX_remove_session)(struct AmiSSLIFace *Self, SSL_CTX * a, SSL_SESSION * c);
	SSL_SESSION * APICALL (*d2i_SSL_SESSION)(struct AmiSSLIFace *Self, SSL_SESSION ** a, unsigned char ** pp, long length);
	X509 * APICALL (*SSL_get_peer_certificate)(struct AmiSSLIFace *Self, SSL * s);
	STACK * APICALL (*SSL_get_peer_cert_chain)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_CTX_get_verify_mode)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int APICALL (*SSL_CTX_get_verify_depth)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int * APICALL (*SSL_CTX_get_verify_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	void APICALL (*SSL_CTX_set_verify)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode, int (*callback)(int , X509_STORE_CTX * ) );
	void APICALL (*SSL_CTX_set_verify_depth)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int depth);
	void APICALL (*SSL_CTX_set_cert_verify_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int (*cb)() , char * arg);
	int APICALL (*SSL_CTX_use_RSAPrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, RSA * rsa);
	int APICALL (*SSL_CTX_use_RSAPrivateKey_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, unsigned char * d, long len);
	int APICALL (*SSL_CTX_use_PrivateKey)(struct AmiSSLIFace *Self, SSL_CTX * ctx, EVP_PKEY * pkey);
	int APICALL (*SSL_CTX_use_PrivateKey_ASN1)(struct AmiSSLIFace *Self, int pk, SSL_CTX * ctx, unsigned char * d, long len);
	int APICALL (*SSL_CTX_use_certificate)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
	int APICALL (*SSL_CTX_use_certificate_ASN1)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int len, unsigned char * d);
	void APICALL (*SSL_CTX_set_default_passwd_cb)(struct AmiSSLIFace *Self, SSL_CTX * ctx, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) );
	int APICALL (*SSL_CTX_check_private_key)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int APICALL (*SSL_check_private_key)(struct AmiSSLIFace *Self, SSL * ctx);
	int APICALL (*SSL_CTX_set_session_id_context)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
	SSL * APICALL (*SSL_new)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int APICALL (*SSL_set_session_id_context)(struct AmiSSLIFace *Self, SSL * ssl, const unsigned char * sid_ctx, unsigned int sid_ctx_len);
	void APICALL (*SSL_free)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_accept)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_connect)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_read)(struct AmiSSLIFace *Self, SSL * ssl, char * buf, int num);
	int APICALL (*SSL_peek)(struct AmiSSLIFace *Self, SSL * ssl, char * buf, int num);
	int APICALL (*SSL_write)(struct AmiSSLIFace *Self, SSL * ssl, const char * buf, int num);
	long APICALL (*SSL_ctrl)(struct AmiSSLIFace *Self, SSL * ssl, int cmd, long larg, char * parg);
	long APICALL (*SSL_CTX_ctrl)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int cmd, long larg, char * parg);
	int APICALL (*SSL_get_error)(struct AmiSSLIFace *Self, SSL * s, int ret_code);
	char * APICALL (*SSL_get_version)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_CTX_set_ssl_version)(struct AmiSSLIFace *Self, SSL_CTX * ctx, SSL_METHOD * meth);
	SSL_METHOD * APICALL (*SSLv2_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv2_server_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv2_client_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv3_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv3_server_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv3_client_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv23_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv23_server_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*SSLv23_client_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*TLSv1_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*TLSv1_server_method)(struct AmiSSLIFace *Self);
	SSL_METHOD * APICALL (*TLSv1_client_method)(struct AmiSSLIFace *Self);
	STACK * APICALL (*SSL_get_ciphers)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_do_handshake)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_renegotiate)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_shutdown)(struct AmiSSLIFace *Self, SSL * s);
	SSL_METHOD * APICALL (*SSL_get_ssl_method)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_set_ssl_method)(struct AmiSSLIFace *Self, SSL * s, SSL_METHOD * method);
	char * APICALL (*SSL_alert_type_string_long)(struct AmiSSLIFace *Self, int value);
	char * APICALL (*SSL_alert_type_string)(struct AmiSSLIFace *Self, int value);
	char * APICALL (*SSL_alert_desc_string_long)(struct AmiSSLIFace *Self, int value);
	char * APICALL (*SSL_alert_desc_string)(struct AmiSSLIFace *Self, int value);
	void APICALL (*SSL_set_client_CA_list)(struct AmiSSLIFace *Self, SSL * s, STACK * list);
	void APICALL (*SSL_CTX_set_client_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * ctx, STACK * list);
	STACK * APICALL (*SSL_get_client_CA_list)(struct AmiSSLIFace *Self, SSL * s);
	STACK * APICALL (*SSL_CTX_get_client_CA_list)(struct AmiSSLIFace *Self, SSL_CTX * s);
	int APICALL (*SSL_add_client_CA)(struct AmiSSLIFace *Self, SSL * ssl, X509 * x);
	int APICALL (*SSL_CTX_add_client_CA)(struct AmiSSLIFace *Self, SSL_CTX * ctx, X509 * x);
	void APICALL (*SSL_set_connect_state)(struct AmiSSLIFace *Self, SSL * s);
	void APICALL (*SSL_set_accept_state)(struct AmiSSLIFace *Self, SSL * s);
	long APICALL (*SSL_get_default_timeout)(struct AmiSSLIFace *Self, SSL * s);
	int APICALL (*SSL_library_init)(struct AmiSSLIFace *Self);
	char * APICALL (*SSL_CIPHER_description)(struct AmiSSLIFace *Self, SSL_CIPHER * a, char * buf, int size);
	STACK * APICALL (*SSL_dup_CA_list)(struct AmiSSLIFace *Self, STACK * sk);
	SSL * APICALL (*SSL_dup)(struct AmiSSLIFace *Self, SSL * ssl);
	X509 * APICALL (*SSL_get_certificate)(struct AmiSSLIFace *Self, SSL * ssl);
	struct evp_pkey_st * APICALL (*SSL_get_privatekey)(struct AmiSSLIFace *Self, SSL * ssl);
	void APICALL (*SSL_CTX_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL_CTX * ctx, int mode);
	int APICALL (*SSL_CTX_get_quiet_shutdown)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	void APICALL (*SSL_set_quiet_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
	int APICALL (*SSL_get_quiet_shutdown)(struct AmiSSLIFace *Self, SSL * ssl);
	void APICALL (*SSL_set_shutdown)(struct AmiSSLIFace *Self, SSL * ssl, int mode);
	int APICALL (*SSL_get_shutdown)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_version)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_CTX_set_default_verify_paths)(struct AmiSSLIFace *Self, SSL_CTX * ctx);
	int APICALL (*SSL_CTX_load_verify_locations)(struct AmiSSLIFace *Self, SSL_CTX * ctx, const char * CAfile, const char * CApath);
	SSL_SESSION * APICALL (*SSL_get_session)(struct AmiSSLIFace *Self, SSL * ssl);
	SSL_CTX * APICALL (*SSL_get_SSL_CTX)(struct AmiSSLIFace *Self, SSL * ssl);
	void APICALL (*SSL_set_info_callback)(struct AmiSSLIFace *Self, SSL * ssl, void (*cb)() );
	void * APICALL (*SSL_get_info_callback)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_state)(struct AmiSSLIFace *Self, SSL * ssl);
	void APICALL (*SSL_set_verify_result)(struct AmiSSLIFace *Self, SSL * ssl, long v);
	long APICALL (*SSL_get_verify_result)(struct AmiSSLIFace *Self, SSL * ssl);
	int APICALL (*SSL_set_ex_data)(struct AmiSSLIFace *Self, SSL * ssl, int idx, void * data);
	void * APICALL (*SSL_get_ex_data)(struct AmiSSLIFace *Self, SSL * ssl, int idx);
	int APICALL (*SSL_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*SSL_SESSION_set_ex_data)(struct AmiSSLIFace *Self, SSL_SESSION * ss, int idx, void * data);
	void * APICALL (*SSL_SESSION_get_ex_data)(struct AmiSSLIFace *Self, SSL_SESSION * ss, int idx);
	int APICALL (*SSL_SESSION_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*SSL_CTX_set_ex_data)(struct AmiSSLIFace *Self, SSL_CTX * ssl, int idx, void * data);
	void * APICALL (*SSL_CTX_get_ex_data)(struct AmiSSLIFace *Self, SSL_CTX * ssl, int idx);
	int APICALL (*SSL_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*SSL_get_ex_data_X509_STORE_CTX_idx)(struct AmiSSLIFace *Self);
	void APICALL (*SSL_CTX_set_tmp_rsa_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, RSA * (*cb)(SSL * ssl , int is_export , int keylength ) );
	void APICALL (*SSL_set_tmp_rsa_callback)(struct AmiSSLIFace *Self, SSL * ssl, RSA * (*cb)(SSL * ssl , int is_export , int keylength ) );
	void APICALL (*SSL_CTX_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL_CTX * ctx, DH * (*dh)(SSL * ssl , int is_export , int keylength ) );
	void APICALL (*SSL_set_tmp_dh_callback)(struct AmiSSLIFace *Self, SSL * ssl, DH * (*dh)(SSL * ssl , int is_export , int keylength ) );
	int APICALL (*SSL_COMP_add_compression_method)(struct AmiSSLIFace *Self, int id, COMP_METHOD * cm);
	int APICALL (*sk_num)(struct AmiSSLIFace *Self, STACK * a);
	char * APICALL (*sk_value)(struct AmiSSLIFace *Self, STACK * a, int b);
	char * APICALL (*sk_set)(struct AmiSSLIFace *Self, STACK * a, int b, char * c);
	STACK * APICALL (*sk_new)(struct AmiSSLIFace *Self, int (*cmp)() );
	void APICALL (*sk_free)(struct AmiSSLIFace *Self, STACK * a);
	void APICALL (*sk_pop_free)(struct AmiSSLIFace *Self, STACK * st, void (*func)() );
	int APICALL (*sk_insert)(struct AmiSSLIFace *Self, STACK * sk, char * data, int where);
	char * APICALL (*sk_delete)(struct AmiSSLIFace *Self, STACK * st, int loc);
	char * APICALL (*sk_delete_ptr)(struct AmiSSLIFace *Self, STACK * st, char * p);
	int APICALL (*sk_find)(struct AmiSSLIFace *Self, STACK * st, char * data);
	int APICALL (*sk_push)(struct AmiSSLIFace *Self, STACK * st, char * data);
	int APICALL (*sk_unshift)(struct AmiSSLIFace *Self, STACK * st, char * data);
	char * APICALL (*sk_shift)(struct AmiSSLIFace *Self, STACK * st);
	char * APICALL (*sk_pop)(struct AmiSSLIFace *Self, STACK * st);
	void APICALL (*sk_zero)(struct AmiSSLIFace *Self, STACK * st);
	int * APICALL (*sk_set_cmp_func)(struct AmiSSLIFace *Self, STACK * sk, int (*c)() );
	STACK * APICALL (*sk_dup)(struct AmiSSLIFace *Self, STACK * st);
	char * APICALL (*ms_time_new)(struct AmiSSLIFace *Self);
	void APICALL (*ms_time_free)(struct AmiSSLIFace *Self, char * a);
	void APICALL (*ms_time_get)(struct AmiSSLIFace *Self, char * a);
	double APICALL (*ms_time_diff)(struct AmiSSLIFace *Self, char * start, char * end);
	int APICALL (*ms_time_cmp)(struct AmiSSLIFace *Self, char * ap, char * bp);
	TXT_DB * APICALL (*TXT_DB_read)(struct AmiSSLIFace *Self, BIO * in, int num);
	long APICALL (*TXT_DB_write)(struct AmiSSLIFace *Self, BIO * out, TXT_DB * db);
	int APICALL (*TXT_DB_create_index)(struct AmiSSLIFace *Self, TXT_DB * db, int field, int (*qual)() , unsigned long (*hash)() , int (*cmp)() );
	void APICALL (*TXT_DB_free)(struct AmiSSLIFace *Self, TXT_DB * db);
	char ** APICALL (*TXT_DB_get_by_index)(struct AmiSSLIFace *Self, TXT_DB * db, int idx, char ** value);
	int APICALL (*TXT_DB_insert)(struct AmiSSLIFace *Self, TXT_DB * db, char ** value);
	void APICALL (*ERR_load_X509V3_strings)(struct AmiSSLIFace *Self);
	int APICALL (*i2d_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS * a, unsigned char ** pp);
	BASIC_CONSTRAINTS * APICALL (*d2i_BASIC_CONSTRAINTS)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS ** a, unsigned char ** pp, long length);
	BASIC_CONSTRAINTS * APICALL (*BASIC_CONSTRAINTS_new)(struct AmiSSLIFace *Self);
	void APICALL (*BASIC_CONSTRAINTS_free)(struct AmiSSLIFace *Self, BASIC_CONSTRAINTS * a);
	int APICALL (*i2d_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME * a, unsigned char ** pp);
	GENERAL_NAME * APICALL (*d2i_GENERAL_NAME)(struct AmiSSLIFace *Self, GENERAL_NAME ** a, unsigned char ** pp, long length);
	GENERAL_NAME * APICALL (*GENERAL_NAME_new)(struct AmiSSLIFace *Self);
	void APICALL (*GENERAL_NAME_free)(struct AmiSSLIFace *Self, GENERAL_NAME * a);
	STACK * APICALL (*i2v_GENERAL_NAME)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, GENERAL_NAME * gen, STACK * ret);
	int APICALL (*i2d_SXNET)(struct AmiSSLIFace *Self, SXNET * a, unsigned char ** pp);
	SXNET * APICALL (*d2i_SXNET)(struct AmiSSLIFace *Self, SXNET ** a, unsigned char ** pp, long length);
	SXNET * APICALL (*SXNET_new)(struct AmiSSLIFace *Self);
	void APICALL (*SXNET_free)(struct AmiSSLIFace *Self, SXNET * a);
	int APICALL (*i2d_SXNETID)(struct AmiSSLIFace *Self, SXNETID * a, unsigned char ** pp);
	SXNETID * APICALL (*d2i_SXNETID)(struct AmiSSLIFace *Self, SXNETID ** a, unsigned char ** pp, long length);
	SXNETID * APICALL (*SXNETID_new)(struct AmiSSLIFace *Self);
	void APICALL (*SXNETID_free)(struct AmiSSLIFace *Self, SXNETID * a);
	int APICALL (*SXNET_add_id_asc)(struct AmiSSLIFace *Self, SXNET ** psx, char * zone, char * user, int userlen);
	int APICALL (*SXNET_add_id_ulong)(struct AmiSSLIFace *Self, SXNET ** psx, unsigned long lzone, char * user, int userlen);
	int APICALL (*SXNET_add_id_INTEGER)(struct AmiSSLIFace *Self, SXNET ** psx, ASN1_INTEGER * izone, char * user, int userlen);
	ASN1_OCTET_STRING * APICALL (*SXNET_get_id_asc)(struct AmiSSLIFace *Self, SXNET * sx, char * zone);
	ASN1_OCTET_STRING * APICALL (*SXNET_get_id_ulong)(struct AmiSSLIFace *Self, SXNET * sx, unsigned long lzone);
	ASN1_OCTET_STRING * APICALL (*SXNET_get_id_INTEGER)(struct AmiSSLIFace *Self, SXNET * sx, ASN1_INTEGER * zone);
	int APICALL (*i2d_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, AUTHORITY_KEYID * a, unsigned char ** pp);
	AUTHORITY_KEYID * APICALL (*d2i_AUTHORITY_KEYID)(struct AmiSSLIFace *Self, AUTHORITY_KEYID ** a, unsigned char ** pp, long length);
	AUTHORITY_KEYID * APICALL (*AUTHORITY_KEYID_new)(struct AmiSSLIFace *Self);
	void APICALL (*AUTHORITY_KEYID_free)(struct AmiSSLIFace *Self, AUTHORITY_KEYID * a);
	int APICALL (*i2d_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD * a, unsigned char ** pp);
	PKEY_USAGE_PERIOD * APICALL (*d2i_PKEY_USAGE_PERIOD)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD ** a, unsigned char ** pp, long length);
	PKEY_USAGE_PERIOD * APICALL (*PKEY_USAGE_PERIOD_new)(struct AmiSSLIFace *Self);
	void APICALL (*PKEY_USAGE_PERIOD_free)(struct AmiSSLIFace *Self, PKEY_USAGE_PERIOD * a);
	STACK * APICALL (*GENERAL_NAMES_new)(struct AmiSSLIFace *Self);
	void APICALL (*GENERAL_NAMES_free)(struct AmiSSLIFace *Self, STACK * a);
	STACK * APICALL (*d2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_GENERAL_NAMES)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp);
	STACK * APICALL (*i2v_GENERAL_NAMES)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, STACK * gen, STACK * extlist);
	STACK * APICALL (*v2i_GENERAL_NAMES)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, STACK * nval);
	char * APICALL (*i2s_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, ASN1_OCTET_STRING * ia5);
	ASN1_OCTET_STRING * APICALL (*s2i_ASN1_OCTET_STRING)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, char * str);
	int APICALL (*i2d_ext_ku)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp);
	STACK * APICALL (*d2i_ext_ku)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length);
	void APICALL (*ext_ku_free)(struct AmiSSLIFace *Self, STACK * a);
	STACK * APICALL (*ext_ku_new)(struct AmiSSLIFace *Self);
	int APICALL (*i2d_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp);
	STACK * APICALL (*CERTIFICATEPOLICIES_new)(struct AmiSSLIFace *Self);
	void APICALL (*CERTIFICATEPOLICIES_free)(struct AmiSSLIFace *Self, STACK * a);
	STACK * APICALL (*d2i_CERTIFICATEPOLICIES)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_POLICYINFO)(struct AmiSSLIFace *Self, POLICYINFO * a, unsigned char ** pp);
	POLICYINFO * APICALL (*POLICYINFO_new)(struct AmiSSLIFace *Self);
	POLICYINFO * APICALL (*d2i_POLICYINFO)(struct AmiSSLIFace *Self, POLICYINFO ** a, unsigned char ** pp, long length);
	void APICALL (*POLICYINFO_free)(struct AmiSSLIFace *Self, POLICYINFO * a);
	int APICALL (*i2d_POLICYQUALINFO)(struct AmiSSLIFace *Self, POLICYQUALINFO * a, unsigned char ** pp);
	POLICYQUALINFO * APICALL (*POLICYQUALINFO_new)(struct AmiSSLIFace *Self);
	POLICYQUALINFO * APICALL (*d2i_POLICYQUALINFO)(struct AmiSSLIFace *Self, POLICYQUALINFO ** a, unsigned char ** pp, long length);
	void APICALL (*POLICYQUALINFO_free)(struct AmiSSLIFace *Self, POLICYQUALINFO * a);
	int APICALL (*i2d_USERNOTICE)(struct AmiSSLIFace *Self, USERNOTICE * a, unsigned char ** pp);
	USERNOTICE * APICALL (*USERNOTICE_new)(struct AmiSSLIFace *Self);
	USERNOTICE * APICALL (*d2i_USERNOTICE)(struct AmiSSLIFace *Self, USERNOTICE ** a, unsigned char ** pp, long length);
	void APICALL (*USERNOTICE_free)(struct AmiSSLIFace *Self, USERNOTICE * a);
	int APICALL (*i2d_NOTICEREF)(struct AmiSSLIFace *Self, NOTICEREF * a, unsigned char ** pp);
	NOTICEREF * APICALL (*NOTICEREF_new)(struct AmiSSLIFace *Self);
	NOTICEREF * APICALL (*d2i_NOTICEREF)(struct AmiSSLIFace *Self, NOTICEREF ** a, unsigned char ** pp, long length);
	void APICALL (*NOTICEREF_free)(struct AmiSSLIFace *Self, NOTICEREF * a);
	int APICALL (*i2d_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, STACK * a, unsigned char ** pp);
	STACK * APICALL (*CRL_DIST_POINTS_new)(struct AmiSSLIFace *Self);
	void APICALL (*CRL_DIST_POINTS_free)(struct AmiSSLIFace *Self, STACK * a);
	STACK * APICALL (*d2i_CRL_DIST_POINTS)(struct AmiSSLIFace *Self, STACK ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_DIST_POINT)(struct AmiSSLIFace *Self, DIST_POINT * a, unsigned char ** pp);
	DIST_POINT * APICALL (*DIST_POINT_new)(struct AmiSSLIFace *Self);
	DIST_POINT * APICALL (*d2i_DIST_POINT)(struct AmiSSLIFace *Self, DIST_POINT ** a, unsigned char ** pp, long length);
	void APICALL (*DIST_POINT_free)(struct AmiSSLIFace *Self, DIST_POINT * a);
	int APICALL (*i2d_DIST_POINT_NAME)(struct AmiSSLIFace *Self, DIST_POINT_NAME * a, unsigned char ** pp);
	DIST_POINT_NAME * APICALL (*DIST_POINT_NAME_new)(struct AmiSSLIFace *Self);
	void APICALL (*DIST_POINT_NAME_free)(struct AmiSSLIFace *Self, DIST_POINT_NAME * a);
	DIST_POINT_NAME * APICALL (*d2i_DIST_POINT_NAME)(struct AmiSSLIFace *Self, DIST_POINT_NAME ** a, unsigned char ** pp, long length);
	GENERAL_NAME * APICALL (*v2i_GENERAL_NAME)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * method, X509V3_CTX * ctx, CONF_VALUE * cnf);
	void APICALL (*X509V3_conf_free)(struct AmiSSLIFace *Self, CONF_VALUE * val);
	X509_EXTENSION * APICALL (*X509V3_EXT_conf_nid)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, int ext_nid, char * value);
	X509_EXTENSION * APICALL (*X509V3_EXT_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * name, char * value);
	int APICALL (*X509V3_EXT_add_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * section, X509 * cert);
	int APICALL (*X509V3_EXT_CRL_add_conf)(struct AmiSSLIFace *Self, LHASH * conf, X509V3_CTX * ctx, char * section, X509_CRL * crl);
	int APICALL (*X509V3_add_value_bool_nf)(struct AmiSSLIFace *Self, char * name, int asn1_bool, STACK ** extlist);
	int APICALL (*X509V3_get_value_bool)(struct AmiSSLIFace *Self, CONF_VALUE * value, int * asn1_bool);
	int APICALL (*X509V3_get_value_int)(struct AmiSSLIFace *Self, CONF_VALUE * value, ASN1_INTEGER ** aint);
	void APICALL (*X509V3_set_conf_lhash)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, LHASH * lhash);
	char * APICALL (*X509V3_get_string)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * name, char * section);
	STACK * APICALL (*X509V3_get_section)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * section);
	void APICALL (*X509V3_string_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, char * str);
	void APICALL (*X509V3_section_free)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, STACK * section);
	void APICALL (*X509V3_set_ctx)(struct AmiSSLIFace *Self, X509V3_CTX * ctx, X509 * issuer, X509 * subject, X509_REQ * req, X509_CRL * crl, int flags);
	int APICALL (*X509V3_add_value)(struct AmiSSLIFace *Self, const char * name, const char * value, STACK ** extlist);
	int APICALL (*X509V3_add_value_uchar)(struct AmiSSLIFace *Self, const char * name, const unsigned char * value, STACK ** extlist);
	int APICALL (*X509V3_add_value_bool)(struct AmiSSLIFace *Self, const char * name, int asn1_bool, STACK ** extlist);
	int APICALL (*X509V3_add_value_int)(struct AmiSSLIFace *Self, const char * name, ASN1_INTEGER * aint, STACK ** extlist);
	char * APICALL (*i2s_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_INTEGER * aint);
	ASN1_INTEGER * APICALL (*s2i_ASN1_INTEGER)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, char * value);
	char * APICALL (*i2s_ASN1_ENUMERATED)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_ENUMERATED * aint);
	char * APICALL (*i2s_ASN1_ENUMERATED_TABLE)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * meth, ASN1_ENUMERATED * aint);
	int APICALL (*X509V3_EXT_add)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * ext);
	int APICALL (*X509V3_EXT_add_list)(struct AmiSSLIFace *Self, X509V3_EXT_METHOD * extlist);
	int APICALL (*X509V3_EXT_add_alias)(struct AmiSSLIFace *Self, int nid_to, int nid_from);
	void APICALL (*X509V3_EXT_cleanup)(struct AmiSSLIFace *Self);
	X509V3_EXT_METHOD * APICALL (*X509V3_EXT_get)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
	X509V3_EXT_METHOD * APICALL (*X509V3_EXT_get_nid)(struct AmiSSLIFace *Self, int nid);
	int APICALL (*X509V3_add_standard_extensions)(struct AmiSSLIFace *Self);
	STACK * APICALL (*X509V3_parse_list)(struct AmiSSLIFace *Self, char * line);
	void * APICALL (*X509V3_EXT_d2i)(struct AmiSSLIFace *Self, X509_EXTENSION * ext);
	X509_EXTENSION * APICALL (*X509V3_EXT_i2d)(struct AmiSSLIFace *Self, int ext_nid, int crit, void * ext_struc);
	char * APICALL (*hex_to_string)(struct AmiSSLIFace *Self, unsigned char * buffer, long len);
	unsigned char * APICALL (*string_to_hex)(struct AmiSSLIFace *Self, char * str, long * len);
	int APICALL (*name_cmp)(struct AmiSSLIFace *Self, const char * name, const char * cmp);
	void APICALL (*X509V3_EXT_val_prn)(struct AmiSSLIFace *Self, BIO * out, STACK * val, int indent, int ml);
	int APICALL (*X509V3_EXT_print)(struct AmiSSLIFace *Self, BIO * out, X509_EXTENSION * ext, int flag, int indent);
	int APICALL (*X509_verify)(struct AmiSSLIFace *Self, X509 * a, EVP_PKEY * r);
	const char * APICALL (*X509_verify_cert_error_string)(struct AmiSSLIFace *Self, long n);
	int APICALL (*X509_REQ_verify)(struct AmiSSLIFace *Self, X509_REQ * a, EVP_PKEY * r);
	int APICALL (*X509_CRL_verify)(struct AmiSSLIFace *Self, X509_CRL * a, EVP_PKEY * r);
	int APICALL (*NETSCAPE_SPKI_verify)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a, EVP_PKEY * r);
	int APICALL (*X509_sign)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, const EVP_MD * md);
	int APICALL (*X509_REQ_sign)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey, const EVP_MD * md);
	int APICALL (*X509_CRL_sign)(struct AmiSSLIFace *Self, X509_CRL * x, EVP_PKEY * pkey, const EVP_MD * md);
	int APICALL (*NETSCAPE_SPKI_sign)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * x, EVP_PKEY * pkey, const EVP_MD * md);
	int APICALL (*X509_digest)(struct AmiSSLIFace *Self, X509 * data, EVP_MD * type, unsigned char * md, unsigned int * len);
	int APICALL (*X509_NAME_digest)(struct AmiSSLIFace *Self, X509_NAME * data, EVP_MD * type, unsigned char * md, unsigned int * len);
	X509 * APICALL (*d2i_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, X509 ** x509);
	int APICALL (*i2d_X509_bio)(struct AmiSSLIFace *Self, BIO * bp, X509 * x509);
	X509_CRL * APICALL (*d2i_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL ** crl);
	int APICALL (*i2d_X509_CRL_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * crl);
	X509_REQ * APICALL (*d2i_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ ** req);
	int APICALL (*i2d_X509_REQ_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * req);
	RSA * APICALL (*d2i_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
	int APICALL (*i2d_RSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA * rsa);
	RSA * APICALL (*d2i_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA ** rsa);
	int APICALL (*i2d_RSAPublicKey_bio)(struct AmiSSLIFace *Self, BIO * bp, RSA * rsa);
	DSA * APICALL (*d2i_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA ** dsa);
	int APICALL (*i2d_DSAPrivateKey_bio)(struct AmiSSLIFace *Self, BIO * bp, DSA * dsa);
	X509 * APICALL (*X509_dup)(struct AmiSSLIFace *Self, X509 * x509);
	X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_dup)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * xa);
	X509_EXTENSION * APICALL (*X509_EXTENSION_dup)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
	X509_CRL * APICALL (*X509_CRL_dup)(struct AmiSSLIFace *Self, X509_CRL * crl);
	X509_REQ * APICALL (*X509_REQ_dup)(struct AmiSSLIFace *Self, X509_REQ * req);
	X509_ALGOR * APICALL (*X509_ALGOR_dup)(struct AmiSSLIFace *Self, X509_ALGOR * xn);
	X509_NAME * APICALL (*X509_NAME_dup)(struct AmiSSLIFace *Self, X509_NAME * xn);
	X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_dup)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
	RSA * APICALL (*RSAPublicKey_dup)(struct AmiSSLIFace *Self, RSA * rsa);
	RSA * APICALL (*RSAPrivateKey_dup)(struct AmiSSLIFace *Self, RSA * rsa);
	int APICALL (*X509_cmp_current_time)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s);
	ASN1_UTCTIME * APICALL (*X509_gmtime_adj)(struct AmiSSLIFace *Self, ASN1_UTCTIME * s, long adj);
	const char * APICALL (*X509_get_default_cert_area)(struct AmiSSLIFace *Self);
	const char * APICALL (*X509_get_default_cert_dir)(struct AmiSSLIFace *Self);
	const char * APICALL (*X509_get_default_cert_file)(struct AmiSSLIFace *Self);
	const char * APICALL (*X509_get_default_cert_dir_env)(struct AmiSSLIFace *Self);
	const char * APICALL (*X509_get_default_cert_file_env)(struct AmiSSLIFace *Self);
	const char * APICALL (*X509_get_default_private_dir)(struct AmiSSLIFace *Self);
	X509_REQ * APICALL (*X509_to_X509_REQ)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey, EVP_MD * md);
	X509 * APICALL (*X509_REQ_to_X509)(struct AmiSSLIFace *Self, X509_REQ * r, int days, EVP_PKEY * pkey);
	void APICALL (*ERR_load_X509_strings)(struct AmiSSLIFace *Self);
	X509_ALGOR * APICALL (*X509_ALGOR_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_ALGOR_free)(struct AmiSSLIFace *Self, X509_ALGOR * a);
	int APICALL (*i2d_X509_ALGOR)(struct AmiSSLIFace *Self, X509_ALGOR * a, unsigned char ** pp);
	X509_ALGOR * APICALL (*d2i_X509_ALGOR)(struct AmiSSLIFace *Self, X509_ALGOR ** a, unsigned char ** pp, long length);
	X509_VAL * APICALL (*X509_VAL_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_VAL_free)(struct AmiSSLIFace *Self, X509_VAL * a);
	int APICALL (*i2d_X509_VAL)(struct AmiSSLIFace *Self, X509_VAL * a, unsigned char ** pp);
	X509_VAL * APICALL (*d2i_X509_VAL)(struct AmiSSLIFace *Self, X509_VAL ** a, unsigned char ** pp, long length);
	X509_PUBKEY * APICALL (*X509_PUBKEY_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_PUBKEY_free)(struct AmiSSLIFace *Self, X509_PUBKEY * a);
	int APICALL (*i2d_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_PUBKEY * a, unsigned char ** pp);
	X509_PUBKEY * APICALL (*d2i_X509_PUBKEY)(struct AmiSSLIFace *Self, X509_PUBKEY ** a, unsigned char ** pp, long length);
	int APICALL (*X509_PUBKEY_set)(struct AmiSSLIFace *Self, X509_PUBKEY ** x, EVP_PKEY * pkey);
	EVP_PKEY * APICALL (*X509_PUBKEY_get)(struct AmiSSLIFace *Self, X509_PUBKEY * key);
	int APICALL (*X509_get_pubkey_parameters)(struct AmiSSLIFace *Self, EVP_PKEY * pkey, STACK * chain);
	X509_SIG * APICALL (*X509_SIG_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_SIG_free)(struct AmiSSLIFace *Self, X509_SIG * a);
	int APICALL (*i2d_X509_SIG)(struct AmiSSLIFace *Self, X509_SIG * a, unsigned char ** pp);
	X509_SIG * APICALL (*d2i_X509_SIG)(struct AmiSSLIFace *Self, X509_SIG ** a, unsigned char ** pp, long length);
	X509_REQ_INFO * APICALL (*X509_REQ_INFO_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_REQ_INFO_free)(struct AmiSSLIFace *Self, X509_REQ_INFO * a);
	int APICALL (*i2d_X509_REQ_INFO)(struct AmiSSLIFace *Self, X509_REQ_INFO * a, unsigned char ** pp);
	X509_REQ_INFO * APICALL (*d2i_X509_REQ_INFO)(struct AmiSSLIFace *Self, X509_REQ_INFO ** a, unsigned char ** pp, long length);
	X509_REQ * APICALL (*X509_REQ_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_REQ_free)(struct AmiSSLIFace *Self, X509_REQ * a);
	int APICALL (*i2d_X509_REQ)(struct AmiSSLIFace *Self, X509_REQ * a, unsigned char ** pp);
	X509_REQ * APICALL (*d2i_X509_REQ)(struct AmiSSLIFace *Self, X509_REQ ** a, unsigned char ** pp, long length);
	X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_ATTRIBUTE_free)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * a);
	int APICALL (*i2d_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, X509_ATTRIBUTE * a, unsigned char ** pp);
	X509_ATTRIBUTE * APICALL (*d2i_X509_ATTRIBUTE)(struct AmiSSLIFace *Self, X509_ATTRIBUTE ** a, unsigned char ** pp, long length);
	X509_ATTRIBUTE * APICALL (*X509_ATTRIBUTE_create)(struct AmiSSLIFace *Self, int nid, int atrtype, void * value);
	X509_EXTENSION * APICALL (*X509_EXTENSION_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_EXTENSION_free)(struct AmiSSLIFace *Self, X509_EXTENSION * a);
	int APICALL (*i2d_X509_EXTENSION)(struct AmiSSLIFace *Self, X509_EXTENSION * a, unsigned char ** pp);
	X509_EXTENSION * APICALL (*d2i_X509_EXTENSION)(struct AmiSSLIFace *Self, X509_EXTENSION ** a, unsigned char ** pp, long length);
	X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_NAME_ENTRY_free)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * a);
	int APICALL (*i2d_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * a, unsigned char ** pp);
	X509_NAME_ENTRY * APICALL (*d2i_X509_NAME_ENTRY)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** a, unsigned char ** pp, long length);
	X509_NAME * APICALL (*X509_NAME_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_NAME_free)(struct AmiSSLIFace *Self, X509_NAME * a);
	int APICALL (*i2d_X509_NAME)(struct AmiSSLIFace *Self, X509_NAME * a, unsigned char ** pp);
	X509_NAME * APICALL (*d2i_X509_NAME)(struct AmiSSLIFace *Self, X509_NAME ** a, unsigned char ** pp, long length);
	int APICALL (*X509_NAME_set)(struct AmiSSLIFace *Self, X509_NAME ** xn, X509_NAME * name);
	X509_CINF * APICALL (*X509_CINF_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_CINF_free)(struct AmiSSLIFace *Self, X509_CINF * a);
	int APICALL (*i2d_X509_CINF)(struct AmiSSLIFace *Self, X509_CINF * a, unsigned char ** pp);
	X509_CINF * APICALL (*d2i_X509_CINF)(struct AmiSSLIFace *Self, X509_CINF ** a, unsigned char ** pp, long length);
	X509 * APICALL (*X509_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_free)(struct AmiSSLIFace *Self, X509 * a);
	int APICALL (*i2d_X509)(struct AmiSSLIFace *Self, X509 * a, unsigned char ** pp);
	X509 * APICALL (*d2i_X509)(struct AmiSSLIFace *Self, X509 ** a, unsigned char ** pp, long length);
	X509_REVOKED * APICALL (*X509_REVOKED_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_REVOKED_free)(struct AmiSSLIFace *Self, X509_REVOKED * a);
	int APICALL (*i2d_X509_REVOKED)(struct AmiSSLIFace *Self, X509_REVOKED * a, unsigned char ** pp);
	X509_REVOKED * APICALL (*d2i_X509_REVOKED)(struct AmiSSLIFace *Self, X509_REVOKED ** a, unsigned char ** pp, long length);
	X509_CRL_INFO * APICALL (*X509_CRL_INFO_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_CRL_INFO_free)(struct AmiSSLIFace *Self, X509_CRL_INFO * a);
	int APICALL (*i2d_X509_CRL_INFO)(struct AmiSSLIFace *Self, X509_CRL_INFO * a, unsigned char ** pp);
	X509_CRL_INFO * APICALL (*d2i_X509_CRL_INFO)(struct AmiSSLIFace *Self, X509_CRL_INFO ** a, unsigned char ** pp, long length);
	X509_CRL * APICALL (*X509_CRL_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_CRL_free)(struct AmiSSLIFace *Self, X509_CRL * a);
	int APICALL (*i2d_X509_CRL)(struct AmiSSLIFace *Self, X509_CRL * a, unsigned char ** pp);
	X509_CRL * APICALL (*d2i_X509_CRL)(struct AmiSSLIFace *Self, X509_CRL ** a, unsigned char ** pp, long length);
	X509_PKEY * APICALL (*X509_PKEY_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_PKEY_free)(struct AmiSSLIFace *Self, X509_PKEY * a);
	int APICALL (*i2d_X509_PKEY)(struct AmiSSLIFace *Self, X509_PKEY * a, unsigned char ** pp);
	X509_PKEY * APICALL (*d2i_X509_PKEY)(struct AmiSSLIFace *Self, X509_PKEY ** a, unsigned char ** pp, long length);
	NETSCAPE_SPKI * APICALL (*NETSCAPE_SPKI_new)(struct AmiSSLIFace *Self);
	void APICALL (*NETSCAPE_SPKI_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a);
	int APICALL (*i2d_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, NETSCAPE_SPKI * a, unsigned char ** pp);
	NETSCAPE_SPKI * APICALL (*d2i_NETSCAPE_SPKI)(struct AmiSSLIFace *Self, NETSCAPE_SPKI ** a, unsigned char ** pp, long length);
	NETSCAPE_SPKAC * APICALL (*NETSCAPE_SPKAC_new)(struct AmiSSLIFace *Self);
	void APICALL (*NETSCAPE_SPKAC_free)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC * a);
	int APICALL (*i2d_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC * a, unsigned char ** pp);
	NETSCAPE_SPKAC * APICALL (*d2i_NETSCAPE_SPKAC)(struct AmiSSLIFace *Self, NETSCAPE_SPKAC ** a, unsigned char ** pp, long length);
	int APICALL (*i2d_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE * a, unsigned char ** pp);
	NETSCAPE_CERT_SEQUENCE * APICALL (*NETSCAPE_CERT_SEQUENCE_new)(struct AmiSSLIFace *Self);
	NETSCAPE_CERT_SEQUENCE * APICALL (*d2i_NETSCAPE_CERT_SEQUENCE)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE ** a, unsigned char ** pp, long length);
	void APICALL (*NETSCAPE_CERT_SEQUENCE_free)(struct AmiSSLIFace *Self, NETSCAPE_CERT_SEQUENCE * a);
	X509_INFO * APICALL (*X509_INFO_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_INFO_free)(struct AmiSSLIFace *Self, X509_INFO * a);
	char * APICALL (*X509_NAME_oneline)(struct AmiSSLIFace *Self, X509_NAME * a, char * buf, int size);
	int APICALL (*ASN1_verify)(struct AmiSSLIFace *Self, int (*i2d)() , X509_ALGOR * algor1, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey);
	int APICALL (*ASN1_digest)(struct AmiSSLIFace *Self, int (*i2d)() , EVP_MD * type, char * data, unsigned char * md, unsigned int * len);
	int APICALL (*ASN1_sign)(struct AmiSSLIFace *Self, int (*i2d)() , X509_ALGOR * algor1, X509_ALGOR * algor2, ASN1_BIT_STRING * signature, char * data, EVP_PKEY * pkey, const EVP_MD * type);
	int APICALL (*X509_set_version)(struct AmiSSLIFace *Self, X509 * x, long version);
	int APICALL (*X509_set_serialNumber)(struct AmiSSLIFace *Self, X509 * x, ASN1_INTEGER * serial);
	ASN1_INTEGER * APICALL (*X509_get_serialNumber)(struct AmiSSLIFace *Self, X509 * x);
	int APICALL (*X509_set_issuer_name)(struct AmiSSLIFace *Self, X509 * x, X509_NAME * name);
	X509_NAME * APICALL (*X509_get_issuer_name)(struct AmiSSLIFace *Self, X509 * a);
	int APICALL (*X509_set_subject_name)(struct AmiSSLIFace *Self, X509 * x, X509_NAME * name);
	X509_NAME * APICALL (*X509_get_subject_name)(struct AmiSSLIFace *Self, X509 * a);
	int APICALL (*X509_set_notBefore)(struct AmiSSLIFace *Self, X509 * x, ASN1_UTCTIME * tm);
	int APICALL (*X509_set_notAfter)(struct AmiSSLIFace *Self, X509 * x, ASN1_UTCTIME * tm);
	int APICALL (*X509_set_pubkey)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pkey);
	EVP_PKEY * APICALL (*X509_get_pubkey)(struct AmiSSLIFace *Self, X509 * x);
	int APICALL (*X509_certificate_type)(struct AmiSSLIFace *Self, X509 * x, EVP_PKEY * pubkey);
	int APICALL (*X509_REQ_set_version)(struct AmiSSLIFace *Self, X509_REQ * x, long version);
	int APICALL (*X509_REQ_set_subject_name)(struct AmiSSLIFace *Self, X509_REQ * req, X509_NAME * name);
	int APICALL (*X509_REQ_set_pubkey)(struct AmiSSLIFace *Self, X509_REQ * x, EVP_PKEY * pkey);
	EVP_PKEY * APICALL (*X509_REQ_get_pubkey)(struct AmiSSLIFace *Self, X509_REQ * req);
	int APICALL (*X509_check_private_key)(struct AmiSSLIFace *Self, X509 * x509, EVP_PKEY * pkey);
	int APICALL (*X509_issuer_and_serial_cmp)(struct AmiSSLIFace *Self, X509 * a, X509 * b);
	unsigned long APICALL (*X509_issuer_and_serial_hash)(struct AmiSSLIFace *Self, X509 * a);
	int APICALL (*X509_issuer_name_cmp)(struct AmiSSLIFace *Self, X509 * a, X509 * b);
	unsigned long APICALL (*X509_issuer_name_hash)(struct AmiSSLIFace *Self, X509 * a);
	int APICALL (*X509_subject_name_cmp)(struct AmiSSLIFace *Self, X509 * a, X509 * b);
	unsigned long APICALL (*X509_subject_name_hash)(struct AmiSSLIFace *Self, X509 * x);
	int APICALL (*X509_NAME_cmp)(struct AmiSSLIFace *Self, X509_NAME * a, X509_NAME * b);
	unsigned long APICALL (*X509_NAME_hash)(struct AmiSSLIFace *Self, X509_NAME * x);
	int APICALL (*X509_CRL_cmp)(struct AmiSSLIFace *Self, X509_CRL * a, X509_CRL * b);
	int APICALL (*X509_NAME_print)(struct AmiSSLIFace *Self, BIO * bp, X509_NAME * name, int obase);
	int APICALL (*X509_print)(struct AmiSSLIFace *Self, BIO * bp, X509 * x);
	int APICALL (*X509_CRL_print)(struct AmiSSLIFace *Self, BIO * bp, X509_CRL * x);
	int APICALL (*X509_REQ_print)(struct AmiSSLIFace *Self, BIO * bp, X509_REQ * req);
	int APICALL (*X509_NAME_entry_count)(struct AmiSSLIFace *Self, X509_NAME * name);
	int APICALL (*X509_NAME_get_text_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, char * buf, int len);
	int APICALL (*X509_NAME_get_text_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, ASN1_OBJECT * obj, char * buf, int len);
	int APICALL (*X509_NAME_get_index_by_NID)(struct AmiSSLIFace *Self, X509_NAME * name, int nid, int lastpos);
	int APICALL (*X509_NAME_get_index_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME * name, ASN1_OBJECT * obj, int lastpos);
	X509_NAME_ENTRY * APICALL (*X509_NAME_get_entry)(struct AmiSSLIFace *Self, X509_NAME * name, int loc);
	X509_NAME_ENTRY * APICALL (*X509_NAME_delete_entry)(struct AmiSSLIFace *Self, X509_NAME * name, int loc);
	int APICALL (*X509_NAME_add_entry)(struct AmiSSLIFace *Self, X509_NAME * name, X509_NAME_ENTRY * ne, int loc, int set);
	X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_create_by_NID)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, int nid, int type, unsigned char * bytes, int len);
	X509_NAME_ENTRY * APICALL (*X509_NAME_ENTRY_create_by_OBJ)(struct AmiSSLIFace *Self, X509_NAME_ENTRY ** ne, ASN1_OBJECT * obj, int type, unsigned char * bytes, int len);
	int APICALL (*X509_NAME_ENTRY_set_object)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, ASN1_OBJECT * obj);
	int APICALL (*X509_NAME_ENTRY_set_data)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne, int type, unsigned char * bytes, int len);
	ASN1_OBJECT * APICALL (*X509_NAME_ENTRY_get_object)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
	ASN1_STRING * APICALL (*X509_NAME_ENTRY_get_data)(struct AmiSSLIFace *Self, X509_NAME_ENTRY * ne);
	int APICALL (*X509v3_get_ext_count)(struct AmiSSLIFace *Self, const STACK * x);
	int APICALL (*X509v3_get_ext_by_NID)(struct AmiSSLIFace *Self, const STACK * x, int nid, int lastpos);
	int APICALL (*X509v3_get_ext_by_OBJ)(struct AmiSSLIFace *Self, const STACK * x, ASN1_OBJECT * obj, int lastpos);
	int APICALL (*X509v3_get_ext_by_critical)(struct AmiSSLIFace *Self, const STACK * x, int crit, int lastpos);
	X509_EXTENSION * APICALL (*X509v3_get_ext)(struct AmiSSLIFace *Self, const STACK * x, int loc);
	X509_EXTENSION * APICALL (*X509v3_delete_ext)(struct AmiSSLIFace *Self, STACK * x, int loc);
	STACK * APICALL (*X509v3_add_ext)(struct AmiSSLIFace *Self, STACK ** x, X509_EXTENSION * ex, int loc);
	int APICALL (*X509_get_ext_count)(struct AmiSSLIFace *Self, X509 * x);
	int APICALL (*X509_get_ext_by_NID)(struct AmiSSLIFace *Self, X509 * x, int nid, int lastpos);
	int APICALL (*X509_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509 * x, ASN1_OBJECT * obj, int lastpos);
	int APICALL (*X509_get_ext_by_critical)(struct AmiSSLIFace *Self, X509 * x, int crit, int lastpos);
	X509_EXTENSION * APICALL (*X509_get_ext)(struct AmiSSLIFace *Self, X509 * x, int loc);
	X509_EXTENSION * APICALL (*X509_delete_ext)(struct AmiSSLIFace *Self, X509 * x, int loc);
	int APICALL (*X509_add_ext)(struct AmiSSLIFace *Self, X509 * x, X509_EXTENSION * ex, int loc);
	int APICALL (*X509_CRL_get_ext_count)(struct AmiSSLIFace *Self, X509_CRL * x);
	int APICALL (*X509_CRL_get_ext_by_NID)(struct AmiSSLIFace *Self, X509_CRL * x, int nid, int lastpos);
	int APICALL (*X509_CRL_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509_CRL * x, ASN1_OBJECT * obj, int lastpos);
	int APICALL (*X509_CRL_get_ext_by_critical)(struct AmiSSLIFace *Self, X509_CRL * x, int crit, int lastpos);
	X509_EXTENSION * APICALL (*X509_CRL_get_ext)(struct AmiSSLIFace *Self, X509_CRL * x, int loc);
	X509_EXTENSION * APICALL (*X509_CRL_delete_ext)(struct AmiSSLIFace *Self, X509_CRL * x, int loc);
	int APICALL (*X509_CRL_add_ext)(struct AmiSSLIFace *Self, X509_CRL * x, X509_EXTENSION * ex, int loc);
	int APICALL (*X509_REVOKED_get_ext_count)(struct AmiSSLIFace *Self, X509_REVOKED * x);
	int APICALL (*X509_REVOKED_get_ext_by_NID)(struct AmiSSLIFace *Self, X509_REVOKED * x, int nid, int lastpos);
	int APICALL (*X509_REVOKED_get_ext_by_OBJ)(struct AmiSSLIFace *Self, X509_REVOKED * x, ASN1_OBJECT * obj, int lastpos);
	int APICALL (*X509_REVOKED_get_ext_by_critical)(struct AmiSSLIFace *Self, X509_REVOKED * x, int crit, int lastpos);
	X509_EXTENSION * APICALL (*X509_REVOKED_get_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, int loc);
	X509_EXTENSION * APICALL (*X509_REVOKED_delete_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, int loc);
	int APICALL (*X509_REVOKED_add_ext)(struct AmiSSLIFace *Self, X509_REVOKED * x, X509_EXTENSION * ex, int loc);
	X509_EXTENSION * APICALL (*X509_EXTENSION_create_by_NID)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, int nid, int crit, ASN1_OCTET_STRING * data);
	X509_EXTENSION * APICALL (*X509_EXTENSION_create_by_OBJ)(struct AmiSSLIFace *Self, X509_EXTENSION ** ex, ASN1_OBJECT * obj, int crit, ASN1_OCTET_STRING * data);
	int APICALL (*X509_EXTENSION_set_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, ASN1_OBJECT * obj);
	int APICALL (*X509_EXTENSION_set_critical)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, int crit);
	int APICALL (*X509_EXTENSION_set_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ex, ASN1_OCTET_STRING * data);
	ASN1_OBJECT * APICALL (*X509_EXTENSION_get_object)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
	ASN1_OCTET_STRING * APICALL (*X509_EXTENSION_get_data)(struct AmiSSLIFace *Self, X509_EXTENSION * ne);
	int APICALL (*X509_EXTENSION_get_critical)(struct AmiSSLIFace *Self, X509_EXTENSION * ex);
	int APICALL (*X509_verify_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	X509 * APICALL (*X509_find_by_issuer_and_serial)(struct AmiSSLIFace *Self, STACK * sk, X509_NAME * name, ASN1_INTEGER * serial);
	X509 * APICALL (*X509_find_by_subject)(struct AmiSSLIFace *Self, STACK * sk, X509_NAME * name);
	int APICALL (*i2d_PBEPARAM)(struct AmiSSLIFace *Self, PBEPARAM * a, unsigned char ** pp);
	PBEPARAM * APICALL (*PBEPARAM_new)(struct AmiSSLIFace *Self);
	PBEPARAM * APICALL (*d2i_PBEPARAM)(struct AmiSSLIFace *Self, PBEPARAM ** a, unsigned char ** pp, long length);
	void APICALL (*PBEPARAM_free)(struct AmiSSLIFace *Self, PBEPARAM * a);
	X509_ALGOR * APICALL (*PKCS5_pbe_set)(struct AmiSSLIFace *Self, int alg, int iter, unsigned char * salt, int saltlen);
	int APICALL (*i2d_PBKDF2PARAM)(struct AmiSSLIFace *Self, PBKDF2PARAM * a, unsigned char ** pp);
	PBKDF2PARAM * APICALL (*PBKDF2PARAM_new)(struct AmiSSLIFace *Self);
	PBKDF2PARAM * APICALL (*d2i_PBKDF2PARAM)(struct AmiSSLIFace *Self, PBKDF2PARAM ** a, unsigned char ** pp, long length);
	void APICALL (*PBKDF2PARAM_free)(struct AmiSSLIFace *Self, PBKDF2PARAM * a);
	int APICALL (*i2d_PBE2PARAM)(struct AmiSSLIFace *Self, PBE2PARAM * a, unsigned char ** pp);
	PBE2PARAM * APICALL (*PBE2PARAM_new)(struct AmiSSLIFace *Self);
	PBE2PARAM * APICALL (*d2i_PBE2PARAM)(struct AmiSSLIFace *Self, PBE2PARAM ** a, unsigned char ** pp, long length);
	void APICALL (*PBE2PARAM_free)(struct AmiSSLIFace *Self, PBE2PARAM * a);
	int APICALL (*i2d_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * a, unsigned char ** pp);
	PKCS8_PRIV_KEY_INFO * APICALL (*PKCS8_PRIV_KEY_INFO_new)(struct AmiSSLIFace *Self);
	PKCS8_PRIV_KEY_INFO * APICALL (*d2i_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO ** a, unsigned char ** pp, long length);
	void APICALL (*PKCS8_PRIV_KEY_INFO_free)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * a);
	EVP_PKEY * APICALL (*EVP_PKCS82PKEY)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8);
	PKCS8_PRIV_KEY_INFO * APICALL (*EVP_PKEY2PKCS8)(struct AmiSSLIFace *Self, EVP_PKEY * pkey);
	PKCS8_PRIV_KEY_INFO * APICALL (*PKCS8_set_broken)(struct AmiSSLIFace *Self, PKCS8_PRIV_KEY_INFO * p8, int broken);
	X509_OBJECT * APICALL (*X509_OBJECT_retrieve_by_subject)(struct AmiSSLIFace *Self, LHASH * h, int type, X509_NAME * name);
	void APICALL (*X509_OBJECT_up_ref_count)(struct AmiSSLIFace *Self, X509_OBJECT * a);
	void APICALL (*X509_OBJECT_free_contents)(struct AmiSSLIFace *Self, X509_OBJECT * a);
	X509_STORE * APICALL (*X509_STORE_new)(struct AmiSSLIFace *Self);
	void APICALL (*X509_STORE_free)(struct AmiSSLIFace *Self, X509_STORE * v);
	void APICALL (*X509_STORE_CTX_init)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, X509_STORE * store, X509 * x509, STACK * chain);
	void APICALL (*X509_STORE_CTX_cleanup)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	X509_LOOKUP * APICALL (*X509_STORE_add_lookup)(struct AmiSSLIFace *Self, X509_STORE * v, X509_LOOKUP_METHOD * m);
	X509_LOOKUP_METHOD * APICALL (*X509_LOOKUP_hash_dir)(struct AmiSSLIFace *Self);
	X509_LOOKUP_METHOD * APICALL (*X509_LOOKUP_file)(struct AmiSSLIFace *Self);
	int APICALL (*X509_STORE_add_cert)(struct AmiSSLIFace *Self, X509_STORE * ctx, X509 * x);
	int APICALL (*X509_STORE_add_crl)(struct AmiSSLIFace *Self, X509_STORE * ctx, X509_CRL * x);
	int APICALL (*X509_STORE_get_by_subject)(struct AmiSSLIFace *Self, X509_STORE_CTX * vs, int type, X509_NAME * name, X509_OBJECT * ret);
	int APICALL (*X509_LOOKUP_ctrl)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int cmd, const char * argc, long argl, char ** ret);
	int APICALL (*X509_load_cert_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
	int APICALL (*X509_load_crl_file)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, const char * file, int type);
	X509_LOOKUP * APICALL (*X509_LOOKUP_new)(struct AmiSSLIFace *Self, X509_LOOKUP_METHOD * method);
	void APICALL (*X509_LOOKUP_free)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	int APICALL (*X509_LOOKUP_init)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	int APICALL (*X509_LOOKUP_by_subject)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, X509_NAME * name, X509_OBJECT * ret);
	int APICALL (*X509_LOOKUP_by_issuer_serial)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, X509_NAME * name, ASN1_INTEGER * serial, X509_OBJECT * ret);
	int APICALL (*X509_LOOKUP_by_fingerprint)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, unsigned char * bytes, int len, X509_OBJECT * ret);
	int APICALL (*X509_LOOKUP_by_alias)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx, int type, char * str, int len, X509_OBJECT * ret);
	int APICALL (*X509_LOOKUP_shutdown)(struct AmiSSLIFace *Self, X509_LOOKUP * ctx);
	int APICALL (*X509_STORE_load_locations)(struct AmiSSLIFace *Self, X509_STORE * ctx, const char * file, const char * dir);
	int APICALL (*X509_STORE_set_default_paths)(struct AmiSSLIFace *Self, X509_STORE * ctx);
	int APICALL (*X509_STORE_CTX_get_ex_new_index)(struct AmiSSLIFace *Self, long argl, char * argp, int (*new_func)() , int (*dup_func)() , void (*free_func)() );
	int APICALL (*X509_STORE_CTX_set_ex_data)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int idx, void * data);
	void * APICALL (*X509_STORE_CTX_get_ex_data)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int idx);
	int APICALL (*X509_STORE_CTX_get_error)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	void APICALL (*X509_STORE_CTX_set_error)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx, int s);
	int APICALL (*X509_STORE_CTX_get_error_depth)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	X509 * APICALL (*X509_STORE_CTX_get_current_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	STACK * APICALL (*X509_STORE_CTX_get_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * ctx);
	void APICALL (*X509_STORE_CTX_set_cert)(struct AmiSSLIFace *Self, X509_STORE_CTX * c, X509 * x);
	void APICALL (*X509_STORE_CTX_set_chain)(struct AmiSSLIFace *Self, X509_STORE_CTX * c, STACK * sk);
	size_t APICALL (*BIO_ctrl_pending)(struct AmiSSLIFace *Self, BIO * b);
	size_t APICALL (*BIO_ctrl_wpending)(struct AmiSSLIFace *Self, BIO * b);
	size_t APICALL (*BIO_ctrl_get_write_guarantee)(struct AmiSSLIFace *Self, BIO * b);
	size_t APICALL (*BIO_ctrl_get_read_request)(struct AmiSSLIFace *Self, BIO * b);
	BIO_METHOD * APICALL (*BIO_s_bio)(struct AmiSSLIFace *Self);
	int APICALL (*BIO_new_bio_pair)(struct AmiSSLIFace *Self, BIO ** bio1, size_t writebuf1, BIO ** bio2, size_t writebuf2);
	int APICALL (*CRYPTO_num_locks)(struct AmiSSLIFace *Self);
	DH * APICALL (*DSA_dup_DH)(struct AmiSSLIFace *Self, DSA * r);
	int APICALL (*PKCS5_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER * cipher, EVP_MD * md, int en_de);
	int APICALL (*PKCS5_PBKDF2_HMAC_SHA1)(struct AmiSSLIFace *Self, const char * pass, int passlen, unsigned char * salt, int saltlen, int iter, int keylen, unsigned char * out);
	int APICALL (*PKCS5_v2_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER * cipher, EVP_MD * md, int en_de);
	void APICALL (*PKCS5_PBE_add)(struct AmiSSLIFace *Self);
	int APICALL (*EVP_PBE_CipherInit)(struct AmiSSLIFace *Self, ASN1_OBJECT * pbe_obj, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER_CTX * ctx, int en_de);
	int APICALL (*EVP_PBE_alg_add)(struct AmiSSLIFace *Self, int nid, EVP_CIPHER * cipher, EVP_MD * md, EVP_PBE_KEYGEN * (*keygen)(struct evp_cipher_ctx_st * ctx , const char * pass , int passlen , struct asn1_type_st * param , struct evp_cipher_st * cipher , struct env_md_st * md , int en_de ) );
	void APICALL (*EVP_PBE_cleanup)(struct AmiSSLIFace *Self);
	int APICALL (*OBJ_obj2txt)(struct AmiSSLIFace *Self, char * buf, int buf_len, ASN1_OBJECT * a, int no_name);
	int APICALL (*PKCS7_signatureVerify)(struct AmiSSLIFace *Self, BIO * bio, PKCS7 * p7, PKCS7_SIGNER_INFO * si, X509 * x509);
	int APICALL (*RSA_check_key)(struct AmiSSLIFace *Self, RSA * rsa);
	RSA_METHOD * APICALL (*RSA_get_default_method)(struct AmiSSLIFace *Self);
	RSA_METHOD * APICALL (*RSA_get_method)(struct AmiSSLIFace *Self, RSA * rsa);
	RSA_METHOD * APICALL (*RSA_set_method)(struct AmiSSLIFace *Self, RSA * rsa, RSA_METHOD * meth);
	void APICALL (*sk_sort)(struct AmiSSLIFace *Self, STACK * st);
	void APICALL (*SSL_CTX_set_default_passwd_cb_userdata)(struct AmiSSLIFace *Self, SSL_CTX * ctx, void * u);
	X509_SIG * APICALL (*d2i_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** p8);
	int APICALL (*i2d_PKCS8_bio)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG * p8);
	PKCS8_PRIV_KEY_INFO * APICALL (*d2i_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** p8inf);
	int APICALL (*i2d_PKCS8_PRIV_KEY_INFO_bio)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO * p8inf);
	X509_ALGOR * APICALL (*PKCS5_pbe2_set)(struct AmiSSLIFace *Self, const EVP_CIPHER * cipher, int iter, unsigned char * salt, int saltlen);
	int APICALL (*PKCS12_PBE_keyivgen)(struct AmiSSLIFace *Self, EVP_CIPHER_CTX * ctx, const char * pass, int passlen, ASN1_TYPE * param, EVP_CIPHER * cipher, EVP_MD * md_type, int en_de);
	X509_SIG * APICALL (*PEM_read_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	PKCS8_PRIV_KEY_INFO * APICALL (*PEM_read_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO ** x, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	int APICALL (*PEM_write_bio_PKCS8)(struct AmiSSLIFace *Self, BIO * bp, X509_SIG * x);
	int APICALL (*PEM_write_bio_PKCS8_PRIV_KEY_INFO)(struct AmiSSLIFace *Self, BIO * bp, PKCS8_PRIV_KEY_INFO * x);
	int APICALL (*PEM_write_bio_PKCS8PrivateKey)(struct AmiSSLIFace *Self, BIO * fp, EVP_PKEY * x, const EVP_CIPHER * enc, char * kstr, int klen, pem_password_cb * (*cb)(char * buf , int size , int rwflag , void * userdata ) , void * u);
	LHASH * APICALL (*CONF_load_bio)(struct AmiSSLIFace *Self, LHASH * conf, BIO * bp, long * eline);
};

#endif /* AMISSL_INTERFACE_DEF_H */
