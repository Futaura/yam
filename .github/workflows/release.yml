name: release
on:
  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: cleanup old action artifacts
      run: .github/workflows/purge_artifacts.sh ${{ secrets.GITHUB_TOKEN }}

  build_adtools:
    if: false
    runs-on: ubuntu-latest
    timeout-minutes: 480
    needs: init

    strategy:
      fail-fast: false
      matrix:
        #platform: [ os3, os4, mos, aros-ppc, aros-i386, aros-x86_64, aros-arm ]
        platform: [ os3, mos ]

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: setup dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update -y -qq || true
        sudo apt-get -qq install libc6:i386
        sudo ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.6 /usr/lib/x86_64-linux-gnu/libmpfr.so.4

    - name: setup env
      run : |
        echo "GITHUB_SHA7=$(echo ${GITHUB_SHA::7})" >>$GITHUB_ENV
        echo YAMVER=$(grep '#define __YAM_VERSION' src/YAM_global.c | cut -d '"' -f2 | tr -d ".") >>$GITHUB_ENV

    - name: install adtools build env
      run: |
        DOWNLOAD_PATH=https://github.com/adtools/adtools/releases/download/20170213
        curl -L ${DOWNLOAD_PATH}/adtools-utils.tar.bz2 | sudo tar xj -C /
        if [[ ${{ matrix.platform }} =~ os3 ]]; then COMPILER=adtools-m68k-amigaos.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ os4 ]]; then COMPILER=adtools-ppc-amigaos.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ mos ]]; then COMPILER=adtools-ppc-morphos.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ aros-ppc ]]; then COMPILER=adtools-ppc-aros.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ aros-i386 ]]; then COMPILER=adtools-i386-aros.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ aros-x86_64 ]]; then COMPILER=adtools-x86_64-aros.tar.bz2 ; fi
        if [[ ${{ matrix.platform }} =~ aros-arm ]]; then COMPILER=adtools-arm-aros.tar.bz2 ; fi
        curl -L ${DOWNLOAD_PATH}/${COMPILER} | sudo tar xj -C /

    - name: build YAM release
      timeout-minutes: 480
      run: |
        export PATH=/usr/local/amiga/bin:/opt/m68k-amigaos/bin:/opt/ppc-amigaos/bin:/opt/ppc-morphos/bin:${PATH}
        ./scripts/mkdist.sh release ${{ matrix.platform }}

    - name: upload release files as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        path: YAM*-*-*.lha*
        name: YAM${{ env.YAMVER }}-${{ matrix.platform }}-${{ env.GITHUB_SHA7 }}.lha

  build_docker:
    if: false
    runs-on: ubuntu-latest
    timeout-minutes: 480
    needs: init
    defaults:
      run:
        shell: bash
    container:
      image: walkero/amigagccondocker:${{ matrix.platform }}
      volumes:
        - '${{ github.workspace }}:/opt/code'

    strategy:
      fail-fast: false
      matrix:
        platform: [ os4-gcc11 ]

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: setup env
      run : |
        echo "GITHUB_SHA7=$(echo ${GITHUB_SHA::7})" >>$GITHUB_ENV
        echo YAMVER=$(grep '#define __YAM_VERSION' src/YAM_global.c | cut -d '"' -f2 | tr -d ".") >>$GITHUB_ENV

    - name: build YAM release
      timeout-minutes: 480
      run: |
        if [[ ${{ matrix.platform }} =~ os4-gcc11 ]]; then OS=os4 ; fi
        if [[ ${{ matrix.platform }} =~ mos-gcc ]]; then OS=mos ; fi
        ./scripts/mkdist.sh release ${OS}

    - name: upload release files as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        path: YAM*-*-*.lha*
        name: YAM${{ env.YAMVER }}-${{ matrix.platform }}-${{ env.GITHUB_SHA7 }}.lha

  build_docker:
    runs-on: ubuntu-latest
    timeout-minutes: 480
    needs: init
    defaults:
      run:
        shell: bash
    container:
      image: amigadev/crosstools:ppc-morphos
      volumes:
        - '${{ github.workspace }}:/opt/work'

    strategy:
      fail-fast: false
      matrix:
        platform: [ ppc-morphos ]

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: setup env
      run : |
        echo "GITHUB_SHA7=$(echo ${GITHUB_SHA::7})" >>$GITHUB_ENV
        echo YAMVER=$(grep '#define __YAM_VERSION' src/YAM_global.c | cut -d '"' -f2 | tr -d ".") >>$GITHUB_ENV

    - name: build YAM release
      timeout-minutes: 480
      run: |
        if [[ ${{ matrix.platform }} =~ os4-gcc11 ]]; then OS=os4 ; fi
        if [[ ${{ matrix.platform }} =~ ppc-morphos ]]; then OS=mos ; fi
        ./scripts/mkdist.sh release ${OS}

    - name: upload release files as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        path: YAM*-*-*.lha*
        name: YAM${{ env.YAMVER }}-${{ matrix.platform }}-${{ env.GITHUB_SHA7 }}.lha
